{"version":3,"file":"static/js/360.290695107.chunk.js","mappings":"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S,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACTC,MAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACTC,MAAO,IACPC,MAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,KACTC,MAAO,IACPC,MAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACTC,MAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACTC,MAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACTC,MAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACTC,MAAO,IACPC,MAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACTC,MAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACTC,MAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACTC,MAAO,IACP,QAAS,IACT,QAAS,IACTC,MAAO,IACPC,MAAO,IACPC,MAAO,IACP,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACTC,MAAO,IACPC,MAAO,IACP,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,IACT,QAAS,KACT,QAAS,KACT,QAAS,KACT,QAAS,IACTC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,KACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,KACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,KACV,SAAU,IACV,SAAU,IACV,SAAU,KACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,KACV,SAAU,KACV,SAAU,KACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,KACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,KACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,KACV,SAAU,IACV,SAAU,IACV,SAAU,KACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,KACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,KACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,KACV,SAAU,KACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACR,SAAU,IACV,SAAU,IACV,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,KACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,KACX,UAAW,KACX,UAAW,IACX,UAAW,KACX,UAAW,KACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,KACX,UAAW,KACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,KACX,UAAW,KACX,UAAW,KACX,UAAW,KACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,KACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,KACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,KACZ,WAAY,IACZ,WAAY,IACZ,WAAY,KACZ,WAAY,KACZ,WAAY,KACZ,WAAY,IACZ,WAAY,KACZ,WAAY,KACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,KACb,YAAa,IACb,YAAa,KACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,KACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,KACd,aAAc,IACd,aAAc,IACd,aAAc,KACd,aAAc,KACd,aAAc,IACd,aAAc,IACd,aAAc,KACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,aAAc,IACd,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,KACf,cAAe,KACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,KACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,KAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,KAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,KACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,KACjB,gBAAiB,KACjB,gBAAiB,IACjB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,KAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,KAClB,iBAAkB,KAClB,iBAAkB,IAClB,iBAAkB,IAClB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB,kBAAmB,IACnB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","sources":["webpack://vitesandbox-client/./node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js","webpack://vitesandbox-client/./node_modules/@vue/compiler-dom/dist/compiler-dom.cjs.js","webpack://vitesandbox-client/./node_modules/@vue/shared/dist/shared.esm-bundler.js"],"sourcesContent":["import { isString, hyphenate, NOOP, extend, isObject, NO, isArray, makeMap, isSymbol, EMPTY_OBJ, capitalize, camelize as camelize$1, PatchFlagNames, slotFlagsText, isOn, isBuiltInDirective, isReservedProp, toHandlerKey } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\n\nfunction defaultOnError(error) {\r\n    throw error;\r\n}\r\nfunction defaultOnWarn(msg) {\r\n    (process.env.NODE_ENV !== 'production') && console.warn(`[Vue warn] ${msg.message}`);\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n    const msg = (process.env.NODE_ENV !== 'production') || !true\r\n        ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n        : code;\r\n    const error = new SyntaxError(String(msg));\r\n    error.code = code;\r\n    error.loc = loc;\r\n    return error;\r\n}\r\nconst errorMessages = {\r\n    // parse errors\r\n    [0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\r\n    [1 /* CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\r\n    [2 /* DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\r\n    [3 /* END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\r\n    [4 /* END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\r\n    [5 /* EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\r\n    [6 /* EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\r\n    [7 /* EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\r\n    [8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\r\n    [9 /* EOF_IN_TAG */]: 'Unexpected EOF in tag.',\r\n    [10 /* INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\r\n    [11 /* INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\r\n    [12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n    [13 /* MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\r\n    [14 /* MISSING_END_TAG_NAME */]: 'End tag name was expected.',\r\n    [15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\r\n    [16 /* NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\r\n    [17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n    [18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n    [19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\r\n    [21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\r\n    [20 /* UNEXPECTED_NULL_CHARACTER */]: `Unexpected null character.`,\r\n    [22 /* UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\r\n    // Vue-specific parse errors\r\n    [23 /* X_INVALID_END_TAG */]: 'Invalid end tag.',\r\n    [24 /* X_MISSING_END_TAG */]: 'Element is missing end tag.',\r\n    [25 /* X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\r\n    [27 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\r\n        'Note that dynamic directive argument cannot contain spaces.',\r\n    [26 /* X_MISSING_DIRECTIVE_NAME */]: 'Legal directive name was expected.',\r\n    // transform errors\r\n    [28 /* X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\r\n    [29 /* X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\r\n    [30 /* X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\r\n    [31 /* X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\r\n    [32 /* X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\r\n    [33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\r\n    [34 /* X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\r\n    [35 /* X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\r\n    [36 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\r\n    [37 /* X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\r\n        `When there are multiple named slots, all slots should use <template> ` +\r\n        `syntax to avoid scope ambiguity.`,\r\n    [38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\r\n    [39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\r\n        `default slot. These children will be ignored.`,\r\n    [40 /* X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\r\n    [41 /* X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\r\n    [42 /* X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\r\n    [43 /* X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n    [44 /* X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\r\n    [45 /* X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\r\n    // generic errors\r\n    [46 /* X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n    [47 /* X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\r\n    [48 /* X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n    [49 /* X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`,\r\n    // just to fulfill types\r\n    [50 /* __EXTEND_POINT__ */]: ``\r\n};\n\nconst FRAGMENT = Symbol((process.env.NODE_ENV !== 'production') ? `Fragment` : ``);\r\nconst TELEPORT = Symbol((process.env.NODE_ENV !== 'production') ? `Teleport` : ``);\r\nconst SUSPENSE = Symbol((process.env.NODE_ENV !== 'production') ? `Suspense` : ``);\r\nconst KEEP_ALIVE = Symbol((process.env.NODE_ENV !== 'production') ? `KeepAlive` : ``);\r\nconst BASE_TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `BaseTransition` : ``);\r\nconst OPEN_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `openBlock` : ``);\r\nconst CREATE_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createBlock` : ``);\r\nconst CREATE_ELEMENT_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createElementBlock` : ``);\r\nconst CREATE_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createVNode` : ``);\r\nconst CREATE_ELEMENT_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createElementVNode` : ``);\r\nconst CREATE_COMMENT = Symbol((process.env.NODE_ENV !== 'production') ? `createCommentVNode` : ``);\r\nconst CREATE_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `createTextVNode` : ``);\r\nconst CREATE_STATIC = Symbol((process.env.NODE_ENV !== 'production') ? `createStaticVNode` : ``);\r\nconst RESOLVE_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveComponent` : ``);\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDynamicComponent` : ``);\r\nconst RESOLVE_DIRECTIVE = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDirective` : ``);\r\nconst RESOLVE_FILTER = Symbol((process.env.NODE_ENV !== 'production') ? `resolveFilter` : ``);\r\nconst WITH_DIRECTIVES = Symbol((process.env.NODE_ENV !== 'production') ? `withDirectives` : ``);\r\nconst RENDER_LIST = Symbol((process.env.NODE_ENV !== 'production') ? `renderList` : ``);\r\nconst RENDER_SLOT = Symbol((process.env.NODE_ENV !== 'production') ? `renderSlot` : ``);\r\nconst CREATE_SLOTS = Symbol((process.env.NODE_ENV !== 'production') ? `createSlots` : ``);\r\nconst TO_DISPLAY_STRING = Symbol((process.env.NODE_ENV !== 'production') ? `toDisplayString` : ``);\r\nconst MERGE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `mergeProps` : ``);\r\nconst NORMALIZE_CLASS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeClass` : ``);\r\nconst NORMALIZE_STYLE = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeStyle` : ``);\r\nconst NORMALIZE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeProps` : ``);\r\nconst GUARD_REACTIVE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `guardReactiveProps` : ``);\r\nconst TO_HANDLERS = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlers` : ``);\r\nconst CAMELIZE = Symbol((process.env.NODE_ENV !== 'production') ? `camelize` : ``);\r\nconst CAPITALIZE = Symbol((process.env.NODE_ENV !== 'production') ? `capitalize` : ``);\r\nconst TO_HANDLER_KEY = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlerKey` : ``);\r\nconst SET_BLOCK_TRACKING = Symbol((process.env.NODE_ENV !== 'production') ? `setBlockTracking` : ``);\r\nconst PUSH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `pushScopeId` : ``);\r\nconst POP_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `popScopeId` : ``);\r\nconst WITH_CTX = Symbol((process.env.NODE_ENV !== 'production') ? `withCtx` : ``);\r\nconst UNREF = Symbol((process.env.NODE_ENV !== 'production') ? `unref` : ``);\r\nconst IS_REF = Symbol((process.env.NODE_ENV !== 'production') ? `isRef` : ``);\r\nconst WITH_MEMO = Symbol((process.env.NODE_ENV !== 'production') ? `withMemo` : ``);\r\nconst IS_MEMO_SAME = Symbol((process.env.NODE_ENV !== 'production') ? `isMemoSame` : ``);\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nconst helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [RESOLVE_FILTER]: `resolveFilter`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [NORMALIZE_CLASS]: `normalizeClass`,\r\n    [NORMALIZE_STYLE]: `normalizeStyle`,\r\n    [NORMALIZE_PROPS]: `normalizeProps`,\r\n    [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [CAPITALIZE]: `capitalize`,\r\n    [TO_HANDLER_KEY]: `toHandlerKey`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_CTX]: `withCtx`,\r\n    [UNREF]: `unref`,\r\n    [IS_REF]: `isRef`,\r\n    [WITH_MEMO]: `withMemo`,\r\n    [IS_MEMO_SAME]: `isMemoSame`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\n\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nconst locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n    return {\r\n        type: 0 /* ROOT */,\r\n        children,\r\n        helpers: [],\r\n        components: [],\r\n        directives: [],\r\n        hoists: [],\r\n        imports: [],\r\n        cached: 0,\r\n        temps: 0,\r\n        codegenNode: undefined,\r\n        loc\r\n    };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\r\n    if (context) {\r\n        if (isBlock) {\r\n            context.helper(OPEN_BLOCK);\r\n            context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\r\n        }\r\n        else {\r\n            context.helper(getVNodeHelper(context.inSSR, isComponent));\r\n        }\r\n        if (directives) {\r\n            context.helper(WITH_DIRECTIVES);\r\n        }\r\n    }\r\n    return {\r\n        type: 13 /* VNODE_CALL */,\r\n        tag,\r\n        props,\r\n        children,\r\n        patchFlag,\r\n        dynamicProps,\r\n        directives,\r\n        isBlock,\r\n        disableTracking,\r\n        isComponent,\r\n        loc\r\n    };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 17 /* JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 15 /* JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n    return {\r\n        type: 16 /* JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0 /* NOT_CONSTANT */) {\r\n    return {\r\n        type: 4 /* SIMPLE_EXPRESSION */,\r\n        loc,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic ? 3 /* CAN_STRINGIFY */ : constType\r\n    };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        loc,\r\n        content: isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n    return {\r\n        type: 8 /* COMPOUND_EXPRESSION */,\r\n        loc,\r\n        children\r\n    };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 14 /* JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\r\n    return {\r\n        type: 18 /* JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        isSlot,\r\n        loc\r\n    };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n    return {\r\n        type: 19 /* JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        newline,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n    return {\r\n        type: 20 /* JS_CACHE_EXPRESSION */,\r\n        index,\r\n        value,\r\n        isVNode,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createBlockStatement(body) {\r\n    return {\r\n        type: 21 /* JS_BLOCK_STATEMENT */,\r\n        body,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n    return {\r\n        type: 22 /* JS_TEMPLATE_LITERAL */,\r\n        elements,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n    return {\r\n        type: 23 /* JS_IF_STATEMENT */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n    return {\r\n        type: 24 /* JS_ASSIGNMENT_EXPRESSION */,\r\n        left,\r\n        right,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n    return {\r\n        type: 25 /* JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createReturnStatement(returns) {\r\n    return {\r\n        type: 26 /* JS_RETURN_STATEMENT */,\r\n        returns,\r\n        loc: locStub\r\n    };\r\n}\n\nconst isStaticExp = (p) => p.type === 4 /* SIMPLE_EXPRESSION */ && p.isStatic;\r\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nconst isMemberExpressionBrowser = (path) => {\r\n    // remove whitespaces around . or [ first\r\n    path = path.trim().replace(whitespaceRE, s => s.trim());\r\n    let state = 0 /* inMemberExp */;\r\n    let stateStack = [];\r\n    let currentOpenBracketCount = 0;\r\n    let currentOpenParensCount = 0;\r\n    let currentStringType = null;\r\n    for (let i = 0; i < path.length; i++) {\r\n        const char = path.charAt(i);\r\n        switch (state) {\r\n            case 0 /* inMemberExp */:\r\n                if (char === '[') {\r\n                    stateStack.push(state);\r\n                    state = 1 /* inBrackets */;\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === '(') {\r\n                    stateStack.push(state);\r\n                    state = 2 /* inParens */;\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case 1 /* inBrackets */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `[`) {\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === `]`) {\r\n                    if (!--currentOpenBracketCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 2 /* inParens */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `(`) {\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (char === `)`) {\r\n                    // if the exp ends as a call then it should not be considered valid\r\n                    if (i === path.length - 1) {\r\n                        return false;\r\n                    }\r\n                    if (!--currentOpenParensCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 3 /* inString */:\r\n                if (char === currentStringType) {\r\n                    state = stateStack.pop();\r\n                    currentStringType = null;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return !currentOpenBracketCount && !currentOpenParensCount;\r\n};\r\nconst isMemberExpressionNode = NOOP\r\n    ;\r\nconst isMemberExpression = isMemberExpressionBrowser\r\n    ;\r\nfunction getInnerRange(loc, offset, length) {\r\n    const source = loc.source.slice(offset, offset + length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nfunction assert(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' &&\r\n            (p.exp || allowEmpty) &&\r\n            isStaticArgOf(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction isStaticArgOf(arg, name) {\r\n    return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nfunction isText(node) {\r\n    return node.type === 5 /* INTERPOLATION */ || node.type === 2 /* TEXT */;\r\n}\r\nfunction isVSlot(p) {\r\n    return p.type === 7 /* DIRECTIVE */ && p.name === 'slot';\r\n}\r\nfunction isTemplateNode(node) {\r\n    return (node.type === 1 /* ELEMENT */ && node.tagType === 3 /* TEMPLATE */);\r\n}\r\nfunction isSlotOutlet(node) {\r\n    return node.type === 1 /* ELEMENT */ && node.tagType === 2 /* SLOT */;\r\n}\r\nfunction getVNodeHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\r\n}\r\nfunction getVNodeBlockHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\r\n}\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\r\nfunction getUnnormalizedProps(props, callPath = []) {\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        const callee = props.callee;\r\n        if (!isString(callee) && propsHelperSet.has(callee)) {\r\n            return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\r\n        }\r\n    }\r\n    return [props, callPath];\r\n}\r\nfunction injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    /**\r\n     * 1. mergeProps(...)\r\n     * 2. toHandlers(...)\r\n     * 3. normalizeProps(...)\r\n     * 4. normalizeProps(guardReactiveProps(...))\r\n     *\r\n     * we need to get the real props before normalization\r\n     */\r\n    let props = node.type === 13 /* VNODE_CALL */ ? node.props : node.arguments[2];\r\n    let callPath = [];\r\n    let parentCall;\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        const ret = getUnnormalizedProps(props);\r\n        props = ret[0];\r\n        callPath = ret[1];\r\n        parentCall = callPath[callPath.length - 1];\r\n    }\r\n    if (props == null || isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!isString(first) && first.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n            first.properties.unshift(prop);\r\n        }\r\n        else {\r\n            if (props.callee === TO_HANDLERS) {\r\n                // #2366\r\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n                    createObjectExpression([prop]),\r\n                    props\r\n                ]);\r\n            }\r\n            else {\r\n                props.arguments.unshift(createObjectExpression([prop]));\r\n            }\r\n        }\r\n        !propsWithInjection && (propsWithInjection = props);\r\n    }\r\n    else if (props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        let alreadyExists = false;\r\n        // check existing key to avoid overriding user provided keys\r\n        if (prop.key.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            const propKeyName = prop.key.content;\r\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                p.key.content === propKeyName);\r\n        }\r\n        if (!alreadyExists) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n        // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n        // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n        // the `guardReactiveProps` will no longer be needed\r\n        if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n            parentCall = callPath[callPath.length - 2];\r\n        }\r\n    }\r\n    if (node.type === 13 /* VNODE_CALL */) {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.props = propsWithInjection;\r\n        }\r\n    }\r\n    else {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.arguments[2] = propsWithInjection;\r\n        }\r\n    }\r\n}\r\nfunction toValidAssetId(name, type) {\r\n    // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\r\n    return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n        return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\r\n    })}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nfunction hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return false;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return false;\r\n    }\r\n}\r\nfunction getMemoedVNodeCall(node) {\r\n    if (node.type === 14 /* JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\r\n        return node.arguments[1].returns;\r\n    }\r\n    else {\r\n        return node;\r\n    }\r\n}\r\nfunction makeBlock(node, { helper, removeHelper, inSSR }) {\r\n    if (!node.isBlock) {\r\n        node.isBlock = true;\r\n        removeHelper(getVNodeHelper(inSSR, node.isComponent));\r\n        helper(OPEN_BLOCK);\r\n        helper(getVNodeBlockHelper(inSSR, node.isComponent));\r\n    }\r\n}\n\nconst deprecationData = {\r\n    [\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */]: {\r\n        message: `Platform-native elements with \"is\" prop will no longer be ` +\r\n            `treated as components in Vue 3 unless the \"is\" value is explicitly ` +\r\n            `prefixed with \"vue:\".`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\r\n    },\r\n    [\"COMPILER_V_BIND_SYNC\" /* COMPILER_V_BIND_SYNC */]: {\r\n        message: key => `.sync modifier for v-bind has been removed. Use v-model with ` +\r\n            `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` +\r\n            `\\`v-model:${key}\\`.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\r\n    },\r\n    [\"COMPILER_V_BIND_PROP\" /* COMPILER_V_BIND_PROP */]: {\r\n        message: `.prop modifier for v-bind has been removed and no longer necessary. ` +\r\n            `Vue 3 will automatically set a binding as DOM property when appropriate.`\r\n    },\r\n    [\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */]: {\r\n        message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` +\r\n            `object spread: it will now overwrite an existing non-mergeable attribute ` +\r\n            `that appears before v-bind in the case of conflict. ` +\r\n            `To retain 2.x behavior, move v-bind to make it the first attribute. ` +\r\n            `You can also suppress this warning if the usage is intended.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\r\n    },\r\n    [\"COMPILER_V_ON_NATIVE\" /* COMPILER_V_ON_NATIVE */]: {\r\n        message: `.native modifier for v-on has been removed as is no longer necessary.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\r\n    },\r\n    [\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */]: {\r\n        message: `v-if / v-for precedence when used on the same element has changed ` +\r\n            `in Vue 3: v-if now takes higher precedence and will no longer have ` +\r\n            `access to v-for scope variables. It is best to avoid the ambiguity ` +\r\n            `with <template> tags or use a computed property that filters v-for ` +\r\n            `data source.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\r\n    },\r\n    [\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */]: {\r\n        message: `<template> with no special directives will render as a native template ` +\r\n            `element instead of its inner content in Vue 3.`\r\n    },\r\n    [\"COMPILER_INLINE_TEMPLATE\" /* COMPILER_INLINE_TEMPLATE */]: {\r\n        message: `\"inline-template\" has been removed in Vue 3.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\r\n    },\r\n    [\"COMPILER_FILTER\" /* COMPILER_FILTERS */]: {\r\n        message: `filters have been removed in Vue 3. ` +\r\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n            `Use method calls or computed properties instead.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\r\n    }\r\n};\r\nfunction getCompatValue(key, context) {\r\n    const config = context.options\r\n        ? context.options.compatConfig\r\n        : context.compatConfig;\r\n    const value = config && config[key];\r\n    if (key === 'MODE') {\r\n        return value || 3; // compiler defaults to v3 behavior\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nfunction isCompatEnabled(key, context) {\r\n    const mode = getCompatValue('MODE', context);\r\n    const value = getCompatValue(key, context);\r\n    // in v3 mode, only enable if explicitly set to true\r\n    // otherwise enable for any non-false value\r\n    return mode === 3 ? value === true : value !== false;\r\n}\r\nfunction checkCompatEnabled(key, context, loc, ...args) {\r\n    const enabled = isCompatEnabled(key, context);\r\n    if ((process.env.NODE_ENV !== 'production') && enabled) {\r\n        warnDeprecation(key, context, loc, ...args);\r\n    }\r\n    return enabled;\r\n}\r\nfunction warnDeprecation(key, context, loc, ...args) {\r\n    const val = getCompatValue(key, context);\r\n    if (val === 'suppress-warning') {\r\n        return;\r\n    }\r\n    const { message, link } = deprecationData[key];\r\n    const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\r\n    const err = new SyntaxError(msg);\r\n    err.code = key;\r\n    if (loc)\r\n        err.loc = loc;\r\n    context.onWarn(err);\r\n}\n\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n    gt: '>',\r\n    lt: '<',\r\n    amp: '&',\r\n    apos: \"'\",\r\n    quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n    delimiters: [`{{`, `}}`],\r\n    getNamespace: () => 0 /* HTML */,\r\n    getTextMode: () => 0 /* DATA */,\r\n    isVoidTag: NO,\r\n    isPreTag: NO,\r\n    isCustomElement: NO,\r\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n    onError: defaultOnError,\r\n    onWarn: defaultOnWarn,\r\n    comments: (process.env.NODE_ENV !== 'production')\r\n};\r\nfunction baseParse(content, options = {}) {\r\n    const context = createParserContext(content, options);\r\n    const start = getCursor(context);\r\n    return createRoot(parseChildren(context, 0 /* DATA */, []), getSelection(context, start));\r\n}\r\nfunction createParserContext(content, rawOptions) {\r\n    const options = extend({}, defaultParserOptions);\r\n    let key;\r\n    for (key in rawOptions) {\r\n        // @ts-ignore\r\n        options[key] =\r\n            rawOptions[key] === undefined\r\n                ? defaultParserOptions[key]\r\n                : rawOptions[key];\r\n    }\r\n    return {\r\n        options,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        originalSource: content,\r\n        source: content,\r\n        inPre: false,\r\n        inVPre: false,\r\n        onWarn: options.onWarn\r\n    };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n    const parent = last(ancestors);\r\n    const ns = parent ? parent.ns : 0 /* HTML */;\r\n    const nodes = [];\r\n    while (!isEnd(context, mode, ancestors)) {\r\n        const s = context.source;\r\n        let node = undefined;\r\n        if (mode === 0 /* DATA */ || mode === 1 /* RCDATA */) {\r\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n                // '{{'\r\n                node = parseInterpolation(context, mode);\r\n            }\r\n            else if (mode === 0 /* DATA */ && s[0] === '<') {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n                if (s.length === 1) {\r\n                    emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 1);\r\n                }\r\n                else if (s[1] === '!') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n                    if (startsWith(s, '<!--')) {\r\n                        node = parseComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<!DOCTYPE')) {\r\n                        // Ignore DOCTYPE by a limitation.\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<![CDATA[')) {\r\n                        if (ns !== 0 /* HTML */) {\r\n                            node = parseCDATA(context, ancestors);\r\n                        }\r\n                        else {\r\n                            emitError(context, 1 /* CDATA_IN_HTML_CONTENT */);\r\n                            node = parseBogusComment(context);\r\n                        }\r\n                    }\r\n                    else {\r\n                        emitError(context, 11 /* INCORRECTLY_OPENED_COMMENT */);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (s[1] === '/') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n                    if (s.length === 2) {\r\n                        emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 2);\r\n                    }\r\n                    else if (s[2] === '>') {\r\n                        emitError(context, 14 /* MISSING_END_TAG_NAME */, 2);\r\n                        advanceBy(context, 3);\r\n                        continue;\r\n                    }\r\n                    else if (/[a-z]/i.test(s[2])) {\r\n                        emitError(context, 23 /* X_INVALID_END_TAG */);\r\n                        parseTag(context, 1 /* End */, parent);\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (/[a-z]/i.test(s[1])) {\r\n                    node = parseElement(context, ancestors);\r\n                    // 2.x <template> with no directive compat\r\n                    if (isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */, context) &&\r\n                        node &&\r\n                        node.tag === 'template' &&\r\n                        !node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n                            isSpecialTemplateDirective(p.name))) {\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warnDeprecation(\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */, context, node.loc);\r\n                        node = node.children;\r\n                    }\r\n                }\r\n                else if (s[1] === '?') {\r\n                    emitError(context, 21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\r\n                    node = parseBogusComment(context);\r\n                }\r\n                else {\r\n                    emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\r\n                }\r\n            }\r\n        }\r\n        if (!node) {\r\n            node = parseText(context, mode);\r\n        }\r\n        if (isArray(node)) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                pushNode(nodes, node[i]);\r\n            }\r\n        }\r\n        else {\r\n            pushNode(nodes, node);\r\n        }\r\n    }\r\n    // Whitespace handling strategy like v2\r\n    let removedWhitespace = false;\r\n    if (mode !== 2 /* RAWTEXT */ && mode !== 1 /* RCDATA */) {\r\n        const shouldCondense = context.options.whitespace !== 'preserve';\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (!context.inPre && node.type === 2 /* TEXT */) {\r\n                if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                    const prev = nodes[i - 1];\r\n                    const next = nodes[i + 1];\r\n                    // Remove if:\r\n                    // - the whitespace is the first or last node, or:\r\n                    // - (condense mode) the whitespace is adjacent to a comment, or:\r\n                    // - (condense mode) the whitespace is between two elements AND contains newline\r\n                    if (!prev ||\r\n                        !next ||\r\n                        (shouldCondense &&\r\n                            (prev.type === 3 /* COMMENT */ ||\r\n                                next.type === 3 /* COMMENT */ ||\r\n                                (prev.type === 1 /* ELEMENT */ &&\r\n                                    next.type === 1 /* ELEMENT */ &&\r\n                                    /[\\r\\n]/.test(node.content))))) {\r\n                        removedWhitespace = true;\r\n                        nodes[i] = null;\r\n                    }\r\n                    else {\r\n                        // Otherwise, the whitespace is condensed into a single space\r\n                        node.content = ' ';\r\n                    }\r\n                }\r\n                else if (shouldCondense) {\r\n                    // in condense mode, consecutive whitespaces in text are condensed\r\n                    // down to a single space.\r\n                    node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\r\n                }\r\n            }\r\n            // Remove comment nodes if desired by configuration.\r\n            else if (node.type === 3 /* COMMENT */ && !context.options.comments) {\r\n                removedWhitespace = true;\r\n                nodes[i] = null;\r\n            }\r\n        }\r\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n            // remove leading newline per html spec\r\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n            const first = nodes[0];\r\n            if (first && first.type === 2 /* TEXT */) {\r\n                first.content = first.content.replace(/^\\r?\\n/, '');\r\n            }\r\n        }\r\n    }\r\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n    if (node.type === 2 /* TEXT */) {\r\n        const prev = last(nodes);\r\n        // Merge if both this and the previous node are text and those are\r\n        // consecutive. This happens for cases like \"a < b\".\r\n        if (prev &&\r\n            prev.type === 2 /* TEXT */ &&\r\n            prev.loc.end.offset === node.loc.start.offset) {\r\n            prev.content += node.content;\r\n            prev.loc.end = node.loc.end;\r\n            prev.loc.source += node.loc.source;\r\n            return;\r\n        }\r\n    }\r\n    nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n    advanceBy(context, 9);\r\n    const nodes = parseChildren(context, 3 /* CDATA */, ancestors);\r\n    if (context.source.length === 0) {\r\n        emitError(context, 6 /* EOF_IN_CDATA */);\r\n    }\r\n    else {\r\n        advanceBy(context, 3);\r\n    }\r\n    return nodes;\r\n}\r\nfunction parseComment(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    // Regular comment.\r\n    const match = /--(\\!)?>/.exec(context.source);\r\n    if (!match) {\r\n        content = context.source.slice(4);\r\n        advanceBy(context, context.source.length);\r\n        emitError(context, 7 /* EOF_IN_COMMENT */);\r\n    }\r\n    else {\r\n        if (match.index <= 3) {\r\n            emitError(context, 0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\r\n        }\r\n        if (match[1]) {\r\n            emitError(context, 10 /* INCORRECTLY_CLOSED_COMMENT */);\r\n        }\r\n        content = context.source.slice(4, match.index);\r\n        // Advancing with reporting nested comments.\r\n        const s = context.source.slice(0, match.index);\r\n        let prevIndex = 1, nestedIndex = 0;\r\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n            advanceBy(context, nestedIndex - prevIndex + 1);\r\n            if (nestedIndex + 4 < s.length) {\r\n                emitError(context, 16 /* NESTED_COMMENT */);\r\n            }\r\n            prevIndex = nestedIndex + 1;\r\n        }\r\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseBogusComment(context) {\r\n    const start = getCursor(context);\r\n    const contentStart = context.source[1] === '?' ? 1 : 2;\r\n    let content;\r\n    const closeIndex = context.source.indexOf('>');\r\n    if (closeIndex === -1) {\r\n        content = context.source.slice(contentStart);\r\n        advanceBy(context, context.source.length);\r\n    }\r\n    else {\r\n        content = context.source.slice(contentStart, closeIndex);\r\n        advanceBy(context, closeIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n    // Start tag.\r\n    const wasInPre = context.inPre;\r\n    const wasInVPre = context.inVPre;\r\n    const parent = last(ancestors);\r\n    const element = parseTag(context, 0 /* Start */, parent);\r\n    const isPreBoundary = context.inPre && !wasInPre;\r\n    const isVPreBoundary = context.inVPre && !wasInVPre;\r\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n        // #4030 self-closing <pre> tag\r\n        if (isPreBoundary) {\r\n            context.inPre = false;\r\n        }\r\n        if (isVPreBoundary) {\r\n            context.inVPre = false;\r\n        }\r\n        return element;\r\n    }\r\n    // Children.\r\n    ancestors.push(element);\r\n    const mode = context.options.getTextMode(element, parent);\r\n    const children = parseChildren(context, mode, ancestors);\r\n    ancestors.pop();\r\n    // 2.x inline-template compat\r\n    {\r\n        const inlineTemplateProp = element.props.find(p => p.type === 6 /* ATTRIBUTE */ && p.name === 'inline-template');\r\n        if (inlineTemplateProp &&\r\n            checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\" /* COMPILER_INLINE_TEMPLATE */, context, inlineTemplateProp.loc)) {\r\n            const loc = getSelection(context, element.loc.end);\r\n            inlineTemplateProp.value = {\r\n                type: 2 /* TEXT */,\r\n                content: loc.source,\r\n                loc\r\n            };\r\n        }\r\n    }\r\n    element.children = children;\r\n    // End tag.\r\n    if (startsWithEndTagOpen(context.source, element.tag)) {\r\n        parseTag(context, 1 /* End */, parent);\r\n    }\r\n    else {\r\n        emitError(context, 24 /* X_MISSING_END_TAG */, 0, element.loc.start);\r\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n            const first = children[0];\r\n            if (first && startsWith(first.loc.source, '<!--')) {\r\n                emitError(context, 8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\r\n            }\r\n        }\r\n    }\r\n    element.loc = getSelection(context, element.loc.start);\r\n    if (isPreBoundary) {\r\n        context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n        context.inVPre = false;\r\n    }\r\n    return element;\r\n}\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\r\nfunction parseTag(context, type, parent) {\r\n    // Tag open.\r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n    const tag = match[1];\r\n    const ns = context.options.getNamespace(tag, parent);\r\n    advanceBy(context, match[0].length);\r\n    advanceSpaces(context);\r\n    // save current state in case we need to re-parse attributes with v-pre\r\n    const cursor = getCursor(context);\r\n    const currentSource = context.source;\r\n    // check <pre> tag\r\n    if (context.options.isPreTag(tag)) {\r\n        context.inPre = true;\r\n    }\r\n    // Attributes.\r\n    let props = parseAttributes(context, type);\r\n    // check v-pre\r\n    if (type === 0 /* Start */ &&\r\n        !context.inVPre &&\r\n        props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'pre')) {\r\n        context.inVPre = true;\r\n        // reset context\r\n        extend(context, cursor);\r\n        context.source = currentSource;\r\n        // re-parse attrs and filter out v-pre itself\r\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\r\n    }\r\n    // Tag close.\r\n    let isSelfClosing = false;\r\n    if (context.source.length === 0) {\r\n        emitError(context, 9 /* EOF_IN_TAG */);\r\n    }\r\n    else {\r\n        isSelfClosing = startsWith(context.source, '/>');\r\n        if (type === 1 /* End */ && isSelfClosing) {\r\n            emitError(context, 4 /* END_TAG_WITH_TRAILING_SOLIDUS */);\r\n        }\r\n        advanceBy(context, isSelfClosing ? 2 : 1);\r\n    }\r\n    if (type === 1 /* End */) {\r\n        return;\r\n    }\r\n    // 2.x deprecation checks\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        isCompatEnabled(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */, context)) {\r\n        let hasIf = false;\r\n        let hasFor = false;\r\n        for (let i = 0; i < props.length; i++) {\r\n            const p = props[i];\r\n            if (p.type === 7 /* DIRECTIVE */) {\r\n                if (p.name === 'if') {\r\n                    hasIf = true;\r\n                }\r\n                else if (p.name === 'for') {\r\n                    hasFor = true;\r\n                }\r\n            }\r\n            if (hasIf && hasFor) {\r\n                warnDeprecation(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */, context, getSelection(context, start));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    let tagType = 0 /* ELEMENT */;\r\n    if (!context.inVPre) {\r\n        if (tag === 'slot') {\r\n            tagType = 2 /* SLOT */;\r\n        }\r\n        else if (tag === 'template') {\r\n            if (props.some(p => p.type === 7 /* DIRECTIVE */ && isSpecialTemplateDirective(p.name))) {\r\n                tagType = 3 /* TEMPLATE */;\r\n            }\r\n        }\r\n        else if (isComponent(tag, props, context)) {\r\n            tagType = 1 /* COMPONENT */;\r\n        }\r\n    }\r\n    return {\r\n        type: 1 /* ELEMENT */,\r\n        ns,\r\n        tag,\r\n        tagType,\r\n        props,\r\n        isSelfClosing,\r\n        children: [],\r\n        loc: getSelection(context, start),\r\n        codegenNode: undefined // to be created during transform phase\r\n    };\r\n}\r\nfunction isComponent(tag, props, context) {\r\n    const options = context.options;\r\n    if (options.isCustomElement(tag)) {\r\n        return false;\r\n    }\r\n    if (tag === 'component' ||\r\n        /^[A-Z]/.test(tag) ||\r\n        isCoreComponent(tag) ||\r\n        (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n        (options.isNativeTag && !options.isNativeTag(tag))) {\r\n        return true;\r\n    }\r\n    // at this point the tag should be a native tag, but check for potential \"is\"\r\n    // casting\r\n    for (let i = 0; i < props.length; i++) {\r\n        const p = props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (p.name === 'is' && p.value) {\r\n                if (p.value.content.startsWith('vue:')) {\r\n                    return true;\r\n                }\r\n                else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // directive\r\n            // v-is (TODO Deprecate)\r\n            if (p.name === 'is') {\r\n                return true;\r\n            }\r\n            else if (\r\n            // :is on plain element - only treat as component in compat mode\r\n            p.name === 'bind' &&\r\n                isStaticArgOf(p.arg, 'is') &&\r\n                true &&\r\n                checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseAttributes(context, type) {\r\n    const props = [];\r\n    const attributeNames = new Set();\r\n    while (context.source.length > 0 &&\r\n        !startsWith(context.source, '>') &&\r\n        !startsWith(context.source, '/>')) {\r\n        if (startsWith(context.source, '/')) {\r\n            emitError(context, 22 /* UNEXPECTED_SOLIDUS_IN_TAG */);\r\n            advanceBy(context, 1);\r\n            advanceSpaces(context);\r\n            continue;\r\n        }\r\n        if (type === 1 /* End */) {\r\n            emitError(context, 3 /* END_TAG_WITH_ATTRIBUTES */);\r\n        }\r\n        const attr = parseAttribute(context, attributeNames);\r\n        // Trim whitespace between class\r\n        // https://github.com/vuejs/core/issues/4251\r\n        if (attr.type === 6 /* ATTRIBUTE */ &&\r\n            attr.value &&\r\n            attr.name === 'class') {\r\n            attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\r\n        }\r\n        if (type === 0 /* Start */) {\r\n            props.push(attr);\r\n        }\r\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n            emitError(context, 15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\r\n        }\r\n        advanceSpaces(context);\r\n    }\r\n    return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n    // Name.\r\n    const start = getCursor(context);\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    const name = match[0];\r\n    if (nameSet.has(name)) {\r\n        emitError(context, 2 /* DUPLICATE_ATTRIBUTE */);\r\n    }\r\n    nameSet.add(name);\r\n    if (name[0] === '=') {\r\n        emitError(context, 19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\r\n    }\r\n    {\r\n        const pattern = /[\"'<]/g;\r\n        let m;\r\n        while ((m = pattern.exec(name))) {\r\n            emitError(context, 17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\r\n        }\r\n    }\r\n    advanceBy(context, name.length);\r\n    // Value\r\n    let value = undefined;\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        advanceSpaces(context);\r\n        advanceBy(context, 1);\r\n        advanceSpaces(context);\r\n        value = parseAttributeValue(context);\r\n        if (!value) {\r\n            emitError(context, 13 /* MISSING_ATTRIBUTE_VALUE */);\r\n        }\r\n    }\r\n    const loc = getSelection(context, start);\r\n    if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\r\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\r\n        let isPropShorthand = startsWith(name, '.');\r\n        let dirName = match[1] ||\r\n            (isPropShorthand || startsWith(name, ':')\r\n                ? 'bind'\r\n                : startsWith(name, '@')\r\n                    ? 'on'\r\n                    : 'slot');\r\n        let arg;\r\n        if (match[2]) {\r\n            const isSlot = dirName === 'slot';\r\n            const startOffset = name.lastIndexOf(match[2]);\r\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\r\n            let content = match[2];\r\n            let isStatic = true;\r\n            if (content.startsWith('[')) {\r\n                isStatic = false;\r\n                if (!content.endsWith(']')) {\r\n                    emitError(context, 27 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\r\n                    content = content.slice(1);\r\n                }\r\n                else {\r\n                    content = content.slice(1, content.length - 1);\r\n                }\r\n            }\r\n            else if (isSlot) {\r\n                // #1241 special case for v-slot: vuetify relies extensively on slot\r\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n                // supports such usage so we are keeping it consistent with 2.x.\r\n                content += match[3] || '';\r\n            }\r\n            arg = {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content,\r\n                isStatic,\r\n                constType: isStatic\r\n                    ? 3 /* CAN_STRINGIFY */\r\n                    : 0 /* NOT_CONSTANT */,\r\n                loc\r\n            };\r\n        }\r\n        if (value && value.isQuoted) {\r\n            const valueLoc = value.loc;\r\n            valueLoc.start.offset++;\r\n            valueLoc.start.column++;\r\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n            valueLoc.source = valueLoc.source.slice(1, -1);\r\n        }\r\n        const modifiers = match[3] ? match[3].slice(1).split('.') : [];\r\n        if (isPropShorthand)\r\n            modifiers.push('prop');\r\n        // 2.x compat v-bind:foo.sync -> v-model:foo\r\n        if (dirName === 'bind' && arg) {\r\n            if (modifiers.includes('sync') &&\r\n                checkCompatEnabled(\"COMPILER_V_BIND_SYNC\" /* COMPILER_V_BIND_SYNC */, context, loc, arg.loc.source)) {\r\n                dirName = 'model';\r\n                modifiers.splice(modifiers.indexOf('sync'), 1);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && modifiers.includes('prop')) {\r\n                checkCompatEnabled(\"COMPILER_V_BIND_PROP\" /* COMPILER_V_BIND_PROP */, context, loc);\r\n            }\r\n        }\r\n        return {\r\n            type: 7 /* DIRECTIVE */,\r\n            name: dirName,\r\n            exp: value && {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content: value.content,\r\n                isStatic: false,\r\n                // Treat as non-constant by default. This can be potentially set to\r\n                // other values by `transformExpression` to make it eligible for hoisting.\r\n                constType: 0 /* NOT_CONSTANT */,\r\n                loc: value.loc\r\n            },\r\n            arg,\r\n            modifiers,\r\n            loc\r\n        };\r\n    }\r\n    // missing directive name or illegal directive name\r\n    if (!context.inVPre && startsWith(name, 'v-')) {\r\n        emitError(context, 26 /* X_MISSING_DIRECTIVE_NAME */);\r\n    }\r\n    return {\r\n        type: 6 /* ATTRIBUTE */,\r\n        name,\r\n        value: value && {\r\n            type: 2 /* TEXT */,\r\n            content: value.content,\r\n            loc: value.loc\r\n        },\r\n        loc\r\n    };\r\n}\r\nfunction parseAttributeValue(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    const quote = context.source[0];\r\n    const isQuoted = quote === `\"` || quote === `'`;\r\n    if (isQuoted) {\r\n        // Quoted value.\r\n        advanceBy(context, 1);\r\n        const endIndex = context.source.indexOf(quote);\r\n        if (endIndex === -1) {\r\n            content = parseTextData(context, context.source.length, 4 /* ATTRIBUTE_VALUE */);\r\n        }\r\n        else {\r\n            content = parseTextData(context, endIndex, 4 /* ATTRIBUTE_VALUE */);\r\n            advanceBy(context, 1);\r\n        }\r\n    }\r\n    else {\r\n        // Unquoted\r\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        const unexpectedChars = /[\"'<=`]/g;\r\n        let m;\r\n        while ((m = unexpectedChars.exec(match[0]))) {\r\n            emitError(context, 18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\r\n        }\r\n        content = parseTextData(context, match[0].length, 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n    return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n    const [open, close] = context.options.delimiters;\r\n    const closeIndex = context.source.indexOf(close, open.length);\r\n    if (closeIndex === -1) {\r\n        emitError(context, 25 /* X_MISSING_INTERPOLATION_END */);\r\n        return undefined;\r\n    }\r\n    const start = getCursor(context);\r\n    advanceBy(context, open.length);\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context);\r\n    const rawContentLength = closeIndex - open.length;\r\n    const rawContent = context.source.slice(0, rawContentLength);\r\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n    const content = preTrimContent.trim();\r\n    const startOffset = preTrimContent.indexOf(content);\r\n    if (startOffset > 0) {\r\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n    }\r\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n    advanceBy(context, close.length);\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        content: {\r\n            type: 4 /* SIMPLE_EXPRESSION */,\r\n            isStatic: false,\r\n            // Set `isConstant` to false by default and will decide in transformExpression\r\n            constType: 0 /* NOT_CONSTANT */,\r\n            content,\r\n            loc: getSelection(context, innerStart, innerEnd)\r\n        },\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseText(context, mode) {\r\n    const endTokens = mode === 3 /* CDATA */ ? [']]>'] : ['<', context.options.delimiters[0]];\r\n    let endIndex = context.source.length;\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1);\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index;\r\n        }\r\n    }\r\n    const start = getCursor(context);\r\n    const content = parseTextData(context, endIndex, mode);\r\n    return {\r\n        type: 2 /* TEXT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(context, length, mode) {\r\n    const rawText = context.source.slice(0, length);\r\n    advanceBy(context, length);\r\n    if (mode === 2 /* RAWTEXT */ ||\r\n        mode === 3 /* CDATA */ ||\r\n        !rawText.includes('&')) {\r\n        return rawText;\r\n    }\r\n    else {\r\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n        return context.options.decodeEntities(rawText, mode === 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n}\r\nfunction getCursor(context) {\r\n    const { column, line, offset } = context;\r\n    return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset, end.offset)\r\n    };\r\n}\r\nfunction last(xs) {\r\n    return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n    return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n    const { source } = context;\r\n    advancePositionWithMutation(context, source, numberOfCharacters);\r\n    context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n    if (match) {\r\n        advanceBy(context, match[0].length);\r\n    }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n    if (offset) {\r\n        loc.offset += offset;\r\n        loc.column += offset;\r\n    }\r\n    context.options.onError(createCompilerError(code, {\r\n        start: loc,\r\n        end: loc,\r\n        source: ''\r\n    }));\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n    const s = context.source;\r\n    switch (mode) {\r\n        case 0 /* DATA */:\r\n            if (startsWith(s, '</')) {\r\n                // TODO: probably bad performance\r\n                for (let i = ancestors.length - 1; i >= 0; --i) {\r\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 1 /* RCDATA */:\r\n        case 2 /* RAWTEXT */: {\r\n            const parent = last(ancestors);\r\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        case 3 /* CDATA */:\r\n            if (startsWith(s, ']]>')) {\r\n                return true;\r\n            }\r\n            break;\r\n    }\r\n    return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n    return (startsWith(source, '</') &&\r\n        source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\r\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\r\n}\n\nfunction hoistStatic(root, context) {\r\n    walk(root, context, \r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]));\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n    const { children } = root;\r\n    return (children.length === 1 &&\r\n        child.type === 1 /* ELEMENT */ &&\r\n        !isSlotOutlet(child));\r\n}\r\nfunction walk(node, context, doNotHoistNode = false) {\r\n    const { children } = node;\r\n    const originalCount = children.length;\r\n    let hoistedCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // only plain elements & text calls are eligible for hoisting.\r\n        if (child.type === 1 /* ELEMENT */ &&\r\n            child.tagType === 0 /* ELEMENT */) {\r\n            const constantType = doNotHoistNode\r\n                ? 0 /* NOT_CONSTANT */\r\n                : getConstantType(child, context);\r\n            if (constantType > 0 /* NOT_CONSTANT */) {\r\n                if (constantType >= 2 /* CAN_HOIST */) {\r\n                    child.codegenNode.patchFlag =\r\n                        -1 /* HOISTED */ + ((process.env.NODE_ENV !== 'production') ? ` /* HOISTED */` : ``);\r\n                    child.codegenNode = context.hoist(child.codegenNode);\r\n                    hoistedCount++;\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                // node may contain dynamic children, but its props may be eligible for\r\n                // hoisting.\r\n                const codegenNode = child.codegenNode;\r\n                if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                    const flag = getPatchFlag(codegenNode);\r\n                    if ((!flag ||\r\n                        flag === 512 /* NEED_PATCH */ ||\r\n                        flag === 1 /* TEXT */) &&\r\n                        getGeneratedPropsConstantType(child, context) >=\r\n                            2 /* CAN_HOIST */) {\r\n                        const props = getNodeProps(child);\r\n                        if (props) {\r\n                            codegenNode.props = context.hoist(props);\r\n                        }\r\n                    }\r\n                    if (codegenNode.dynamicProps) {\r\n                        codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (child.type === 12 /* TEXT_CALL */ &&\r\n            getConstantType(child.content, context) >= 2 /* CAN_HOIST */) {\r\n            child.codegenNode = context.hoist(child.codegenNode);\r\n            hoistedCount++;\r\n        }\r\n        // walk further\r\n        if (child.type === 1 /* ELEMENT */) {\r\n            const isComponent = child.tagType === 1 /* COMPONENT */;\r\n            if (isComponent) {\r\n                context.scopes.vSlot++;\r\n            }\r\n            walk(child, context);\r\n            if (isComponent) {\r\n                context.scopes.vSlot--;\r\n            }\r\n        }\r\n        else if (child.type === 11 /* FOR */) {\r\n            // Do not hoist v-for single child because it has to be a block\r\n            walk(child, context, child.children.length === 1);\r\n        }\r\n        else if (child.type === 9 /* IF */) {\r\n            for (let i = 0; i < child.branches.length; i++) {\r\n                // Do not hoist v-if single child because it has to be a block\r\n                walk(child.branches[i], context, child.branches[i].children.length === 1);\r\n            }\r\n        }\r\n    }\r\n    if (hoistedCount && context.transformHoist) {\r\n        context.transformHoist(children, context, node);\r\n    }\r\n    // all children were hoisted - the entire children array is hoistable.\r\n    if (hoistedCount &&\r\n        hoistedCount === originalCount &&\r\n        node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 0 /* ELEMENT */ &&\r\n        node.codegenNode &&\r\n        node.codegenNode.type === 13 /* VNODE_CALL */ &&\r\n        isArray(node.codegenNode.children)) {\r\n        node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\r\n    }\r\n}\r\nfunction getConstantType(node, context) {\r\n    const { constantCache } = context;\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            if (node.tagType !== 0 /* ELEMENT */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const cached = constantCache.get(node);\r\n            if (cached !== undefined) {\r\n                return cached;\r\n            }\r\n            const codegenNode = node.codegenNode;\r\n            if (codegenNode.type !== 13 /* VNODE_CALL */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            if (codegenNode.isBlock &&\r\n                node.tag !== 'svg' &&\r\n                node.tag !== 'foreignObject') {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const flag = getPatchFlag(codegenNode);\r\n            if (!flag) {\r\n                let returnType = 3 /* CAN_STRINGIFY */;\r\n                // Element itself has no patch flag. However we still need to check:\r\n                // 1. Even for a node with no patch flag, it is possible for it to contain\r\n                // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n                // injected keys or cached event handlers. Therefore we need to always\r\n                // check the codegenNode's props to be sure.\r\n                const generatedPropsType = getGeneratedPropsConstantType(node, context);\r\n                if (generatedPropsType === 0 /* NOT_CONSTANT */) {\r\n                    constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                    return 0 /* NOT_CONSTANT */;\r\n                }\r\n                if (generatedPropsType < returnType) {\r\n                    returnType = generatedPropsType;\r\n                }\r\n                // 2. its children.\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    const childType = getConstantType(node.children[i], context);\r\n                    if (childType === 0 /* NOT_CONSTANT */) {\r\n                        constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                        return 0 /* NOT_CONSTANT */;\r\n                    }\r\n                    if (childType < returnType) {\r\n                        returnType = childType;\r\n                    }\r\n                }\r\n                // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n                // type, check if any of the props can cause the type to be lowered\r\n                // we can skip can_patch because it's guaranteed by the absence of a\r\n                // patchFlag.\r\n                if (returnType > 1 /* CAN_SKIP_PATCH */) {\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* DIRECTIVE */ && p.name === 'bind' && p.exp) {\r\n                            const expType = getConstantType(p.exp, context);\r\n                            if (expType === 0 /* NOT_CONSTANT */) {\r\n                                constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                                return 0 /* NOT_CONSTANT */;\r\n                            }\r\n                            if (expType < returnType) {\r\n                                returnType = expType;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // only svg/foreignObject could be block here, however if they are\r\n                // static then they don't need to be blocks since there will be no\r\n                // nested updates.\r\n                if (codegenNode.isBlock) {\r\n                    context.removeHelper(OPEN_BLOCK);\r\n                    context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\r\n                    codegenNode.isBlock = false;\r\n                    context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\r\n                }\r\n                constantCache.set(node, returnType);\r\n                return returnType;\r\n            }\r\n            else {\r\n                constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return 3 /* CAN_STRINGIFY */;\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n        case 10 /* IF_BRANCH */:\r\n            return 0 /* NOT_CONSTANT */;\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return getConstantType(node.content, context);\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return node.constType;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            let returnType = 3 /* CAN_STRINGIFY */;\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                if (isString(child) || isSymbol(child)) {\r\n                    continue;\r\n                }\r\n                const childType = getConstantType(child, context);\r\n                if (childType === 0 /* NOT_CONSTANT */) {\r\n                    return 0 /* NOT_CONSTANT */;\r\n                }\r\n                else if (childType < returnType) {\r\n                    returnType = childType;\r\n                }\r\n            }\r\n            return returnType;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return 0 /* NOT_CONSTANT */;\r\n    }\r\n}\r\nconst allowHoistedHelperSet = new Set([\r\n    NORMALIZE_CLASS,\r\n    NORMALIZE_STYLE,\r\n    NORMALIZE_PROPS,\r\n    GUARD_REACTIVE_PROPS\r\n]);\r\nfunction getConstantTypeOfHelperCall(value, context) {\r\n    if (value.type === 14 /* JS_CALL_EXPRESSION */ &&\r\n        !isString(value.callee) &&\r\n        allowHoistedHelperSet.has(value.callee)) {\r\n        const arg = value.arguments[0];\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            return getConstantType(arg, context);\r\n        }\r\n        else if (arg.type === 14 /* JS_CALL_EXPRESSION */) {\r\n            // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n            return getConstantTypeOfHelperCall(arg, context);\r\n        }\r\n    }\r\n    return 0 /* NOT_CONSTANT */;\r\n}\r\nfunction getGeneratedPropsConstantType(node, context) {\r\n    let returnType = 3 /* CAN_STRINGIFY */;\r\n    const props = getNodeProps(node);\r\n    if (props && props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        const { properties } = props;\r\n        for (let i = 0; i < properties.length; i++) {\r\n            const { key, value } = properties[i];\r\n            const keyType = getConstantType(key, context);\r\n            if (keyType === 0 /* NOT_CONSTANT */) {\r\n                return keyType;\r\n            }\r\n            if (keyType < returnType) {\r\n                returnType = keyType;\r\n            }\r\n            let valueType;\r\n            if (value.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                valueType = getConstantType(value, context);\r\n            }\r\n            else if (value.type === 14 /* JS_CALL_EXPRESSION */) {\r\n                // some helper calls can be hoisted,\r\n                // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n                // in this case we need to respect the ConstantType of the helper's arguments\r\n                valueType = getConstantTypeOfHelperCall(value, context);\r\n            }\r\n            else {\r\n                valueType = 0 /* NOT_CONSTANT */;\r\n            }\r\n            if (valueType === 0 /* NOT_CONSTANT */) {\r\n                return valueType;\r\n            }\r\n            if (valueType < returnType) {\r\n                returnType = valueType;\r\n            }\r\n        }\r\n    }\r\n    return returnType;\r\n}\r\nfunction getNodeProps(node) {\r\n    const codegenNode = node.codegenNode;\r\n    if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n        return codegenNode.props;\r\n    }\r\n}\r\nfunction getPatchFlag(node) {\r\n    const flag = node.patchFlag;\r\n    return flag ? parseInt(flag, 10) : undefined;\r\n}\n\nfunction createTransformContext(root, { filename = '', prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {\r\n    const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\r\n    const context = {\r\n        // options\r\n        selfName: nameMatch && capitalize(camelize$1(nameMatch[1])),\r\n        prefixIdentifiers,\r\n        hoistStatic,\r\n        cacheHandlers,\r\n        nodeTransforms,\r\n        directiveTransforms,\r\n        transformHoist,\r\n        isBuiltInComponent,\r\n        isCustomElement,\r\n        expressionPlugins,\r\n        scopeId,\r\n        slotted,\r\n        ssr,\r\n        inSSR,\r\n        ssrCssVars,\r\n        bindingMetadata,\r\n        inline,\r\n        isTS,\r\n        onError,\r\n        onWarn,\r\n        compatConfig,\r\n        // state\r\n        root,\r\n        helpers: new Map(),\r\n        components: new Set(),\r\n        directives: new Set(),\r\n        hoists: [],\r\n        imports: [],\r\n        constantCache: new Map(),\r\n        temps: 0,\r\n        cached: 0,\r\n        identifiers: Object.create(null),\r\n        scopes: {\r\n            vFor: 0,\r\n            vSlot: 0,\r\n            vPre: 0,\r\n            vOnce: 0\r\n        },\r\n        parent: null,\r\n        currentNode: root,\r\n        childIndex: 0,\r\n        inVOnce: false,\r\n        // methods\r\n        helper(name) {\r\n            const count = context.helpers.get(name) || 0;\r\n            context.helpers.set(name, count + 1);\r\n            return name;\r\n        },\r\n        removeHelper(name) {\r\n            const count = context.helpers.get(name);\r\n            if (count) {\r\n                const currentCount = count - 1;\r\n                if (!currentCount) {\r\n                    context.helpers.delete(name);\r\n                }\r\n                else {\r\n                    context.helpers.set(name, currentCount);\r\n                }\r\n            }\r\n        },\r\n        helperString(name) {\r\n            return `_${helperNameMap[context.helper(name)]}`;\r\n        },\r\n        replaceNode(node) {\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!context.currentNode) {\r\n                    throw new Error(`Node being replaced is already removed.`);\r\n                }\r\n                if (!context.parent) {\r\n                    throw new Error(`Cannot replace root node.`);\r\n                }\r\n            }\r\n            context.parent.children[context.childIndex] = context.currentNode = node;\r\n        },\r\n        removeNode(node) {\r\n            if ((process.env.NODE_ENV !== 'production') && !context.parent) {\r\n                throw new Error(`Cannot remove root node.`);\r\n            }\r\n            const list = context.parent.children;\r\n            const removalIndex = node\r\n                ? list.indexOf(node)\r\n                : context.currentNode\r\n                    ? context.childIndex\r\n                    : -1;\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production') && removalIndex < 0) {\r\n                throw new Error(`node being removed is not a child of current parent`);\r\n            }\r\n            if (!node || node === context.currentNode) {\r\n                // current node removed\r\n                context.currentNode = null;\r\n                context.onNodeRemoved();\r\n            }\r\n            else {\r\n                // sibling node removed\r\n                if (context.childIndex > removalIndex) {\r\n                    context.childIndex--;\r\n                    context.onNodeRemoved();\r\n                }\r\n            }\r\n            context.parent.children.splice(removalIndex, 1);\r\n        },\r\n        onNodeRemoved: () => { },\r\n        addIdentifiers(exp) {\r\n        },\r\n        removeIdentifiers(exp) {\r\n        },\r\n        hoist(exp) {\r\n            if (isString(exp))\r\n                exp = createSimpleExpression(exp);\r\n            context.hoists.push(exp);\r\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2 /* CAN_HOIST */);\r\n            identifier.hoisted = exp;\r\n            return identifier;\r\n        },\r\n        cache(exp, isVNode = false) {\r\n            return createCacheExpression(context.cached++, exp, isVNode);\r\n        }\r\n    };\r\n    {\r\n        context.filters = new Set();\r\n    }\r\n    return context;\r\n}\r\nfunction transform(root, options) {\r\n    const context = createTransformContext(root, options);\r\n    traverseNode(root, context);\r\n    if (options.hoistStatic) {\r\n        hoistStatic(root, context);\r\n    }\r\n    if (!options.ssr) {\r\n        createRootCodegen(root, context);\r\n    }\r\n    // finalize meta information\r\n    root.helpers = [...context.helpers.keys()];\r\n    root.components = [...context.components];\r\n    root.directives = [...context.directives];\r\n    root.imports = context.imports;\r\n    root.hoists = context.hoists;\r\n    root.temps = context.temps;\r\n    root.cached = context.cached;\r\n    {\r\n        root.filters = [...context.filters];\r\n    }\r\n}\r\nfunction createRootCodegen(root, context) {\r\n    const { helper } = context;\r\n    const { children } = root;\r\n    if (children.length === 1) {\r\n        const child = children[0];\r\n        // if the single child is an element, turn it into a block.\r\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n            // single element root is never hoisted so codegenNode will never be\r\n            // SimpleExpressionNode\r\n            const codegenNode = child.codegenNode;\r\n            if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                makeBlock(codegenNode, context);\r\n            }\r\n            root.codegenNode = codegenNode;\r\n        }\r\n        else {\r\n            // - single <slot/>, IfNode, ForNode: already blocks.\r\n            // - single text node: always patched.\r\n            // root codegen falls through via genNode()\r\n            root.codegenNode = child;\r\n        }\r\n    }\r\n    else if (children.length > 1) {\r\n        // root has multiple nodes - return a fragment block.\r\n        let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n        let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n        // check if the fragment actually contains a single valid child with\r\n        // the rest being comments\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n            patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n            patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n        }\r\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, undefined, false /* isComponent */);\r\n    }\r\n    else ;\r\n}\r\nfunction traverseChildren(parent, context) {\r\n    let i = 0;\r\n    const nodeRemoved = () => {\r\n        i--;\r\n    };\r\n    for (; i < parent.children.length; i++) {\r\n        const child = parent.children[i];\r\n        if (isString(child))\r\n            continue;\r\n        context.parent = parent;\r\n        context.childIndex = i;\r\n        context.onNodeRemoved = nodeRemoved;\r\n        traverseNode(child, context);\r\n    }\r\n}\r\nfunction traverseNode(node, context) {\r\n    context.currentNode = node;\r\n    // apply transform plugins\r\n    const { nodeTransforms } = context;\r\n    const exitFns = [];\r\n    for (let i = 0; i < nodeTransforms.length; i++) {\r\n        const onExit = nodeTransforms[i](node, context);\r\n        if (onExit) {\r\n            if (isArray(onExit)) {\r\n                exitFns.push(...onExit);\r\n            }\r\n            else {\r\n                exitFns.push(onExit);\r\n            }\r\n        }\r\n        if (!context.currentNode) {\r\n            // node was removed\r\n            return;\r\n        }\r\n        else {\r\n            // node may have been replaced\r\n            node = context.currentNode;\r\n        }\r\n    }\r\n    switch (node.type) {\r\n        case 3 /* COMMENT */:\r\n            if (!context.ssr) {\r\n                // inject import for the Comment symbol, which is needed for creating\r\n                // comment nodes with `createVNode`\r\n                context.helper(CREATE_COMMENT);\r\n            }\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            // no need to traverse, but we need to inject toString helper\r\n            if (!context.ssr) {\r\n                context.helper(TO_DISPLAY_STRING);\r\n            }\r\n            break;\r\n        // for container types, further traverse downwards\r\n        case 9 /* IF */:\r\n            for (let i = 0; i < node.branches.length; i++) {\r\n                traverseNode(node.branches[i], context);\r\n            }\r\n            break;\r\n        case 10 /* IF_BRANCH */:\r\n        case 11 /* FOR */:\r\n        case 1 /* ELEMENT */:\r\n        case 0 /* ROOT */:\r\n            traverseChildren(node, context);\r\n            break;\r\n    }\r\n    // exit transforms\r\n    context.currentNode = node;\r\n    let i = exitFns.length;\r\n    while (i--) {\r\n        exitFns[i]();\r\n    }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n    const matches = isString(name)\r\n        ? (n) => n === name\r\n        : (n) => name.test(n);\r\n    return (node, context) => {\r\n        if (node.type === 1 /* ELEMENT */) {\r\n            const { props } = node;\r\n            // structural directive transforms are not concerned with slots\r\n            // as they are handled separately in vSlot.ts\r\n            if (node.tagType === 3 /* TEMPLATE */ && props.some(isVSlot)) {\r\n                return;\r\n            }\r\n            const exitFns = [];\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (prop.type === 7 /* DIRECTIVE */ && matches(prop.name)) {\r\n                    // structural directives are removed to avoid infinite recursion\r\n                    // also we remove them *before* applying so that it can further\r\n                    // traverse itself in case it moves the node around\r\n                    props.splice(i, 1);\r\n                    i--;\r\n                    const onExit = fn(node, prop, context);\r\n                    if (onExit)\r\n                        exitFns.push(onExit);\r\n                }\r\n            }\r\n            return exitFns;\r\n        }\r\n    };\r\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\r\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssrRuntimeModuleName = 'vue/server-renderer', ssr = false, isTS = false, inSSR = false }) {\r\n    const context = {\r\n        mode,\r\n        prefixIdentifiers,\r\n        sourceMap,\r\n        filename,\r\n        scopeId,\r\n        optimizeImports,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        ssrRuntimeModuleName,\r\n        ssr,\r\n        isTS,\r\n        inSSR,\r\n        source: ast.loc.source,\r\n        code: ``,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        indentLevel: 0,\r\n        pure: false,\r\n        map: undefined,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`;\r\n        },\r\n        push(code, node) {\r\n            context.code += code;\r\n        },\r\n        indent() {\r\n            newline(++context.indentLevel);\r\n        },\r\n        deindent(withoutNewLine = false) {\r\n            if (withoutNewLine) {\r\n                --context.indentLevel;\r\n            }\r\n            else {\r\n                newline(--context.indentLevel);\r\n            }\r\n        },\r\n        newline() {\r\n            newline(context.indentLevel);\r\n        }\r\n    };\r\n    function newline(n) {\r\n        context.push('\\n' + `  `.repeat(n));\r\n    }\r\n    return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n    const context = createCodegenContext(ast, options);\r\n    if (options.onContextCreated)\r\n        options.onContextCreated(context);\r\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\r\n    const hasHelpers = ast.helpers.length > 0;\r\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\r\n    // preambles\r\n    // in setup() inline mode, the preamble is generated in a sub context\r\n    // and returned separately.\r\n    const preambleContext = context;\r\n    {\r\n        genFunctionPreamble(ast, preambleContext);\r\n    }\r\n    // enter render function\r\n    const functionName = ssr ? `ssrRender` : `render`;\r\n    const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\r\n    const signature = args.join(', ');\r\n    {\r\n        push(`function ${functionName}(${signature}) {`);\r\n    }\r\n    indent();\r\n    if (useWithBlock) {\r\n        push(`with (_ctx) {`);\r\n        indent();\r\n        // function mode const declarations should be inside with block\r\n        // also they should be renamed to avoid collision with user properties\r\n        if (hasHelpers) {\r\n            push(`const { ${ast.helpers\r\n                .map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`)\r\n                .join(', ')} } = _Vue`);\r\n            push(`\\n`);\r\n            newline();\r\n        }\r\n    }\r\n    // generate asset resolution statements\r\n    if (ast.components.length) {\r\n        genAssets(ast.components, 'component', context);\r\n        if (ast.directives.length || ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.directives.length) {\r\n        genAssets(ast.directives, 'directive', context);\r\n        if (ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.filters && ast.filters.length) {\r\n        newline();\r\n        genAssets(ast.filters, 'filter', context);\r\n        newline();\r\n    }\r\n    if (ast.temps > 0) {\r\n        push(`let `);\r\n        for (let i = 0; i < ast.temps; i++) {\r\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n        }\r\n    }\r\n    if (ast.components.length || ast.directives.length || ast.temps) {\r\n        push(`\\n`);\r\n        newline();\r\n    }\r\n    // generate the VNode tree expression\r\n    if (!ssr) {\r\n        push(`return `);\r\n    }\r\n    if (ast.codegenNode) {\r\n        genNode(ast.codegenNode, context);\r\n    }\r\n    else {\r\n        push(`null`);\r\n    }\r\n    if (useWithBlock) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    deindent();\r\n    push(`}`);\r\n    return {\r\n        ast,\r\n        code: context.code,\r\n        preamble: ``,\r\n        // SourceMapGenerator does have toJSON() method but it's not in the types\r\n        map: context.map ? context.map.toJSON() : undefined\r\n    };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName, ssrRuntimeModuleName } = context;\r\n    const VueBinding = runtimeGlobalName;\r\n    const aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\n    // Generate const declaration for helpers\r\n    // In prefix mode, we place the const declaration at top so it's done\r\n    // only once; But if we not prefixing, we place the declaration inside the\r\n    // with block so it doesn't incur the `in` check cost for every helper access.\r\n    if (ast.helpers.length > 0) {\r\n        {\r\n            // \"with\" mode.\r\n            // save Vue in a separate variable to avoid collision\r\n            push(`const _Vue = ${VueBinding}\\n`);\r\n            // in \"with\" mode, helpers are declared inside the with block to avoid\r\n            // has check cost, but hoists are lifted out of the function - we need\r\n            // to provide the helper here.\r\n            if (ast.hoists.length) {\r\n                const staticHelpers = [\r\n                    CREATE_VNODE,\r\n                    CREATE_ELEMENT_VNODE,\r\n                    CREATE_COMMENT,\r\n                    CREATE_TEXT,\r\n                    CREATE_STATIC\r\n                ]\r\n                    .filter(helper => ast.helpers.includes(helper))\r\n                    .map(aliasHelper)\r\n                    .join(', ');\r\n                push(`const { ${staticHelpers} } = _Vue\\n`);\r\n            }\r\n        }\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    push(`return `);\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\r\n    const resolver = helper(type === 'filter'\r\n        ? RESOLVE_FILTER\r\n        : type === 'component'\r\n            ? RESOLVE_COMPONENT\r\n            : RESOLVE_DIRECTIVE);\r\n    for (let i = 0; i < assets.length; i++) {\r\n        let id = assets[i];\r\n        // potential component implicit self-reference inferred from SFC filename\r\n        const maybeSelfReference = id.endsWith('__self');\r\n        if (maybeSelfReference) {\r\n            id = id.slice(0, -6);\r\n        }\r\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\r\n        if (i < assets.length - 1) {\r\n            newline();\r\n        }\r\n    }\r\n}\r\nfunction genHoists(hoists, context) {\r\n    if (!hoists.length) {\r\n        return;\r\n    }\r\n    context.pure = true;\r\n    const { push, newline, helper, scopeId, mode } = context;\r\n    newline();\r\n    for (let i = 0; i < hoists.length; i++) {\r\n        const exp = hoists[i];\r\n        if (exp) {\r\n            push(`const _hoisted_${i + 1} = ${``}`);\r\n            genNode(exp, context);\r\n            newline();\r\n        }\r\n    }\r\n    context.pure = false;\r\n}\r\nfunction isText$1(n) {\r\n    return (isString(n) ||\r\n        n.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n        n.type === 2 /* TEXT */ ||\r\n        n.type === 5 /* INTERPOLATION */ ||\r\n        n.type === 8 /* COMPOUND_EXPRESSION */);\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n    const multilines = nodes.length > 3 ||\r\n        (((process.env.NODE_ENV !== 'production')) && nodes.some(n => isArray(n) || !isText$1(n)));\r\n    context.push(`[`);\r\n    multilines && context.indent();\r\n    genNodeList(nodes, context, multilines);\r\n    multilines && context.deindent();\r\n    context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n    const { push, newline } = context;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (isString(node)) {\r\n            push(node);\r\n        }\r\n        else if (isArray(node)) {\r\n            genNodeListAsArray(node, context);\r\n        }\r\n        else {\r\n            genNode(node, context);\r\n        }\r\n        if (i < nodes.length - 1) {\r\n            if (multilines) {\r\n                comma && push(',');\r\n                newline();\r\n            }\r\n            else {\r\n                comma && push(', ');\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genNode(node, context) {\r\n    if (isString(node)) {\r\n        context.push(node);\r\n        return;\r\n    }\r\n    if (isSymbol(node)) {\r\n        context.push(context.helper(node));\r\n        return;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\r\n                    `Apply appropriate transforms first.`);\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 2 /* TEXT */:\r\n            genText(node, context);\r\n            break;\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            genExpression(node, context);\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case 12 /* TEXT_CALL */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case 3 /* COMMENT */:\r\n            genComment(node, context);\r\n            break;\r\n        case 13 /* VNODE_CALL */:\r\n            genVNodeCall(node, context);\r\n            break;\r\n        case 14 /* JS_CALL_EXPRESSION */:\r\n            genCallExpression(node, context);\r\n            break;\r\n        case 15 /* JS_OBJECT_EXPRESSION */:\r\n            genObjectExpression(node, context);\r\n            break;\r\n        case 17 /* JS_ARRAY_EXPRESSION */:\r\n            genArrayExpression(node, context);\r\n            break;\r\n        case 18 /* JS_FUNCTION_EXPRESSION */:\r\n            genFunctionExpression(node, context);\r\n            break;\r\n        case 19 /* JS_CONDITIONAL_EXPRESSION */:\r\n            genConditionalExpression(node, context);\r\n            break;\r\n        case 20 /* JS_CACHE_EXPRESSION */:\r\n            genCacheExpression(node, context);\r\n            break;\r\n        case 21 /* JS_BLOCK_STATEMENT */:\r\n            genNodeList(node.body, context, true, false);\r\n            break;\r\n        // SSR only types\r\n        case 22 /* JS_TEMPLATE_LITERAL */:\r\n            break;\r\n        case 23 /* JS_IF_STATEMENT */:\r\n            break;\r\n        case 24 /* JS_ASSIGNMENT_EXPRESSION */:\r\n            break;\r\n        case 25 /* JS_SEQUENCE_EXPRESSION */:\r\n            break;\r\n        case 26 /* JS_RETURN_STATEMENT */:\r\n            break;\r\n        /* istanbul ignore next */\r\n        case 10 /* IF_BRANCH */:\r\n            // noop\r\n            break;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                assert(false, `unhandled codegen node type: ${node.type}`);\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = node;\r\n                return exhaustiveCheck;\r\n            }\r\n    }\r\n}\r\nfunction genText(node, context) {\r\n    context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n    const { content, isStatic } = node;\r\n    context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure)\r\n        push(PURE_ANNOTATION);\r\n    push(`${helper(TO_DISPLAY_STRING)}(`);\r\n    genNode(node.content, context);\r\n    push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (isString(child)) {\r\n            context.push(child);\r\n        }\r\n        else {\r\n            genNode(child, context);\r\n        }\r\n    }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n    const { push } = context;\r\n    if (node.type === 8 /* COMPOUND_EXPRESSION */) {\r\n        push(`[`);\r\n        genCompoundExpression(node, context);\r\n        push(`]`);\r\n    }\r\n    else if (node.isStatic) {\r\n        // only quote keys if necessary\r\n        const text = isSimpleIdentifier(node.content)\r\n            ? node.content\r\n            : JSON.stringify(node.content);\r\n        push(text, node);\r\n    }\r\n    else {\r\n        push(`[${node.content}]`, node);\r\n    }\r\n}\r\nfunction genComment(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n}\r\nfunction genVNodeCall(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent } = node;\r\n    if (directives) {\r\n        push(helper(WITH_DIRECTIVES) + `(`);\r\n    }\r\n    if (isBlock) {\r\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\r\n    }\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    const callHelper = isBlock\r\n        ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n        : getVNodeHelper(context.inSSR, isComponent);\r\n    push(helper(callHelper) + `(`, node);\r\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\r\n    push(`)`);\r\n    if (isBlock) {\r\n        push(`)`);\r\n    }\r\n    if (directives) {\r\n        push(`, `);\r\n        genNode(directives, context);\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genNullableArgs(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i] != null)\r\n            break;\r\n    }\r\n    return args.slice(0, i + 1).map(arg => arg || `null`);\r\n}\r\n// JavaScript\r\nfunction genCallExpression(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const callee = isString(node.callee) ? node.callee : helper(node.callee);\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(callee + `(`, node);\r\n    genNodeList(node.arguments, context);\r\n    push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n    const { push, indent, deindent, newline } = context;\r\n    const { properties } = node;\r\n    if (!properties.length) {\r\n        push(`{}`, node);\r\n        return;\r\n    }\r\n    const multilines = properties.length > 1 ||\r\n        (((process.env.NODE_ENV !== 'production')) &&\r\n            properties.some(p => p.value.type !== 4 /* SIMPLE_EXPRESSION */));\r\n    push(multilines ? `{` : `{ `);\r\n    multilines && indent();\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const { key, value } = properties[i];\r\n        // key\r\n        genExpressionAsPropertyKey(key, context);\r\n        push(`: `);\r\n        // value\r\n        genNode(value, context);\r\n        if (i < properties.length - 1) {\r\n            // will only reach this if it's multilines\r\n            push(`,`);\r\n            newline();\r\n        }\r\n    }\r\n    multilines && deindent();\r\n    push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n    genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    const { params, returns, body, newline, isSlot } = node;\r\n    if (isSlot) {\r\n        // wrap slot functions with owner context\r\n        push(`_${helperNameMap[WITH_CTX]}(`);\r\n    }\r\n    push(`(`, node);\r\n    if (isArray(params)) {\r\n        genNodeList(params, context);\r\n    }\r\n    else if (params) {\r\n        genNode(params, context);\r\n    }\r\n    push(`) => `);\r\n    if (newline || body) {\r\n        push(`{`);\r\n        indent();\r\n    }\r\n    if (returns) {\r\n        if (newline) {\r\n            push(`return `);\r\n        }\r\n        if (isArray(returns)) {\r\n            genNodeListAsArray(returns, context);\r\n        }\r\n        else {\r\n            genNode(returns, context);\r\n        }\r\n    }\r\n    else if (body) {\r\n        genNode(body, context);\r\n    }\r\n    if (newline || body) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    if (isSlot) {\r\n        if (node.isNonScopedSlot) {\r\n            push(`, undefined, true`);\r\n        }\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n    const { test, consequent, alternate, newline: needNewline } = node;\r\n    const { push, indent, deindent, newline } = context;\r\n    if (test.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        const needsParens = !isSimpleIdentifier(test.content);\r\n        needsParens && push(`(`);\r\n        genExpression(test, context);\r\n        needsParens && push(`)`);\r\n    }\r\n    else {\r\n        push(`(`);\r\n        genNode(test, context);\r\n        push(`)`);\r\n    }\r\n    needNewline && indent();\r\n    context.indentLevel++;\r\n    needNewline || push(` `);\r\n    push(`? `);\r\n    genNode(consequent, context);\r\n    context.indentLevel--;\r\n    needNewline && newline();\r\n    needNewline || push(` `);\r\n    push(`: `);\r\n    const isNested = alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */;\r\n    if (!isNested) {\r\n        context.indentLevel++;\r\n    }\r\n    genNode(alternate, context);\r\n    if (!isNested) {\r\n        context.indentLevel--;\r\n    }\r\n    needNewline && deindent(true /* without newline */);\r\n}\r\nfunction genCacheExpression(node, context) {\r\n    const { push, helper, indent, deindent, newline } = context;\r\n    push(`_cache[${node.index}] || (`);\r\n    if (node.isVNode) {\r\n        indent();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n        newline();\r\n    }\r\n    push(`_cache[${node.index}] = `);\r\n    genNode(node.value, context);\r\n    if (node.isVNode) {\r\n        push(`,`);\r\n        newline();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n        newline();\r\n        push(`_cache[${node.index}]`);\r\n        deindent();\r\n    }\r\n    push(`)`);\r\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\r\n    {\r\n        return;\r\n    }\r\n}\r\nfunction isReferencedIdentifier(id, parent, parentStack) {\r\n    {\r\n        return false;\r\n    }\r\n}\r\nfunction isInDestructureAssignment(parent, parentStack) {\r\n    if (parent &&\r\n        (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\r\n        let i = parentStack.length;\r\n        while (i--) {\r\n            const p = parentStack[i];\r\n            if (p.type === 'AssignmentExpression') {\r\n                return true;\r\n            }\r\n            else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction walkFunctionParams(node, onIdent) {\r\n    for (const p of node.params) {\r\n        for (const id of extractIdentifiers(p)) {\r\n            onIdent(id);\r\n        }\r\n    }\r\n}\r\nfunction walkBlockDeclarations(block, onIdent) {\r\n    for (const stmt of block.body) {\r\n        if (stmt.type === 'VariableDeclaration') {\r\n            if (stmt.declare)\r\n                continue;\r\n            for (const decl of stmt.declarations) {\r\n                for (const id of extractIdentifiers(decl.id)) {\r\n                    onIdent(id);\r\n                }\r\n            }\r\n        }\r\n        else if (stmt.type === 'FunctionDeclaration' ||\r\n            stmt.type === 'ClassDeclaration') {\r\n            if (stmt.declare || !stmt.id)\r\n                continue;\r\n            onIdent(stmt.id);\r\n        }\r\n    }\r\n}\r\nfunction extractIdentifiers(param, nodes = []) {\r\n    switch (param.type) {\r\n        case 'Identifier':\r\n            nodes.push(param);\r\n            break;\r\n        case 'MemberExpression':\r\n            let object = param;\r\n            while (object.type === 'MemberExpression') {\r\n                object = object.object;\r\n            }\r\n            nodes.push(object);\r\n            break;\r\n        case 'ObjectPattern':\r\n            for (const prop of param.properties) {\r\n                if (prop.type === 'RestElement') {\r\n                    extractIdentifiers(prop.argument, nodes);\r\n                }\r\n                else {\r\n                    extractIdentifiers(prop.value, nodes);\r\n                }\r\n            }\r\n            break;\r\n        case 'ArrayPattern':\r\n            param.elements.forEach(element => {\r\n                if (element)\r\n                    extractIdentifiers(element, nodes);\r\n            });\r\n            break;\r\n        case 'RestElement':\r\n            extractIdentifiers(param.argument, nodes);\r\n            break;\r\n        case 'AssignmentPattern':\r\n            extractIdentifiers(param.left, nodes);\r\n            break;\r\n    }\r\n    return nodes;\r\n}\r\nconst isFunctionType = (node) => {\r\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\r\n};\r\nconst isStaticProperty = (node) => node &&\r\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\r\n    !node.computed;\r\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\n\n// these keywords should not appear inside expressions, but operators like\r\n// typeof, instanceof and in are allowed\r\nconst prohibitedKeywordRE = new RegExp('\\\\b' +\r\n    ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\r\n        'super,throw,while,yield,delete,export,import,return,switch,default,' +\r\n        'extends,finally,continue,debugger,function,arguments,typeof,void')\r\n        .split(',')\r\n        .join('\\\\b|\\\\b') +\r\n    '\\\\b');\r\n// strip strings in expressions\r\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\r\n/**\r\n * Validate a non-prefixed expression.\r\n * This is only called when using the in-browser runtime compiler since it\r\n * doesn't prefix expressions.\r\n */\r\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\r\n    const exp = node.content;\r\n    // empty expressions are validated per-directive since some directives\r\n    // do allow empty expressions.\r\n    if (!exp.trim()) {\r\n        return;\r\n    }\r\n    try {\r\n        new Function(asRawStatements\r\n            ? ` ${exp} `\r\n            : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\r\n    }\r\n    catch (e) {\r\n        let message = e.message;\r\n        const keywordMatch = exp\r\n            .replace(stripStringRE, '')\r\n            .match(prohibitedKeywordRE);\r\n        if (keywordMatch) {\r\n            message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\r\n        }\r\n        context.onError(createCompilerError(44 /* X_INVALID_EXPRESSION */, node.loc, undefined, message));\r\n    }\r\n}\n\nconst transformExpression = (node, context) => {\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        node.content = processExpression(node.content, context);\r\n    }\r\n    else if (node.type === 1 /* ELEMENT */) {\r\n        // handle directives on element\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const dir = node.props[i];\r\n            // do not process for v-on & v-for since they are special handled\r\n            if (dir.type === 7 /* DIRECTIVE */ && dir.name !== 'for') {\r\n                const exp = dir.exp;\r\n                const arg = dir.arg;\r\n                // do not process exp if this is v-on:arg - we need special handling\r\n                // for wrapping inline statements.\r\n                if (exp &&\r\n                    exp.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                    !(dir.name === 'on' && arg)) {\r\n                    dir.exp = processExpression(exp, context, \r\n                    // slot args must be processed as function params\r\n                    dir.name === 'slot');\r\n                }\r\n                if (arg && arg.type === 4 /* SIMPLE_EXPRESSION */ && !arg.isStatic) {\r\n                    dir.arg = processExpression(arg, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !true check so that it can be\r\n// tree-shaken from the browser build.\r\nfunction processExpression(node, context, \r\n// some expressions like v-slot props & v-for aliases should be parsed as\r\n// function params\r\nasParams = false, \r\n// v-on handler values may contain multiple statements\r\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\r\n    {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            // simple in-browser validation (same logic in 2.x)\r\n            validateBrowserExpression(node, context, asParams, asRawStatements);\r\n        }\r\n        return node;\r\n    }\r\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // #1587: We need to dynamically increment the key based on the current\r\n        // node's sibling nodes, since chained v-if/else branches are\r\n        // rendered at the same depth\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(ifNode);\r\n        let key = 0;\r\n        while (i-- >= 0) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                key += sibling.branches.length;\r\n            }\r\n        }\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                const parentCondition = getParentCondition(ifNode.codegenNode);\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(28 /* X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && true && dir.exp) {\r\n        validateBrowserExpression(dir.exp, context);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        const comments = [];\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if ((process.env.NODE_ENV !== 'production') && sibling && sibling.type === 3 /* COMMENT */) {\r\n                context.removeNode(sibling);\r\n                comments.unshift(sibling);\r\n                continue;\r\n            }\r\n            if (sibling &&\r\n                sibling.type === 2 /* TEXT */ &&\r\n                !sibling.content.trim().length) {\r\n                context.removeNode(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                // Check if v-else was followed by v-else-if\r\n                if (dir.name === 'else-if' &&\r\n                    sibling.branches[sibling.branches.length - 1].condition === undefined) {\r\n                    context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n                }\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                if ((process.env.NODE_ENV !== 'production') &&\r\n                    comments.length &&\r\n                    // #3619 ignore comments if the v-if is direct child of <transition>\r\n                    !(context.parent &&\r\n                        context.parent.type === 1 /* ELEMENT */ &&\r\n                        isBuiltInType(context.parent.tag, 'transition'))) {\r\n                    branch.children = [...comments, ...branch.children];\r\n                }\r\n                // check if user is forcing same key on different branches\r\n                if ((process.env.NODE_ENV !== 'production') || !true) {\r\n                    const key = branch.userKey;\r\n                    if (key) {\r\n                        sibling.branches.forEach(({ userKey }) => {\r\n                            if (isSameKey(userKey, key)) {\r\n                                context.onError(createCompilerError(29 /* X_V_IF_SAME_KEY */, branch.userKey.loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    return {\r\n        type: 10 /* IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: node.tagType === 3 /* TEMPLATE */ && !findDir(node, 'for')\r\n            ? node.children\r\n            : [node],\r\n        userKey: findProp(node, `key`)\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            (process.env.NODE_ENV !== 'production') ? '\"v-if\"' : '\"\"',\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, keyIndex, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n    const { helper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* CAN_HOIST */));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n            let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n            // check if the fragment actually contains a single valid child with\r\n            // the rest being comments\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n                patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n                patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n            }\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, false, false /* isComponent */, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const ret = firstChild.codegenNode;\r\n        const vnodeCall = getMemoedVNodeCall(ret);\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* VNODE_CALL */) {\r\n            makeBlock(vnodeCall, context);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return ret;\r\n    }\r\n}\r\nfunction isSameKey(a, b) {\r\n    if (!a || a.type !== b.type) {\r\n        return false;\r\n    }\r\n    if (a.type === 6 /* ATTRIBUTE */) {\r\n        if (a.value.content !== b.value.content) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        // directive\r\n        const exp = a.exp;\r\n        const branchExp = b.exp;\r\n        if (exp.type !== branchExp.type) {\r\n            return false;\r\n        }\r\n        if (exp.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n            exp.isStatic !== branchExp.isStatic ||\r\n            exp.content !== branchExp.content) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getParentCondition(node) {\r\n    while (true) {\r\n        if (node.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n            if (node.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                node = node.alternate;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        }\r\n        else if (node.type === 20 /* JS_CACHE_EXPRESSION */) {\r\n            node = node.value;\r\n        }\r\n    }\r\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper, removeHelper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const isTemplate = isTemplateNode(node);\r\n        const memo = findDir(node, 'memo');\r\n        const keyProp = findProp(node, `key`);\r\n        const keyExp = keyProp &&\r\n            (keyProp.type === 6 /* ATTRIBUTE */\r\n                ? createSimpleExpression(keyProp.value.content, true)\r\n                : keyProp.exp);\r\n        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\r\n        const isStableFragment = forNode.source.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n            forNode.source.constType > 0 /* NOT_CONSTANT */;\r\n        const fragmentFlag = isStableFragment\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : keyProp\r\n                ? 128 /* KEYED_FRAGMENT */\r\n                : 256 /* UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag +\r\n            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const { children } = forNode;\r\n            // check <template v-for> key placement\r\n            if (((process.env.NODE_ENV !== 'production') || !true) && isTemplate) {\r\n                node.children.some(c => {\r\n                    if (c.type === 1 /* ELEMENT */) {\r\n                        const key = findProp(c, 'key');\r\n                        if (key) {\r\n                            context.onError(createCompilerError(33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* STABLE_FRAGMENT */ +\r\n                    ((process.env.NODE_ENV !== 'production')\r\n                        ? ` /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`\r\n                        : ``), undefined, undefined, true, undefined, false /* isComponent */);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n                if (childBlock.isBlock !== !isStableFragment) {\r\n                    if (childBlock.isBlock) {\r\n                        // switch from block to vnode\r\n                        removeHelper(OPEN_BLOCK);\r\n                        removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                    else {\r\n                        // switch from vnode to block\r\n                        removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                }\r\n                childBlock.isBlock = !isStableFragment;\r\n                if (childBlock.isBlock) {\r\n                    helper(OPEN_BLOCK);\r\n                    helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n                else {\r\n                    helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n            }\r\n            if (memo) {\r\n                const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [\r\n                    createSimpleExpression(`_cached`)\r\n                ]));\r\n                loop.body = createBlockStatement([\r\n                    createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\r\n                    createCompoundExpression([\r\n                        `if (_cached`,\r\n                        ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n                        ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`\r\n                    ]),\r\n                    createCompoundExpression([`const _item = `, childBlock]),\r\n                    createSimpleExpression(`_item.memo = _memo`),\r\n                    createSimpleExpression(`return _item`)\r\n                ]);\r\n                renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\r\n            }\r\n            else {\r\n                renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(31 /* X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp, context);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: isTemplateNode(node) ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production') && true) {\r\n        validateBrowserExpression(result.source, context);\r\n    }\r\n    let valueContent = LHS.trim().replace(stripParensRE, '').trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n            if ((process.env.NODE_ENV !== 'production') && true) {\r\n                validateBrowserExpression(result.key, context, true);\r\n            }\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n                if ((process.env.NODE_ENV !== 'production') && true) {\r\n                    validateBrowserExpression(result.index, context, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(result.value, context, true);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\r\n    return createParamsList([value, key, index, ...memoArgs]);\r\n}\r\nfunction createParamsList(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i])\r\n            break;\r\n    }\r\n    return args\r\n        .slice(0, i + 1)\r\n        .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\r\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nconst trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 1 /* COMPONENT */ ||\r\n            node.tagType === 3 /* TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            vSlot.exp;\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nconst trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        if (arg && !isStaticExp(arg)) {\r\n            hasDynamicSlots = true;\r\n        }\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(37 /* X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp, context);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        const buildDefaultSlotProperty = (props, children) => {\r\n            const fn = buildSlotFn(props, children, loc);\r\n            if (context.compatConfig) {\r\n                fn.isNonScopedSlot = true;\r\n            }\r\n            return createObjectProperty(`default`, fn);\r\n        };\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length &&\r\n            // #3766\r\n            // with whitespace: 'preserve', whitespaces between slots will end up in\r\n            // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n            implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    const slotFlag = hasDynamicSlots\r\n        ? 2 /* DYNAMIC */\r\n        : hasForwardedSlots(node.children)\r\n            ? 3 /* FORWARDED */\r\n            : 1 /* STABLE */;\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \r\n    // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n    // 1 = compiled and static = can skip normalization AND diff as optimized\r\n    createSimpleExpression(slotFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn) {\r\n    return createObjectExpression([\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ]);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        switch (child.type) {\r\n            case 1 /* ELEMENT */:\r\n                if (child.tagType === 2 /* SLOT */ ||\r\n                    hasForwardedSlots(child.children)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 9 /* IF */:\r\n                if (hasForwardedSlots(child.branches))\r\n                    return true;\r\n                break;\r\n            case 10 /* IF_BRANCH */:\r\n            case 11 /* FOR */:\r\n                if (hasForwardedSlots(child.children))\r\n                    return true;\r\n                break;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction isNonWhitespaceContent(node) {\r\n    if (node.type !== 2 /* TEXT */ && node.type !== 12 /* TEXT_CALL */)\r\n        return true;\r\n    return node.type === 2 /* TEXT */\r\n        ? !!node.content.trim()\r\n        : isNonWhitespaceContent(node.content);\r\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap();\r\n// generate a JavaScript AST for this element's codegen\r\nconst transformElement = (node, context) => {\r\n    // perform the work on exit, after all child expressions have been\r\n    // processed and merged.\r\n    return function postTransformElement() {\r\n        node = context.currentNode;\r\n        if (!(node.type === 1 /* ELEMENT */ &&\r\n            (node.tagType === 0 /* ELEMENT */ ||\r\n                node.tagType === 1 /* COMPONENT */))) {\r\n            return;\r\n        }\r\n        const { tag, props } = node;\r\n        const isComponent = node.tagType === 1 /* COMPONENT */;\r\n        // The goal of the transform is to create a codegenNode implementing the\r\n        // VNodeCall interface.\r\n        let vnodeTag = isComponent\r\n            ? resolveComponentType(node, context)\r\n            : `\"${tag}\"`;\r\n        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n        let vnodeProps;\r\n        let vnodeChildren;\r\n        let vnodePatchFlag;\r\n        let patchFlag = 0;\r\n        let vnodeDynamicProps;\r\n        let dynamicPropNames;\r\n        let vnodeDirectives;\r\n        let shouldUseBlock = \r\n        // dynamic component may resolve to plain elements\r\n        isDynamicComponent ||\r\n            vnodeTag === TELEPORT ||\r\n            vnodeTag === SUSPENSE ||\r\n            (!isComponent &&\r\n                // <svg> and <foreignObject> must be forced into blocks so that block\r\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n                // This is technically web-specific, but splitting the logic out of core\r\n                // leads to too much unnecessary complexity.\r\n                (tag === 'svg' || tag === 'foreignObject'));\r\n        // props\r\n        if (props.length > 0) {\r\n            const propsBuildResult = buildProps(node, context);\r\n            vnodeProps = propsBuildResult.props;\r\n            patchFlag = propsBuildResult.patchFlag;\r\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n            const directives = propsBuildResult.directives;\r\n            vnodeDirectives =\r\n                directives && directives.length\r\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\r\n                    : undefined;\r\n            if (propsBuildResult.shouldUseBlock) {\r\n                shouldUseBlock = true;\r\n            }\r\n        }\r\n        // children\r\n        if (node.children.length > 0) {\r\n            if (vnodeTag === KEEP_ALIVE) {\r\n                // Although a built-in component, we compile KeepAlive with raw children\r\n                // instead of slot functions so that it can be used inside Transition\r\n                // or other Transition-wrapping HOCs.\r\n                // To ensure correct updates with block optimizations, we need to:\r\n                // 1. Force keep-alive into a block. This avoids its children being\r\n                //    collected by a parent block.\r\n                shouldUseBlock = true;\r\n                // 2. Force keep-alive to always be updated, since it uses raw children.\r\n                patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                if ((process.env.NODE_ENV !== 'production') && node.children.length > 1) {\r\n                    context.onError(createCompilerError(45 /* X_KEEP_ALIVE_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            }\r\n            const shouldBuildAsSlots = isComponent &&\r\n                // Teleport is not a real component and has dedicated runtime handling\r\n                vnodeTag !== TELEPORT &&\r\n                // explained above.\r\n                vnodeTag !== KEEP_ALIVE;\r\n            if (shouldBuildAsSlots) {\r\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n                vnodeChildren = slots;\r\n                if (hasDynamicSlots) {\r\n                    patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n                const child = node.children[0];\r\n                const type = child.type;\r\n                // check for dynamic text children\r\n                const hasDynamicTextChild = type === 5 /* INTERPOLATION */ ||\r\n                    type === 8 /* COMPOUND_EXPRESSION */;\r\n                if (hasDynamicTextChild &&\r\n                    getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                    patchFlag |= 1 /* TEXT */;\r\n                }\r\n                // pass directly if the only child is a text node\r\n                // (plain / interpolation / expression)\r\n                if (hasDynamicTextChild || type === 2 /* TEXT */) {\r\n                    vnodeChildren = child;\r\n                }\r\n                else {\r\n                    vnodeChildren = node.children;\r\n                }\r\n            }\r\n            else {\r\n                vnodeChildren = node.children;\r\n            }\r\n        }\r\n        // patchFlag & dynamicPropNames\r\n        if (patchFlag !== 0) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (patchFlag < 0) {\r\n                    // special flags (negative and mutually exclusive)\r\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\r\n                }\r\n                else {\r\n                    // bitwise flags\r\n                    const flagNames = Object.keys(PatchFlagNames)\r\n                        .map(Number)\r\n                        .filter(n => n > 0 && patchFlag & n)\r\n                        .map(n => PatchFlagNames[n])\r\n                        .join(`, `);\r\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\r\n                }\r\n            }\r\n            else {\r\n                vnodePatchFlag = String(patchFlag);\r\n            }\r\n            if (dynamicPropNames && dynamicPropNames.length) {\r\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n            }\r\n        }\r\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, isComponent, node.loc);\r\n    };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n    let { tag } = node;\r\n    // 1. dynamic component\r\n    const isExplicitDynamic = isComponentTag(tag);\r\n    const isProp = findProp(node, 'is');\r\n    if (isProp) {\r\n        if (isExplicitDynamic ||\r\n            (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context))) {\r\n            const exp = isProp.type === 6 /* ATTRIBUTE */\r\n                ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n                : isProp.exp;\r\n            if (exp) {\r\n                return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n                    exp\r\n                ]);\r\n            }\r\n        }\r\n        else if (isProp.type === 6 /* ATTRIBUTE */ &&\r\n            isProp.value.content.startsWith('vue:')) {\r\n            // <button is=\"vue:xxx\">\r\n            // if not <component>, only is value that starts with \"vue:\" will be\r\n            // treated as component by the parse phase and reach here, unless it's\r\n            // compat mode where all is values are considered components\r\n            tag = isProp.value.content.slice(4);\r\n        }\r\n    }\r\n    // 1.5 v-is (TODO: Deprecate)\r\n    const isDir = !isExplicitDynamic && findDir(node, 'is');\r\n    if (isDir && isDir.exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n            isDir.exp\r\n        ]);\r\n    }\r\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n    if (builtIn) {\r\n        // built-ins are simply fallthroughs / have special handling during ssr\r\n        // so we don't need to import their runtime equivalents\r\n        if (!ssr)\r\n            context.helper(builtIn);\r\n        return builtIn;\r\n    }\r\n    // 5. user component (resolve)\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag);\r\n    return toValidAssetId(tag, `component`);\r\n}\r\nfunction buildProps(node, context, props = node.props, ssr = false) {\r\n    const { tag, loc: elementLoc, children } = node;\r\n    const isComponent = node.tagType === 1 /* COMPONENT */;\r\n    let properties = [];\r\n    const mergeArgs = [];\r\n    const runtimeDirectives = [];\r\n    const hasChildren = children.length > 0;\r\n    let shouldUseBlock = false;\r\n    // patchFlag analysis\r\n    let patchFlag = 0;\r\n    let hasRef = false;\r\n    let hasClassBinding = false;\r\n    let hasStyleBinding = false;\r\n    let hasHydrationEventBinding = false;\r\n    let hasDynamicKeys = false;\r\n    let hasVnodeHook = false;\r\n    const dynamicPropNames = [];\r\n    const analyzePatchFlag = ({ key, value }) => {\r\n        if (isStaticExp(key)) {\r\n            const name = key.content;\r\n            const isEventHandler = isOn(name);\r\n            if (!isComponent &&\r\n                isEventHandler &&\r\n                // omit the flag for click handlers because hydration gives click\r\n                // dedicated fast path.\r\n                name.toLowerCase() !== 'onclick' &&\r\n                // omit v-model handlers\r\n                name !== 'onUpdate:modelValue' &&\r\n                // omit onVnodeXXX hooks\r\n                !isReservedProp(name)) {\r\n                hasHydrationEventBinding = true;\r\n            }\r\n            if (isEventHandler && isReservedProp(name)) {\r\n                hasVnodeHook = true;\r\n            }\r\n            if (value.type === 20 /* JS_CACHE_EXPRESSION */ ||\r\n                ((value.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n                    value.type === 8 /* COMPOUND_EXPRESSION */) &&\r\n                    getConstantType(value, context) > 0)) {\r\n                // skip if the prop is a cached handler or has constant value\r\n                return;\r\n            }\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            else if (name === 'class') {\r\n                hasClassBinding = true;\r\n            }\r\n            else if (name === 'style') {\r\n                hasStyleBinding = true;\r\n            }\r\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n            // treat the dynamic class and style binding of the component as dynamic props\r\n            if (isComponent &&\r\n                (name === 'class' || name === 'style') &&\r\n                !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n        }\r\n        else {\r\n            hasDynamicKeys = true;\r\n        }\r\n    };\r\n    for (let i = 0; i < props.length; i++) {\r\n        // static attribute\r\n        const prop = props[i];\r\n        if (prop.type === 6 /* ATTRIBUTE */) {\r\n            const { loc, name, value } = prop;\r\n            let isStatic = true;\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n                if (context.scopes.vFor > 0) {\r\n                    properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n                }\r\n            }\r\n            // skip is on <component>, or is=\"vue:xxx\"\r\n            if (name === 'is' &&\r\n                (isComponentTag(tag) ||\r\n                    (value && value.content.startsWith('vue:')) ||\r\n                    (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context)))) {\r\n                continue;\r\n            }\r\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\r\n        }\r\n        else {\r\n            // directives\r\n            const { name, arg, exp, loc } = prop;\r\n            const isVBind = name === 'bind';\r\n            const isVOn = name === 'on';\r\n            // skip v-slot - it is handled by its dedicated transform.\r\n            if (name === 'slot') {\r\n                if (!isComponent) {\r\n                    context.onError(createCompilerError(40 /* X_V_SLOT_MISPLACED */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            // skip v-once/v-memo - they are handled by dedicated transforms.\r\n            if (name === 'once' || name === 'memo') {\r\n                continue;\r\n            }\r\n            // skip v-is and :is on <component>\r\n            if (name === 'is' ||\r\n                (isVBind &&\r\n                    isStaticArgOf(arg, 'is') &&\r\n                    (isComponentTag(tag) ||\r\n                        (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context))))) {\r\n                continue;\r\n            }\r\n            // skip v-on in SSR compilation\r\n            if (isVOn && ssr) {\r\n                continue;\r\n            }\r\n            if (\r\n            // #938: elements with dynamic keys should be forced into blocks\r\n            (isVBind && isStaticArgOf(arg, 'key')) ||\r\n                // inline before-update hooks need to force block so that it is invoked\r\n                // before children\r\n                (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))) {\r\n                shouldUseBlock = true;\r\n            }\r\n            if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\r\n                properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n            }\r\n            // special case for v-bind and v-on with no argument\r\n            if (!arg && (isVBind || isVOn)) {\r\n                hasDynamicKeys = true;\r\n                if (exp) {\r\n                    if (properties.length) {\r\n                        mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n                        properties = [];\r\n                    }\r\n                    if (isVBind) {\r\n                        {\r\n                            // 2.x v-bind object order compat\r\n                            if ((process.env.NODE_ENV !== 'production')) {\r\n                                const hasOverridableKeys = mergeArgs.some(arg => {\r\n                                    if (arg.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n                                        return arg.properties.some(({ key }) => {\r\n                                            if (key.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n                                                !key.isStatic) {\r\n                                                return true;\r\n                                            }\r\n                                            return (key.content !== 'class' &&\r\n                                                key.content !== 'style' &&\r\n                                                !isOn(key.content));\r\n                                        });\r\n                                    }\r\n                                    else {\r\n                                        // dynamic expression\r\n                                        return true;\r\n                                    }\r\n                                });\r\n                                if (hasOverridableKeys) {\r\n                                    checkCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */, context, loc);\r\n                                }\r\n                            }\r\n                            if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */, context)) {\r\n                                mergeArgs.unshift(exp);\r\n                                continue;\r\n                            }\r\n                        }\r\n                        mergeArgs.push(exp);\r\n                    }\r\n                    else {\r\n                        // v-on=\"obj\" -> toHandlers(obj)\r\n                        mergeArgs.push({\r\n                            type: 14 /* JS_CALL_EXPRESSION */,\r\n                            loc,\r\n                            callee: context.helper(TO_HANDLERS),\r\n                            arguments: [exp]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    context.onError(createCompilerError(isVBind\r\n                        ? 34 /* X_V_BIND_NO_EXPRESSION */\r\n                        : 35 /* X_V_ON_NO_EXPRESSION */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            const directiveTransform = context.directiveTransforms[name];\r\n            if (directiveTransform) {\r\n                // has built-in directive transform.\r\n                const { props, needRuntime } = directiveTransform(prop, node, context);\r\n                !ssr && props.forEach(analyzePatchFlag);\r\n                properties.push(...props);\r\n                if (needRuntime) {\r\n                    runtimeDirectives.push(prop);\r\n                    if (isSymbol(needRuntime)) {\r\n                        directiveImportMap.set(prop, needRuntime);\r\n                    }\r\n                }\r\n            }\r\n            else if (!isBuiltInDirective(name)) {\r\n                // no built-in transform, this is a user custom directive.\r\n                runtimeDirectives.push(prop);\r\n                // custom dirs may use beforeUpdate so they need to force blocks\r\n                // to ensure before-update gets called before children update\r\n                if (hasChildren) {\r\n                    shouldUseBlock = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let propsExpression = undefined;\r\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n    if (mergeArgs.length) {\r\n        if (properties.length) {\r\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n        }\r\n        if (mergeArgs.length > 1) {\r\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\r\n        }\r\n        else {\r\n            // single v-bind with nothing else - no need for a mergeProps call\r\n            propsExpression = mergeArgs[0];\r\n        }\r\n    }\r\n    else if (properties.length) {\r\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\r\n    }\r\n    // patchFlag analysis\r\n    if (hasDynamicKeys) {\r\n        patchFlag |= 16 /* FULL_PROPS */;\r\n    }\r\n    else {\r\n        if (hasClassBinding && !isComponent) {\r\n            patchFlag |= 2 /* CLASS */;\r\n        }\r\n        if (hasStyleBinding && !isComponent) {\r\n            patchFlag |= 4 /* STYLE */;\r\n        }\r\n        if (dynamicPropNames.length) {\r\n            patchFlag |= 8 /* PROPS */;\r\n        }\r\n        if (hasHydrationEventBinding) {\r\n            patchFlag |= 32 /* HYDRATE_EVENTS */;\r\n        }\r\n    }\r\n    if (!shouldUseBlock &&\r\n        (patchFlag === 0 || patchFlag === 32 /* HYDRATE_EVENTS */) &&\r\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\r\n        patchFlag |= 512 /* NEED_PATCH */;\r\n    }\r\n    // pre-normalize props, SSR is skipped for now\r\n    if (!context.inSSR && propsExpression) {\r\n        switch (propsExpression.type) {\r\n            case 15 /* JS_OBJECT_EXPRESSION */:\r\n                // means that there is no v-bind,\r\n                // but still need to deal with dynamic key binding\r\n                let classKeyIndex = -1;\r\n                let styleKeyIndex = -1;\r\n                let hasDynamicKey = false;\r\n                for (let i = 0; i < propsExpression.properties.length; i++) {\r\n                    const key = propsExpression.properties[i].key;\r\n                    if (isStaticExp(key)) {\r\n                        if (key.content === 'class') {\r\n                            classKeyIndex = i;\r\n                        }\r\n                        else if (key.content === 'style') {\r\n                            styleKeyIndex = i;\r\n                        }\r\n                    }\r\n                    else if (!key.isHandlerKey) {\r\n                        hasDynamicKey = true;\r\n                    }\r\n                }\r\n                const classProp = propsExpression.properties[classKeyIndex];\r\n                const styleProp = propsExpression.properties[styleKeyIndex];\r\n                // no dynamic key\r\n                if (!hasDynamicKey) {\r\n                    if (classProp && !isStaticExp(classProp.value)) {\r\n                        classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\r\n                    }\r\n                    if (styleProp &&\r\n                        !isStaticExp(styleProp.value) &&\r\n                        // the static style is compiled into an object,\r\n                        // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n                        (hasStyleBinding ||\r\n                            // v-bind:style and style both exist,\r\n                            // v-bind:style with static literal object\r\n                            styleProp.value.type === 17 /* JS_ARRAY_EXPRESSION */)) {\r\n                        styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\r\n                    }\r\n                }\r\n                else {\r\n                    // dynamic key binding, wrap with `normalizeProps`\r\n                    propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\r\n                }\r\n                break;\r\n            case 14 /* JS_CALL_EXPRESSION */:\r\n                // mergeProps call, do nothing\r\n                break;\r\n            default:\r\n                // single v-bind\r\n                propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [\r\n                    createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n                        propsExpression\r\n                    ])\r\n                ]);\r\n                break;\r\n        }\r\n    }\r\n    return {\r\n        props: propsExpression,\r\n        directives: runtimeDirectives,\r\n        patchFlag,\r\n        dynamicPropNames,\r\n        shouldUseBlock\r\n    };\r\n}\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties) {\r\n    const knownProps = new Map();\r\n    const deduped = [];\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const prop = properties[i];\r\n        // dynamic keys are always allowed\r\n        if (prop.key.type === 8 /* COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\r\n            deduped.push(prop);\r\n            continue;\r\n        }\r\n        const name = prop.key.content;\r\n        const existing = knownProps.get(name);\r\n        if (existing) {\r\n            if (name === 'style' || name === 'class' || isOn(name)) {\r\n                mergeAsArray(existing, prop);\r\n            }\r\n            // unexpected duplicate, should have emitted error during parse\r\n        }\r\n        else {\r\n            knownProps.set(name, prop);\r\n            deduped.push(prop);\r\n        }\r\n    }\r\n    return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n    if (existing.value.type === 17 /* JS_ARRAY_EXPRESSION */) {\r\n        existing.value.elements.push(incoming.value);\r\n    }\r\n    else {\r\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\r\n    }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n    const dirArgs = [];\r\n    const runtime = directiveImportMap.get(dir);\r\n    if (runtime) {\r\n        // built-in directive with runtime\r\n        dirArgs.push(context.helperString(runtime));\r\n    }\r\n    else {\r\n        {\r\n            // inject statement for resolving directive\r\n            context.helper(RESOLVE_DIRECTIVE);\r\n            context.directives.add(dir.name);\r\n            dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n        }\r\n    }\r\n    const { loc } = dir;\r\n    if (dir.exp)\r\n        dirArgs.push(dir.exp);\r\n    if (dir.arg) {\r\n        if (!dir.exp) {\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        dirArgs.push(dir.arg);\r\n    }\r\n    if (Object.keys(dir.modifiers).length) {\r\n        if (!dir.arg) {\r\n            if (!dir.exp) {\r\n                dirArgs.push(`void 0`);\r\n            }\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        const trueExpression = createSimpleExpression(`true`, false, loc);\r\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\r\n    }\r\n    return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n    let propsNamesString = `[`;\r\n    for (let i = 0, l = props.length; i < l; i++) {\r\n        propsNamesString += JSON.stringify(props[i]);\r\n        if (i < l - 1)\r\n            propsNamesString += ', ';\r\n    }\r\n    return propsNamesString + `]`;\r\n}\r\nfunction isComponentTag(tag) {\r\n    return tag === 'component' || tag === 'Component';\r\n}\n\n(process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\n(process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\n\nconst transformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { children, loc } = node;\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const slotArgs = [\r\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n            slotName,\r\n            '{}',\r\n            'undefined',\r\n            'true'\r\n        ];\r\n        let expectedLen = 2;\r\n        if (slotProps) {\r\n            slotArgs[2] = slotProps;\r\n            expectedLen = 3;\r\n        }\r\n        if (children.length) {\r\n            slotArgs[3] = createFunctionExpression([], children, false, false, loc);\r\n            expectedLen = 4;\r\n        }\r\n        if (context.scopeId && !context.slotted) {\r\n            expectedLen = 5;\r\n        }\r\n        slotArgs.splice(expectedLen); // remove unused arguments\r\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\r\n    }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n    let slotName = `\"default\"`;\r\n    let slotProps = undefined;\r\n    const nonNameProps = [];\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (p.value) {\r\n                if (p.name === 'name') {\r\n                    slotName = JSON.stringify(p.value.content);\r\n                }\r\n                else {\r\n                    p.name = camelize(p.name);\r\n                    nonNameProps.push(p);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\r\n                if (p.exp)\r\n                    slotName = p.exp;\r\n            }\r\n            else {\r\n                if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n                    p.arg.content = camelize(p.arg.content);\r\n                }\r\n                nonNameProps.push(p);\r\n            }\r\n        }\r\n    }\r\n    if (nonNameProps.length > 0) {\r\n        const { props, directives } = buildProps(node, context, nonNameProps);\r\n        slotProps = props;\r\n        if (directives.length) {\r\n            context.onError(createCompilerError(36 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\r\n        }\r\n    }\r\n    return {\r\n        slotName,\r\n        slotProps\r\n    };\r\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(35 /* X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            let rawName = arg.content;\r\n            // TODO deprecate @vnodeXXX usage\r\n            if (rawName.startsWith('vue:')) {\r\n                rawName = `vnode-${rawName.slice(4)}`;\r\n            }\r\n            // for all event listeners, auto convert it to camelCase. See issue #2249\r\n            eventName = createSimpleExpression(toHandlerKey(camelize$1(rawName)), true, arg.loc);\r\n        }\r\n        else {\r\n            // #2388\r\n            eventName = createCompoundExpression([\r\n                `${context.helperString(TO_HANDLER_KEY)}(`,\r\n                arg,\r\n                `)`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(exp, context, false, hasMultipleStatements);\r\n        }\r\n        if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `${isInlineStatement\r\n                    ? `$event`\r\n                    : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (shouldCache) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    // mark the key as handler for props normalization check\r\n    ret.props.forEach(p => (p.key.isHandlerKey = true));\r\n    return ret;\r\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nconst transformBind = (dir, _node, context) => {\r\n    const { exp, modifiers, loc } = dir;\r\n    const arg = dir.arg;\r\n    if (arg.type !== 4 /* SIMPLE_EXPRESSION */) {\r\n        arg.children.unshift(`(`);\r\n        arg.children.push(`) || \"\"`);\r\n    }\r\n    else if (!arg.isStatic) {\r\n        arg.content = `${arg.content} || \"\"`;\r\n    }\r\n    // .sync is replaced by v-model:arg\r\n    if (modifiers.includes('camel')) {\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            if (arg.isStatic) {\r\n                arg.content = camelize$1(arg.content);\r\n            }\r\n            else {\r\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n            }\r\n        }\r\n        else {\r\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n            arg.children.push(`)`);\r\n        }\r\n    }\r\n    if (!context.inSSR) {\r\n        if (modifiers.includes('prop')) {\r\n            injectPrefix(arg, '.');\r\n        }\r\n        if (modifiers.includes('attr')) {\r\n            injectPrefix(arg, '^');\r\n        }\r\n    }\r\n    if (!exp ||\r\n        (exp.type === 4 /* SIMPLE_EXPRESSION */ && !exp.content.trim())) {\r\n        context.onError(createCompilerError(34 /* X_V_BIND_NO_EXPRESSION */, loc));\r\n        return {\r\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n        };\r\n    }\r\n    return {\r\n        props: [createObjectProperty(arg, exp)]\r\n    };\r\n};\r\nconst injectPrefix = (arg, prefix) => {\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            arg.content = prefix + arg.content;\r\n        }\r\n        else {\r\n            arg.content = `\\`${prefix}\\${${arg.content}}\\``;\r\n        }\r\n    }\r\n    else {\r\n        arg.children.unshift(`'${prefix}' + (`);\r\n        arg.children.push(`)`);\r\n    }\r\n};\n\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nconst transformText = (node, context) => {\r\n    if (node.type === 0 /* ROOT */ ||\r\n        node.type === 1 /* ELEMENT */ ||\r\n        node.type === 11 /* FOR */ ||\r\n        node.type === 10 /* IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = {\r\n                                    type: 8 /* COMPOUND_EXPRESSION */,\r\n                                    loc: child.loc,\r\n                                    children: [child]\r\n                                };\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* ROOT */ ||\r\n                        (node.type === 1 /* ELEMENT */ &&\r\n                            node.tagType === 0 /* ELEMENT */ &&\r\n                            // #3756\r\n                            // custom directives can potentially add DOM elements arbitrarily,\r\n                            // we need to avoid setting textContent of the element at runtime\r\n                            // to avoid accidentally overwriting the DOM elements added\r\n                            // by the user through custom directives.\r\n                            !node.props.find(p => p.type === 7 /* DIRECTIVE */ &&\r\n                                !context.directiveTransforms[p.name]) &&\r\n                            // in compat mode, <template> tags with no special directives\r\n                            // will be rendered as a fragment so its children must be\r\n                            // converted into vnodes.\r\n                            !(node.tag === 'template'))))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr &&\r\n                        getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                        callArgs.push(1 /* TEXT */ +\r\n                            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[1 /* TEXT */]} */` : ``));\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\n\nconst seen = new WeakSet();\r\nconst transformOnce = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ && findDir(node, 'once', true)) {\r\n        if (seen.has(node) || context.inVOnce) {\r\n            return;\r\n        }\r\n        seen.add(node);\r\n        context.inVOnce = true;\r\n        context.helper(SET_BLOCK_TRACKING);\r\n        return () => {\r\n            context.inVOnce = false;\r\n            const cur = context.currentNode;\r\n            if (cur.codegenNode) {\r\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\r\n            }\r\n        };\r\n    }\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const { exp, arg } = dir;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(41 /* X_V_MODEL_NO_EXPRESSION */, dir.loc));\r\n        return createTransformProps();\r\n    }\r\n    const rawExp = exp.loc.source;\r\n    const expString = exp.type === 4 /* SIMPLE_EXPRESSION */ ? exp.content : rawExp;\r\n    // im SFC <script setup> inline mode, the exp may have been transformed into\r\n    // _unref(exp)\r\n    context.bindingMetadata[rawExp];\r\n    const maybeRef = !true    /* SETUP_CONST */;\r\n    if (!expString.trim() ||\r\n        (!isMemberExpression(expString) && !maybeRef)) {\r\n        context.onError(createCompilerError(42 /* X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\r\n    const eventName = arg\r\n        ? isStaticExp(arg)\r\n            ? `onUpdate:${arg.content}`\r\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n        : `onUpdate:modelValue`;\r\n    let assignmentExp;\r\n    const eventArg = context.isTS ? `($event: any)` : `$event`;\r\n    {\r\n        assignmentExp = createCompoundExpression([\r\n            `${eventArg} => ((`,\r\n            exp,\r\n            `) = $event)`\r\n        ]);\r\n    }\r\n    const props = [\r\n        // modelValue: foo\r\n        createObjectProperty(propName, dir.exp),\r\n        // \"onUpdate:modelValue\": $event => (foo = $event)\r\n        createObjectProperty(eventName, assignmentExp)\r\n    ];\r\n    // modelModifiers: { foo: true, \"bar-baz\": true }\r\n    if (dir.modifiers.length && node.tagType === 1 /* COMPONENT */) {\r\n        const modifiers = dir.modifiers\r\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n            .join(`, `);\r\n        const modifiersKey = arg\r\n            ? isStaticExp(arg)\r\n                ? `${arg.content}Modifiers`\r\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n            : `modelModifiers`;\r\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2 /* CAN_HOIST */)));\r\n    }\r\n    return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n    return { props };\r\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\r\nconst transformFilter = (node, context) => {\r\n    if (!isCompatEnabled(\"COMPILER_FILTER\" /* COMPILER_FILTERS */, context)) {\r\n        return;\r\n    }\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        // filter rewrite is applied before expression transform so only\r\n        // simple expressions are possible at this stage\r\n        rewriteFilter(node.content, context);\r\n    }\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        node.props.forEach((prop) => {\r\n            if (prop.type === 7 /* DIRECTIVE */ &&\r\n                prop.name !== 'for' &&\r\n                prop.exp) {\r\n                rewriteFilter(prop.exp, context);\r\n            }\r\n        });\r\n    }\r\n};\r\nfunction rewriteFilter(node, context) {\r\n    if (node.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        parseFilter(node, context);\r\n    }\r\n    else {\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            const child = node.children[i];\r\n            if (typeof child !== 'object')\r\n                continue;\r\n            if (child.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                parseFilter(child, context);\r\n            }\r\n            else if (child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                rewriteFilter(node, context);\r\n            }\r\n            else if (child.type === 5 /* INTERPOLATION */) {\r\n                rewriteFilter(child.content, context);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseFilter(node, context) {\r\n    const exp = node.content;\r\n    let inSingle = false;\r\n    let inDouble = false;\r\n    let inTemplateString = false;\r\n    let inRegex = false;\r\n    let curly = 0;\r\n    let square = 0;\r\n    let paren = 0;\r\n    let lastFilterIndex = 0;\r\n    let c, prev, i, expression, filters = [];\r\n    for (i = 0; i < exp.length; i++) {\r\n        prev = c;\r\n        c = exp.charCodeAt(i);\r\n        if (inSingle) {\r\n            if (c === 0x27 && prev !== 0x5c)\r\n                inSingle = false;\r\n        }\r\n        else if (inDouble) {\r\n            if (c === 0x22 && prev !== 0x5c)\r\n                inDouble = false;\r\n        }\r\n        else if (inTemplateString) {\r\n            if (c === 0x60 && prev !== 0x5c)\r\n                inTemplateString = false;\r\n        }\r\n        else if (inRegex) {\r\n            if (c === 0x2f && prev !== 0x5c)\r\n                inRegex = false;\r\n        }\r\n        else if (c === 0x7c && // pipe\r\n            exp.charCodeAt(i + 1) !== 0x7c &&\r\n            exp.charCodeAt(i - 1) !== 0x7c &&\r\n            !curly &&\r\n            !square &&\r\n            !paren) {\r\n            if (expression === undefined) {\r\n                // first filter, end of expression\r\n                lastFilterIndex = i + 1;\r\n                expression = exp.slice(0, i).trim();\r\n            }\r\n            else {\r\n                pushFilter();\r\n            }\r\n        }\r\n        else {\r\n            switch (c) {\r\n                case 0x22:\r\n                    inDouble = true;\r\n                    break; // \"\r\n                case 0x27:\r\n                    inSingle = true;\r\n                    break; // '\r\n                case 0x60:\r\n                    inTemplateString = true;\r\n                    break; // `\r\n                case 0x28:\r\n                    paren++;\r\n                    break; // (\r\n                case 0x29:\r\n                    paren--;\r\n                    break; // )\r\n                case 0x5b:\r\n                    square++;\r\n                    break; // [\r\n                case 0x5d:\r\n                    square--;\r\n                    break; // ]\r\n                case 0x7b:\r\n                    curly++;\r\n                    break; // {\r\n                case 0x7d:\r\n                    curly--;\r\n                    break; // }\r\n            }\r\n            if (c === 0x2f) {\r\n                // /\r\n                let j = i - 1;\r\n                let p;\r\n                // find first non-whitespace prev char\r\n                for (; j >= 0; j--) {\r\n                    p = exp.charAt(j);\r\n                    if (p !== ' ')\r\n                        break;\r\n                }\r\n                if (!p || !validDivisionCharRE.test(p)) {\r\n                    inRegex = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (expression === undefined) {\r\n        expression = exp.slice(0, i).trim();\r\n    }\r\n    else if (lastFilterIndex !== 0) {\r\n        pushFilter();\r\n    }\r\n    function pushFilter() {\r\n        filters.push(exp.slice(lastFilterIndex, i).trim());\r\n        lastFilterIndex = i + 1;\r\n    }\r\n    if (filters.length) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warnDeprecation(\"COMPILER_FILTER\" /* COMPILER_FILTERS */, context, node.loc);\r\n        for (i = 0; i < filters.length; i++) {\r\n            expression = wrapFilter(expression, filters[i], context);\r\n        }\r\n        node.content = expression;\r\n    }\r\n}\r\nfunction wrapFilter(exp, filter, context) {\r\n    context.helper(RESOLVE_FILTER);\r\n    const i = filter.indexOf('(');\r\n    if (i < 0) {\r\n        context.filters.add(filter);\r\n        return `${toValidAssetId(filter, 'filter')}(${exp})`;\r\n    }\r\n    else {\r\n        const name = filter.slice(0, i);\r\n        const args = filter.slice(i + 1);\r\n        context.filters.add(name);\r\n        return `${toValidAssetId(name, 'filter')}(${exp}${args !== ')' ? ',' + args : args}`;\r\n    }\r\n}\n\nconst seen$1 = new WeakSet();\r\nconst transformMemo = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        const dir = findDir(node, 'memo');\r\n        if (!dir || seen$1.has(node)) {\r\n            return;\r\n        }\r\n        seen$1.add(node);\r\n        return () => {\r\n            const codegenNode = node.codegenNode ||\r\n                context.currentNode.codegenNode;\r\n            if (codegenNode && codegenNode.type === 13 /* VNODE_CALL */) {\r\n                // non-component sub tree should be turned into a block\r\n                if (node.tagType !== 1 /* COMPONENT */) {\r\n                    makeBlock(codegenNode, context);\r\n                }\r\n                node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n                    dir.exp,\r\n                    createFunctionExpression(undefined, codegenNode),\r\n                    `_cache`,\r\n                    String(context.cached++)\r\n                ]);\r\n            }\r\n        };\r\n    }\r\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n    return [\r\n        [\r\n            transformOnce,\r\n            transformIf,\r\n            transformMemo,\r\n            transformFor,\r\n            ...([transformFilter] ),\r\n            ...((process.env.NODE_ENV !== 'production')\r\n                    ? [transformExpression]\r\n                    : []),\r\n            transformSlotOutlet,\r\n            transformElement,\r\n            trackSlotScopes,\r\n            transformText\r\n        ],\r\n        {\r\n            on: transformOn,\r\n            bind: transformBind,\r\n            model: transformModel\r\n        }\r\n    ];\r\n}\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nfunction baseCompile(template, options = {}) {\r\n    const onError = options.onError || defaultOnError;\r\n    const isModuleMode = options.mode === 'module';\r\n    /* istanbul ignore if */\r\n    {\r\n        if (options.prefixIdentifiers === true) {\r\n            onError(createCompilerError(46 /* X_PREFIX_ID_NOT_SUPPORTED */));\r\n        }\r\n        else if (isModuleMode) {\r\n            onError(createCompilerError(47 /* X_MODULE_MODE_NOT_SUPPORTED */));\r\n        }\r\n    }\r\n    const prefixIdentifiers = !true ;\r\n    if (options.cacheHandlers) {\r\n        onError(createCompilerError(48 /* X_CACHE_HANDLER_NOT_SUPPORTED */));\r\n    }\r\n    if (options.scopeId && !isModuleMode) {\r\n        onError(createCompilerError(49 /* X_SCOPE_ID_NOT_SUPPORTED */));\r\n    }\r\n    const ast = isString(template) ? baseParse(template, options) : template;\r\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\r\n    transform(ast, extend({}, options, {\r\n        prefixIdentifiers,\r\n        nodeTransforms: [\r\n            ...nodeTransforms,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ],\r\n        directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\r\n        )\r\n    }));\r\n    return generate(ast, extend({}, options, {\r\n        prefixIdentifiers\r\n    }));\r\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, GUARD_REACTIVE_PROPS, IS_MEMO_SAME, IS_REF, KEEP_ALIVE, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_PROPS, NORMALIZE_STYLE, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_FILTER, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, UNREF, WITH_CTX, WITH_DIRECTIVES, WITH_MEMO, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildDirectiveArgs, buildProps, buildSlots, checkCompatEnabled, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, extractIdentifiers, findDir, findProp, generate, getBaseTransformPreset, getInnerRange, getMemoedVNodeCall, getVNodeBlockHelper, getVNodeHelper, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBuiltInType, isCoreComponent, isFunctionType, isInDestructureAssignment, isMemberExpression, isMemberExpressionBrowser, isMemberExpressionNode, isReferencedIdentifier, isSimpleIdentifier, isSlotOutlet, isStaticArgOf, isStaticExp, isStaticProperty, isStaticPropertyKey, isTemplateNode, isText, isVSlot, locStub, makeBlock, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode, walkBlockDeclarations, walkFunctionParams, walkIdentifiers, warnDeprecation };\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar compilerCore = require('@vue/compiler-core');\nvar shared = require('@vue/shared');\n\nconst V_MODEL_RADIO = Symbol(`vModelRadio` );\r\nconst V_MODEL_CHECKBOX = Symbol(`vModelCheckbox` );\r\nconst V_MODEL_TEXT = Symbol(`vModelText` );\r\nconst V_MODEL_SELECT = Symbol(`vModelSelect` );\r\nconst V_MODEL_DYNAMIC = Symbol(`vModelDynamic` );\r\nconst V_ON_WITH_MODIFIERS = Symbol(`vOnModifiersGuard` );\r\nconst V_ON_WITH_KEYS = Symbol(`vOnKeysGuard` );\r\nconst V_SHOW = Symbol(`vShow` );\r\nconst TRANSITION = Symbol(`Transition` );\r\nconst TRANSITION_GROUP = Symbol(`TransitionGroup` );\r\ncompilerCore.registerRuntimeHelpers({\r\n    [V_MODEL_RADIO]: `vModelRadio`,\r\n    [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n    [V_MODEL_TEXT]: `vModelText`,\r\n    [V_MODEL_SELECT]: `vModelSelect`,\r\n    [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n    [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n    [V_ON_WITH_KEYS]: `withKeys`,\r\n    [V_SHOW]: `vShow`,\r\n    [TRANSITION]: `Transition`,\r\n    [TRANSITION_GROUP]: `TransitionGroup`\r\n});\n\nvar namedCharacterReferences = {\n\tGT: \">\",\n\tgt: \">\",\n\tLT: \"<\",\n\tlt: \"<\",\n\t\"ac;\": \"∾\",\n\t\"af;\": \"⁡\",\n\tAMP: \"&\",\n\tamp: \"&\",\n\t\"ap;\": \"≈\",\n\t\"DD;\": \"ⅅ\",\n\t\"dd;\": \"ⅆ\",\n\tdeg: \"°\",\n\t\"ee;\": \"ⅇ\",\n\t\"eg;\": \"⪚\",\n\t\"el;\": \"⪙\",\n\tETH: \"Ð\",\n\teth: \"ð\",\n\t\"gE;\": \"≧\",\n\t\"ge;\": \"≥\",\n\t\"Gg;\": \"⋙\",\n\t\"gg;\": \"≫\",\n\t\"gl;\": \"≷\",\n\t\"GT;\": \">\",\n\t\"Gt;\": \"≫\",\n\t\"gt;\": \">\",\n\t\"ic;\": \"⁣\",\n\t\"ii;\": \"ⅈ\",\n\t\"Im;\": \"ℑ\",\n\t\"in;\": \"∈\",\n\t\"it;\": \"⁢\",\n\t\"lE;\": \"≦\",\n\t\"le;\": \"≤\",\n\t\"lg;\": \"≶\",\n\t\"Ll;\": \"⋘\",\n\t\"ll;\": \"≪\",\n\t\"LT;\": \"<\",\n\t\"Lt;\": \"≪\",\n\t\"lt;\": \"<\",\n\t\"mp;\": \"∓\",\n\t\"Mu;\": \"Μ\",\n\t\"mu;\": \"μ\",\n\t\"ne;\": \"≠\",\n\t\"ni;\": \"∋\",\n\tnot: \"¬\",\n\t\"Nu;\": \"Ν\",\n\t\"nu;\": \"ν\",\n\t\"Or;\": \"⩔\",\n\t\"or;\": \"∨\",\n\t\"oS;\": \"Ⓢ\",\n\t\"Pi;\": \"Π\",\n\t\"pi;\": \"π\",\n\t\"pm;\": \"±\",\n\t\"Pr;\": \"⪻\",\n\t\"pr;\": \"≺\",\n\t\"Re;\": \"ℜ\",\n\tREG: \"®\",\n\treg: \"®\",\n\t\"rx;\": \"℞\",\n\t\"Sc;\": \"⪼\",\n\t\"sc;\": \"≻\",\n\tshy: \"­\",\n\tuml: \"¨\",\n\t\"wp;\": \"℘\",\n\t\"wr;\": \"≀\",\n\t\"Xi;\": \"Ξ\",\n\t\"xi;\": \"ξ\",\n\tyen: \"¥\",\n\t\"acd;\": \"∿\",\n\t\"acE;\": \"∾̳\",\n\t\"Acy;\": \"А\",\n\t\"acy;\": \"а\",\n\t\"Afr;\": \"𝔄\",\n\t\"afr;\": \"𝔞\",\n\t\"AMP;\": \"&\",\n\t\"amp;\": \"&\",\n\t\"And;\": \"⩓\",\n\t\"and;\": \"∧\",\n\t\"ang;\": \"∠\",\n\t\"apE;\": \"⩰\",\n\t\"ape;\": \"≊\",\n\t\"ast;\": \"*\",\n\tAuml: \"Ä\",\n\tauml: \"ä\",\n\t\"Bcy;\": \"Б\",\n\t\"bcy;\": \"б\",\n\t\"Bfr;\": \"𝔅\",\n\t\"bfr;\": \"𝔟\",\n\t\"bne;\": \"=⃥\",\n\t\"bot;\": \"⊥\",\n\t\"Cap;\": \"⋒\",\n\t\"cap;\": \"∩\",\n\tcent: \"¢\",\n\t\"Cfr;\": \"ℭ\",\n\t\"cfr;\": \"𝔠\",\n\t\"Chi;\": \"Χ\",\n\t\"chi;\": \"χ\",\n\t\"cir;\": \"○\",\n\tCOPY: \"©\",\n\tcopy: \"©\",\n\t\"Cup;\": \"⋓\",\n\t\"cup;\": \"∪\",\n\t\"Dcy;\": \"Д\",\n\t\"dcy;\": \"д\",\n\t\"deg;\": \"°\",\n\t\"Del;\": \"∇\",\n\t\"Dfr;\": \"𝔇\",\n\t\"dfr;\": \"𝔡\",\n\t\"die;\": \"¨\",\n\t\"div;\": \"÷\",\n\t\"Dot;\": \"¨\",\n\t\"dot;\": \"˙\",\n\t\"Ecy;\": \"Э\",\n\t\"ecy;\": \"э\",\n\t\"Efr;\": \"𝔈\",\n\t\"efr;\": \"𝔢\",\n\t\"egs;\": \"⪖\",\n\t\"ell;\": \"ℓ\",\n\t\"els;\": \"⪕\",\n\t\"ENG;\": \"Ŋ\",\n\t\"eng;\": \"ŋ\",\n\t\"Eta;\": \"Η\",\n\t\"eta;\": \"η\",\n\t\"ETH;\": \"Ð\",\n\t\"eth;\": \"ð\",\n\tEuml: \"Ë\",\n\teuml: \"ë\",\n\t\"Fcy;\": \"Ф\",\n\t\"fcy;\": \"ф\",\n\t\"Ffr;\": \"𝔉\",\n\t\"ffr;\": \"𝔣\",\n\t\"gap;\": \"⪆\",\n\t\"Gcy;\": \"Г\",\n\t\"gcy;\": \"г\",\n\t\"gEl;\": \"⪌\",\n\t\"gel;\": \"⋛\",\n\t\"geq;\": \"≥\",\n\t\"ges;\": \"⩾\",\n\t\"Gfr;\": \"𝔊\",\n\t\"gfr;\": \"𝔤\",\n\t\"ggg;\": \"⋙\",\n\t\"gla;\": \"⪥\",\n\t\"glE;\": \"⪒\",\n\t\"glj;\": \"⪤\",\n\t\"gnE;\": \"≩\",\n\t\"gne;\": \"⪈\",\n\t\"Hat;\": \"^\",\n\t\"Hfr;\": \"ℌ\",\n\t\"hfr;\": \"𝔥\",\n\t\"Icy;\": \"И\",\n\t\"icy;\": \"и\",\n\t\"iff;\": \"⇔\",\n\t\"Ifr;\": \"ℑ\",\n\t\"ifr;\": \"𝔦\",\n\t\"Int;\": \"∬\",\n\t\"int;\": \"∫\",\n\tIuml: \"Ï\",\n\tiuml: \"ï\",\n\t\"Jcy;\": \"Й\",\n\t\"jcy;\": \"й\",\n\t\"Jfr;\": \"𝔍\",\n\t\"jfr;\": \"𝔧\",\n\t\"Kcy;\": \"К\",\n\t\"kcy;\": \"к\",\n\t\"Kfr;\": \"𝔎\",\n\t\"kfr;\": \"𝔨\",\n\t\"lap;\": \"⪅\",\n\t\"lat;\": \"⪫\",\n\t\"Lcy;\": \"Л\",\n\t\"lcy;\": \"л\",\n\t\"lEg;\": \"⪋\",\n\t\"leg;\": \"⋚\",\n\t\"leq;\": \"≤\",\n\t\"les;\": \"⩽\",\n\t\"Lfr;\": \"𝔏\",\n\t\"lfr;\": \"𝔩\",\n\t\"lgE;\": \"⪑\",\n\t\"lnE;\": \"≨\",\n\t\"lne;\": \"⪇\",\n\t\"loz;\": \"◊\",\n\t\"lrm;\": \"‎\",\n\t\"Lsh;\": \"↰\",\n\t\"lsh;\": \"↰\",\n\tmacr: \"¯\",\n\t\"Map;\": \"⤅\",\n\t\"map;\": \"↦\",\n\t\"Mcy;\": \"М\",\n\t\"mcy;\": \"м\",\n\t\"Mfr;\": \"𝔐\",\n\t\"mfr;\": \"𝔪\",\n\t\"mho;\": \"℧\",\n\t\"mid;\": \"∣\",\n\t\"nap;\": \"≉\",\n\tnbsp: \" \",\n\t\"Ncy;\": \"Н\",\n\t\"ncy;\": \"н\",\n\t\"Nfr;\": \"𝔑\",\n\t\"nfr;\": \"𝔫\",\n\t\"ngE;\": \"≧̸\",\n\t\"nge;\": \"≱\",\n\t\"nGg;\": \"⋙̸\",\n\t\"nGt;\": \"≫⃒\",\n\t\"ngt;\": \"≯\",\n\t\"nis;\": \"⋼\",\n\t\"niv;\": \"∋\",\n\t\"nlE;\": \"≦̸\",\n\t\"nle;\": \"≰\",\n\t\"nLl;\": \"⋘̸\",\n\t\"nLt;\": \"≪⃒\",\n\t\"nlt;\": \"≮\",\n\t\"Not;\": \"⫬\",\n\t\"not;\": \"¬\",\n\t\"npr;\": \"⊀\",\n\t\"nsc;\": \"⊁\",\n\t\"num;\": \"#\",\n\t\"Ocy;\": \"О\",\n\t\"ocy;\": \"о\",\n\t\"Ofr;\": \"𝔒\",\n\t\"ofr;\": \"𝔬\",\n\t\"ogt;\": \"⧁\",\n\t\"ohm;\": \"Ω\",\n\t\"olt;\": \"⧀\",\n\t\"ord;\": \"⩝\",\n\tordf: \"ª\",\n\tordm: \"º\",\n\t\"orv;\": \"⩛\",\n\tOuml: \"Ö\",\n\touml: \"ö\",\n\t\"par;\": \"∥\",\n\tpara: \"¶\",\n\t\"Pcy;\": \"П\",\n\t\"pcy;\": \"п\",\n\t\"Pfr;\": \"𝔓\",\n\t\"pfr;\": \"𝔭\",\n\t\"Phi;\": \"Φ\",\n\t\"phi;\": \"φ\",\n\t\"piv;\": \"ϖ\",\n\t\"prE;\": \"⪳\",\n\t\"pre;\": \"⪯\",\n\t\"Psi;\": \"Ψ\",\n\t\"psi;\": \"ψ\",\n\t\"Qfr;\": \"𝔔\",\n\t\"qfr;\": \"𝔮\",\n\tQUOT: \"\\\"\",\n\tquot: \"\\\"\",\n\t\"Rcy;\": \"Р\",\n\t\"rcy;\": \"р\",\n\t\"REG;\": \"®\",\n\t\"reg;\": \"®\",\n\t\"Rfr;\": \"ℜ\",\n\t\"rfr;\": \"𝔯\",\n\t\"Rho;\": \"Ρ\",\n\t\"rho;\": \"ρ\",\n\t\"rlm;\": \"‏\",\n\t\"Rsh;\": \"↱\",\n\t\"rsh;\": \"↱\",\n\t\"scE;\": \"⪴\",\n\t\"sce;\": \"⪰\",\n\t\"Scy;\": \"С\",\n\t\"scy;\": \"с\",\n\tsect: \"§\",\n\t\"Sfr;\": \"𝔖\",\n\t\"sfr;\": \"𝔰\",\n\t\"shy;\": \"­\",\n\t\"sim;\": \"∼\",\n\t\"smt;\": \"⪪\",\n\t\"sol;\": \"/\",\n\t\"squ;\": \"□\",\n\t\"Sub;\": \"⋐\",\n\t\"sub;\": \"⊂\",\n\t\"Sum;\": \"∑\",\n\t\"sum;\": \"∑\",\n\t\"Sup;\": \"⋑\",\n\t\"sup;\": \"⊃\",\n\tsup1: \"¹\",\n\tsup2: \"²\",\n\tsup3: \"³\",\n\t\"Tab;\": \"\\t\",\n\t\"Tau;\": \"Τ\",\n\t\"tau;\": \"τ\",\n\t\"Tcy;\": \"Т\",\n\t\"tcy;\": \"т\",\n\t\"Tfr;\": \"𝔗\",\n\t\"tfr;\": \"𝔱\",\n\t\"top;\": \"⊤\",\n\t\"Ucy;\": \"У\",\n\t\"ucy;\": \"у\",\n\t\"Ufr;\": \"𝔘\",\n\t\"ufr;\": \"𝔲\",\n\t\"uml;\": \"¨\",\n\tUuml: \"Ü\",\n\tuuml: \"ü\",\n\t\"Vcy;\": \"В\",\n\t\"vcy;\": \"в\",\n\t\"Vee;\": \"⋁\",\n\t\"vee;\": \"∨\",\n\t\"Vfr;\": \"𝔙\",\n\t\"vfr;\": \"𝔳\",\n\t\"Wfr;\": \"𝔚\",\n\t\"wfr;\": \"𝔴\",\n\t\"Xfr;\": \"𝔛\",\n\t\"xfr;\": \"𝔵\",\n\t\"Ycy;\": \"Ы\",\n\t\"ycy;\": \"ы\",\n\t\"yen;\": \"¥\",\n\t\"Yfr;\": \"𝔜\",\n\t\"yfr;\": \"𝔶\",\n\tyuml: \"ÿ\",\n\t\"Zcy;\": \"З\",\n\t\"zcy;\": \"з\",\n\t\"Zfr;\": \"ℨ\",\n\t\"zfr;\": \"𝔷\",\n\t\"zwj;\": \"‍\",\n\tAcirc: \"Â\",\n\tacirc: \"â\",\n\tacute: \"´\",\n\tAElig: \"Æ\",\n\taelig: \"æ\",\n\t\"andd;\": \"⩜\",\n\t\"andv;\": \"⩚\",\n\t\"ange;\": \"⦤\",\n\t\"Aopf;\": \"𝔸\",\n\t\"aopf;\": \"𝕒\",\n\t\"apid;\": \"≋\",\n\t\"apos;\": \"'\",\n\tAring: \"Å\",\n\taring: \"å\",\n\t\"Ascr;\": \"𝒜\",\n\t\"ascr;\": \"𝒶\",\n\t\"Auml;\": \"Ä\",\n\t\"auml;\": \"ä\",\n\t\"Barv;\": \"⫧\",\n\t\"bbrk;\": \"⎵\",\n\t\"Beta;\": \"Β\",\n\t\"beta;\": \"β\",\n\t\"beth;\": \"ℶ\",\n\t\"bNot;\": \"⫭\",\n\t\"bnot;\": \"⌐\",\n\t\"Bopf;\": \"𝔹\",\n\t\"bopf;\": \"𝕓\",\n\t\"boxH;\": \"═\",\n\t\"boxh;\": \"─\",\n\t\"boxV;\": \"║\",\n\t\"boxv;\": \"│\",\n\t\"Bscr;\": \"ℬ\",\n\t\"bscr;\": \"𝒷\",\n\t\"bsim;\": \"∽\",\n\t\"bsol;\": \"\\\\\",\n\t\"bull;\": \"•\",\n\t\"bump;\": \"≎\",\n\t\"caps;\": \"∩︀\",\n\t\"Cdot;\": \"Ċ\",\n\t\"cdot;\": \"ċ\",\n\tcedil: \"¸\",\n\t\"cent;\": \"¢\",\n\t\"CHcy;\": \"Ч\",\n\t\"chcy;\": \"ч\",\n\t\"circ;\": \"ˆ\",\n\t\"cirE;\": \"⧃\",\n\t\"cire;\": \"≗\",\n\t\"comp;\": \"∁\",\n\t\"cong;\": \"≅\",\n\t\"Copf;\": \"ℂ\",\n\t\"copf;\": \"𝕔\",\n\t\"COPY;\": \"©\",\n\t\"copy;\": \"©\",\n\t\"Cscr;\": \"𝒞\",\n\t\"cscr;\": \"𝒸\",\n\t\"csub;\": \"⫏\",\n\t\"csup;\": \"⫐\",\n\t\"cups;\": \"∪︀\",\n\t\"Darr;\": \"↡\",\n\t\"dArr;\": \"⇓\",\n\t\"darr;\": \"↓\",\n\t\"dash;\": \"‐\",\n\t\"dHar;\": \"⥥\",\n\t\"diam;\": \"⋄\",\n\t\"DJcy;\": \"Ђ\",\n\t\"djcy;\": \"ђ\",\n\t\"Dopf;\": \"𝔻\",\n\t\"dopf;\": \"𝕕\",\n\t\"Dscr;\": \"𝒟\",\n\t\"dscr;\": \"𝒹\",\n\t\"DScy;\": \"Ѕ\",\n\t\"dscy;\": \"ѕ\",\n\t\"dsol;\": \"⧶\",\n\t\"dtri;\": \"▿\",\n\t\"DZcy;\": \"Џ\",\n\t\"dzcy;\": \"џ\",\n\t\"ecir;\": \"≖\",\n\tEcirc: \"Ê\",\n\tecirc: \"ê\",\n\t\"Edot;\": \"Ė\",\n\t\"eDot;\": \"≑\",\n\t\"edot;\": \"ė\",\n\t\"emsp;\": \" \",\n\t\"ensp;\": \" \",\n\t\"Eopf;\": \"𝔼\",\n\t\"eopf;\": \"𝕖\",\n\t\"epar;\": \"⋕\",\n\t\"epsi;\": \"ε\",\n\t\"Escr;\": \"ℰ\",\n\t\"escr;\": \"ℯ\",\n\t\"Esim;\": \"⩳\",\n\t\"esim;\": \"≂\",\n\t\"Euml;\": \"Ë\",\n\t\"euml;\": \"ë\",\n\t\"euro;\": \"€\",\n\t\"excl;\": \"!\",\n\t\"flat;\": \"♭\",\n\t\"fnof;\": \"ƒ\",\n\t\"Fopf;\": \"𝔽\",\n\t\"fopf;\": \"𝕗\",\n\t\"fork;\": \"⋔\",\n\t\"Fscr;\": \"ℱ\",\n\t\"fscr;\": \"𝒻\",\n\t\"Gdot;\": \"Ġ\",\n\t\"gdot;\": \"ġ\",\n\t\"geqq;\": \"≧\",\n\t\"gesl;\": \"⋛︀\",\n\t\"GJcy;\": \"Ѓ\",\n\t\"gjcy;\": \"ѓ\",\n\t\"gnap;\": \"⪊\",\n\t\"gneq;\": \"⪈\",\n\t\"Gopf;\": \"𝔾\",\n\t\"gopf;\": \"𝕘\",\n\t\"Gscr;\": \"𝒢\",\n\t\"gscr;\": \"ℊ\",\n\t\"gsim;\": \"≳\",\n\t\"gtcc;\": \"⪧\",\n\t\"gvnE;\": \"≩︀\",\n\t\"half;\": \"½\",\n\t\"hArr;\": \"⇔\",\n\t\"harr;\": \"↔\",\n\t\"hbar;\": \"ℏ\",\n\t\"Hopf;\": \"ℍ\",\n\t\"hopf;\": \"𝕙\",\n\t\"Hscr;\": \"ℋ\",\n\t\"hscr;\": \"𝒽\",\n\tIcirc: \"Î\",\n\ticirc: \"î\",\n\t\"Idot;\": \"İ\",\n\t\"IEcy;\": \"Е\",\n\t\"iecy;\": \"е\",\n\tiexcl: \"¡\",\n\t\"imof;\": \"⊷\",\n\t\"IOcy;\": \"Ё\",\n\t\"iocy;\": \"ё\",\n\t\"Iopf;\": \"𝕀\",\n\t\"iopf;\": \"𝕚\",\n\t\"Iota;\": \"Ι\",\n\t\"iota;\": \"ι\",\n\t\"Iscr;\": \"ℐ\",\n\t\"iscr;\": \"𝒾\",\n\t\"isin;\": \"∈\",\n\t\"Iuml;\": \"Ï\",\n\t\"iuml;\": \"ï\",\n\t\"Jopf;\": \"𝕁\",\n\t\"jopf;\": \"𝕛\",\n\t\"Jscr;\": \"𝒥\",\n\t\"jscr;\": \"𝒿\",\n\t\"KHcy;\": \"Х\",\n\t\"khcy;\": \"х\",\n\t\"KJcy;\": \"Ќ\",\n\t\"kjcy;\": \"ќ\",\n\t\"Kopf;\": \"𝕂\",\n\t\"kopf;\": \"𝕜\",\n\t\"Kscr;\": \"𝒦\",\n\t\"kscr;\": \"𝓀\",\n\t\"Lang;\": \"⟪\",\n\t\"lang;\": \"⟨\",\n\tlaquo: \"«\",\n\t\"Larr;\": \"↞\",\n\t\"lArr;\": \"⇐\",\n\t\"larr;\": \"←\",\n\t\"late;\": \"⪭\",\n\t\"lcub;\": \"{\",\n\t\"ldca;\": \"⤶\",\n\t\"ldsh;\": \"↲\",\n\t\"leqq;\": \"≦\",\n\t\"lesg;\": \"⋚︀\",\n\t\"lHar;\": \"⥢\",\n\t\"LJcy;\": \"Љ\",\n\t\"ljcy;\": \"љ\",\n\t\"lnap;\": \"⪉\",\n\t\"lneq;\": \"⪇\",\n\t\"Lopf;\": \"𝕃\",\n\t\"lopf;\": \"𝕝\",\n\t\"lozf;\": \"⧫\",\n\t\"lpar;\": \"(\",\n\t\"Lscr;\": \"ℒ\",\n\t\"lscr;\": \"𝓁\",\n\t\"lsim;\": \"≲\",\n\t\"lsqb;\": \"[\",\n\t\"ltcc;\": \"⪦\",\n\t\"ltri;\": \"◃\",\n\t\"lvnE;\": \"≨︀\",\n\t\"macr;\": \"¯\",\n\t\"male;\": \"♂\",\n\t\"malt;\": \"✠\",\n\tmicro: \"µ\",\n\t\"mlcp;\": \"⫛\",\n\t\"mldr;\": \"…\",\n\t\"Mopf;\": \"𝕄\",\n\t\"mopf;\": \"𝕞\",\n\t\"Mscr;\": \"ℳ\",\n\t\"mscr;\": \"𝓂\",\n\t\"nang;\": \"∠⃒\",\n\t\"napE;\": \"⩰̸\",\n\t\"nbsp;\": \" \",\n\t\"ncap;\": \"⩃\",\n\t\"ncup;\": \"⩂\",\n\t\"ngeq;\": \"≱\",\n\t\"nges;\": \"⩾̸\",\n\t\"ngtr;\": \"≯\",\n\t\"nGtv;\": \"≫̸\",\n\t\"nisd;\": \"⋺\",\n\t\"NJcy;\": \"Њ\",\n\t\"njcy;\": \"њ\",\n\t\"nldr;\": \"‥\",\n\t\"nleq;\": \"≰\",\n\t\"nles;\": \"⩽̸\",\n\t\"nLtv;\": \"≪̸\",\n\t\"nmid;\": \"∤\",\n\t\"Nopf;\": \"ℕ\",\n\t\"nopf;\": \"𝕟\",\n\t\"npar;\": \"∦\",\n\t\"npre;\": \"⪯̸\",\n\t\"nsce;\": \"⪰̸\",\n\t\"Nscr;\": \"𝒩\",\n\t\"nscr;\": \"𝓃\",\n\t\"nsim;\": \"≁\",\n\t\"nsub;\": \"⊄\",\n\t\"nsup;\": \"⊅\",\n\t\"ntgl;\": \"≹\",\n\t\"ntlg;\": \"≸\",\n\t\"nvap;\": \"≍⃒\",\n\t\"nvge;\": \"≥⃒\",\n\t\"nvgt;\": \">⃒\",\n\t\"nvle;\": \"≤⃒\",\n\t\"nvlt;\": \"<⃒\",\n\t\"oast;\": \"⊛\",\n\t\"ocir;\": \"⊚\",\n\tOcirc: \"Ô\",\n\tocirc: \"ô\",\n\t\"odiv;\": \"⨸\",\n\t\"odot;\": \"⊙\",\n\t\"ogon;\": \"˛\",\n\t\"oint;\": \"∮\",\n\t\"omid;\": \"⦶\",\n\t\"Oopf;\": \"𝕆\",\n\t\"oopf;\": \"𝕠\",\n\t\"opar;\": \"⦷\",\n\t\"ordf;\": \"ª\",\n\t\"ordm;\": \"º\",\n\t\"oror;\": \"⩖\",\n\t\"Oscr;\": \"𝒪\",\n\t\"oscr;\": \"ℴ\",\n\t\"osol;\": \"⊘\",\n\t\"Ouml;\": \"Ö\",\n\t\"ouml;\": \"ö\",\n\t\"para;\": \"¶\",\n\t\"part;\": \"∂\",\n\t\"perp;\": \"⊥\",\n\t\"phiv;\": \"ϕ\",\n\t\"plus;\": \"+\",\n\t\"Popf;\": \"ℙ\",\n\t\"popf;\": \"𝕡\",\n\tpound: \"£\",\n\t\"prap;\": \"⪷\",\n\t\"prec;\": \"≺\",\n\t\"prnE;\": \"⪵\",\n\t\"prod;\": \"∏\",\n\t\"prop;\": \"∝\",\n\t\"Pscr;\": \"𝒫\",\n\t\"pscr;\": \"𝓅\",\n\t\"qint;\": \"⨌\",\n\t\"Qopf;\": \"ℚ\",\n\t\"qopf;\": \"𝕢\",\n\t\"Qscr;\": \"𝒬\",\n\t\"qscr;\": \"𝓆\",\n\t\"QUOT;\": \"\\\"\",\n\t\"quot;\": \"\\\"\",\n\t\"race;\": \"∽̱\",\n\t\"Rang;\": \"⟫\",\n\t\"rang;\": \"⟩\",\n\traquo: \"»\",\n\t\"Rarr;\": \"↠\",\n\t\"rArr;\": \"⇒\",\n\t\"rarr;\": \"→\",\n\t\"rcub;\": \"}\",\n\t\"rdca;\": \"⤷\",\n\t\"rdsh;\": \"↳\",\n\t\"real;\": \"ℜ\",\n\t\"rect;\": \"▭\",\n\t\"rHar;\": \"⥤\",\n\t\"rhov;\": \"ϱ\",\n\t\"ring;\": \"˚\",\n\t\"Ropf;\": \"ℝ\",\n\t\"ropf;\": \"𝕣\",\n\t\"rpar;\": \")\",\n\t\"Rscr;\": \"ℛ\",\n\t\"rscr;\": \"𝓇\",\n\t\"rsqb;\": \"]\",\n\t\"rtri;\": \"▹\",\n\t\"scap;\": \"⪸\",\n\t\"scnE;\": \"⪶\",\n\t\"sdot;\": \"⋅\",\n\t\"sect;\": \"§\",\n\t\"semi;\": \";\",\n\t\"sext;\": \"✶\",\n\t\"SHcy;\": \"Ш\",\n\t\"shcy;\": \"ш\",\n\t\"sime;\": \"≃\",\n\t\"simg;\": \"⪞\",\n\t\"siml;\": \"⪝\",\n\t\"smid;\": \"∣\",\n\t\"smte;\": \"⪬\",\n\t\"solb;\": \"⧄\",\n\t\"Sopf;\": \"𝕊\",\n\t\"sopf;\": \"𝕤\",\n\t\"spar;\": \"∥\",\n\t\"Sqrt;\": \"√\",\n\t\"squf;\": \"▪\",\n\t\"Sscr;\": \"𝒮\",\n\t\"sscr;\": \"𝓈\",\n\t\"Star;\": \"⋆\",\n\t\"star;\": \"☆\",\n\t\"subE;\": \"⫅\",\n\t\"sube;\": \"⊆\",\n\t\"succ;\": \"≻\",\n\t\"sung;\": \"♪\",\n\t\"sup1;\": \"¹\",\n\t\"sup2;\": \"²\",\n\t\"sup3;\": \"³\",\n\t\"supE;\": \"⫆\",\n\t\"supe;\": \"⊇\",\n\tszlig: \"ß\",\n\t\"tbrk;\": \"⎴\",\n\t\"tdot;\": \"⃛\",\n\tTHORN: \"Þ\",\n\tthorn: \"þ\",\n\ttimes: \"×\",\n\t\"tint;\": \"∭\",\n\t\"toea;\": \"⤨\",\n\t\"Topf;\": \"𝕋\",\n\t\"topf;\": \"𝕥\",\n\t\"tosa;\": \"⤩\",\n\t\"trie;\": \"≜\",\n\t\"Tscr;\": \"𝒯\",\n\t\"tscr;\": \"𝓉\",\n\t\"TScy;\": \"Ц\",\n\t\"tscy;\": \"ц\",\n\t\"Uarr;\": \"↟\",\n\t\"uArr;\": \"⇑\",\n\t\"uarr;\": \"↑\",\n\tUcirc: \"Û\",\n\tucirc: \"û\",\n\t\"uHar;\": \"⥣\",\n\t\"Uopf;\": \"𝕌\",\n\t\"uopf;\": \"𝕦\",\n\t\"Upsi;\": \"ϒ\",\n\t\"upsi;\": \"υ\",\n\t\"Uscr;\": \"𝒰\",\n\t\"uscr;\": \"𝓊\",\n\t\"utri;\": \"▵\",\n\t\"Uuml;\": \"Ü\",\n\t\"uuml;\": \"ü\",\n\t\"vArr;\": \"⇕\",\n\t\"varr;\": \"↕\",\n\t\"Vbar;\": \"⫫\",\n\t\"vBar;\": \"⫨\",\n\t\"Vert;\": \"‖\",\n\t\"vert;\": \"|\",\n\t\"Vopf;\": \"𝕍\",\n\t\"vopf;\": \"𝕧\",\n\t\"Vscr;\": \"𝒱\",\n\t\"vscr;\": \"𝓋\",\n\t\"Wopf;\": \"𝕎\",\n\t\"wopf;\": \"𝕨\",\n\t\"Wscr;\": \"𝒲\",\n\t\"wscr;\": \"𝓌\",\n\t\"xcap;\": \"⋂\",\n\t\"xcup;\": \"⋃\",\n\t\"xmap;\": \"⟼\",\n\t\"xnis;\": \"⋻\",\n\t\"Xopf;\": \"𝕏\",\n\t\"xopf;\": \"𝕩\",\n\t\"Xscr;\": \"𝒳\",\n\t\"xscr;\": \"𝓍\",\n\t\"xvee;\": \"⋁\",\n\t\"YAcy;\": \"Я\",\n\t\"yacy;\": \"я\",\n\t\"YIcy;\": \"Ї\",\n\t\"yicy;\": \"ї\",\n\t\"Yopf;\": \"𝕐\",\n\t\"yopf;\": \"𝕪\",\n\t\"Yscr;\": \"𝒴\",\n\t\"yscr;\": \"𝓎\",\n\t\"YUcy;\": \"Ю\",\n\t\"yucy;\": \"ю\",\n\t\"Yuml;\": \"Ÿ\",\n\t\"yuml;\": \"ÿ\",\n\t\"Zdot;\": \"Ż\",\n\t\"zdot;\": \"ż\",\n\t\"Zeta;\": \"Ζ\",\n\t\"zeta;\": \"ζ\",\n\t\"ZHcy;\": \"Ж\",\n\t\"zhcy;\": \"ж\",\n\t\"Zopf;\": \"ℤ\",\n\t\"zopf;\": \"𝕫\",\n\t\"Zscr;\": \"𝒵\",\n\t\"zscr;\": \"𝓏\",\n\t\"zwnj;\": \"‌\",\n\tAacute: \"Á\",\n\taacute: \"á\",\n\t\"Acirc;\": \"Â\",\n\t\"acirc;\": \"â\",\n\t\"acute;\": \"´\",\n\t\"AElig;\": \"Æ\",\n\t\"aelig;\": \"æ\",\n\tAgrave: \"À\",\n\tagrave: \"à\",\n\t\"aleph;\": \"ℵ\",\n\t\"Alpha;\": \"Α\",\n\t\"alpha;\": \"α\",\n\t\"Amacr;\": \"Ā\",\n\t\"amacr;\": \"ā\",\n\t\"amalg;\": \"⨿\",\n\t\"angle;\": \"∠\",\n\t\"angrt;\": \"∟\",\n\t\"angst;\": \"Å\",\n\t\"Aogon;\": \"Ą\",\n\t\"aogon;\": \"ą\",\n\t\"Aring;\": \"Å\",\n\t\"aring;\": \"å\",\n\t\"asymp;\": \"≈\",\n\tAtilde: \"Ã\",\n\tatilde: \"ã\",\n\t\"awint;\": \"⨑\",\n\t\"bcong;\": \"≌\",\n\t\"bdquo;\": \"„\",\n\t\"bepsi;\": \"϶\",\n\t\"blank;\": \"␣\",\n\t\"blk12;\": \"▒\",\n\t\"blk14;\": \"░\",\n\t\"blk34;\": \"▓\",\n\t\"block;\": \"█\",\n\t\"boxDL;\": \"╗\",\n\t\"boxDl;\": \"╖\",\n\t\"boxdL;\": \"╕\",\n\t\"boxdl;\": \"┐\",\n\t\"boxDR;\": \"╔\",\n\t\"boxDr;\": \"╓\",\n\t\"boxdR;\": \"╒\",\n\t\"boxdr;\": \"┌\",\n\t\"boxHD;\": \"╦\",\n\t\"boxHd;\": \"╤\",\n\t\"boxhD;\": \"╥\",\n\t\"boxhd;\": \"┬\",\n\t\"boxHU;\": \"╩\",\n\t\"boxHu;\": \"╧\",\n\t\"boxhU;\": \"╨\",\n\t\"boxhu;\": \"┴\",\n\t\"boxUL;\": \"╝\",\n\t\"boxUl;\": \"╜\",\n\t\"boxuL;\": \"╛\",\n\t\"boxul;\": \"┘\",\n\t\"boxUR;\": \"╚\",\n\t\"boxUr;\": \"╙\",\n\t\"boxuR;\": \"╘\",\n\t\"boxur;\": \"└\",\n\t\"boxVH;\": \"╬\",\n\t\"boxVh;\": \"╫\",\n\t\"boxvH;\": \"╪\",\n\t\"boxvh;\": \"┼\",\n\t\"boxVL;\": \"╣\",\n\t\"boxVl;\": \"╢\",\n\t\"boxvL;\": \"╡\",\n\t\"boxvl;\": \"┤\",\n\t\"boxVR;\": \"╠\",\n\t\"boxVr;\": \"╟\",\n\t\"boxvR;\": \"╞\",\n\t\"boxvr;\": \"├\",\n\t\"Breve;\": \"˘\",\n\t\"breve;\": \"˘\",\n\tbrvbar: \"¦\",\n\t\"bsemi;\": \"⁏\",\n\t\"bsime;\": \"⋍\",\n\t\"bsolb;\": \"⧅\",\n\t\"bumpE;\": \"⪮\",\n\t\"bumpe;\": \"≏\",\n\t\"caret;\": \"⁁\",\n\t\"caron;\": \"ˇ\",\n\t\"ccaps;\": \"⩍\",\n\tCcedil: \"Ç\",\n\tccedil: \"ç\",\n\t\"Ccirc;\": \"Ĉ\",\n\t\"ccirc;\": \"ĉ\",\n\t\"ccups;\": \"⩌\",\n\t\"cedil;\": \"¸\",\n\t\"check;\": \"✓\",\n\t\"clubs;\": \"♣\",\n\t\"Colon;\": \"∷\",\n\t\"colon;\": \":\",\n\t\"comma;\": \",\",\n\t\"crarr;\": \"↵\",\n\t\"Cross;\": \"⨯\",\n\t\"cross;\": \"✗\",\n\t\"csube;\": \"⫑\",\n\t\"csupe;\": \"⫒\",\n\t\"ctdot;\": \"⋯\",\n\t\"cuepr;\": \"⋞\",\n\t\"cuesc;\": \"⋟\",\n\t\"cupor;\": \"⩅\",\n\tcurren: \"¤\",\n\t\"cuvee;\": \"⋎\",\n\t\"cuwed;\": \"⋏\",\n\t\"cwint;\": \"∱\",\n\t\"Dashv;\": \"⫤\",\n\t\"dashv;\": \"⊣\",\n\t\"dblac;\": \"˝\",\n\t\"ddarr;\": \"⇊\",\n\t\"Delta;\": \"Δ\",\n\t\"delta;\": \"δ\",\n\t\"dharl;\": \"⇃\",\n\t\"dharr;\": \"⇂\",\n\t\"diams;\": \"♦\",\n\t\"disin;\": \"⋲\",\n\tdivide: \"÷\",\n\t\"doteq;\": \"≐\",\n\t\"dtdot;\": \"⋱\",\n\t\"dtrif;\": \"▾\",\n\t\"duarr;\": \"⇵\",\n\t\"duhar;\": \"⥯\",\n\tEacute: \"É\",\n\teacute: \"é\",\n\t\"Ecirc;\": \"Ê\",\n\t\"ecirc;\": \"ê\",\n\t\"eDDot;\": \"⩷\",\n\t\"efDot;\": \"≒\",\n\tEgrave: \"È\",\n\tegrave: \"è\",\n\t\"Emacr;\": \"Ē\",\n\t\"emacr;\": \"ē\",\n\t\"empty;\": \"∅\",\n\t\"Eogon;\": \"Ę\",\n\t\"eogon;\": \"ę\",\n\t\"eplus;\": \"⩱\",\n\t\"epsiv;\": \"ϵ\",\n\t\"eqsim;\": \"≂\",\n\t\"Equal;\": \"⩵\",\n\t\"equiv;\": \"≡\",\n\t\"erarr;\": \"⥱\",\n\t\"erDot;\": \"≓\",\n\t\"esdot;\": \"≐\",\n\t\"exist;\": \"∃\",\n\t\"fflig;\": \"ﬀ\",\n\t\"filig;\": \"ﬁ\",\n\t\"fjlig;\": \"fj\",\n\t\"fllig;\": \"ﬂ\",\n\t\"fltns;\": \"▱\",\n\t\"forkv;\": \"⫙\",\n\tfrac12: \"½\",\n\tfrac14: \"¼\",\n\tfrac34: \"¾\",\n\t\"frasl;\": \"⁄\",\n\t\"frown;\": \"⌢\",\n\t\"Gamma;\": \"Γ\",\n\t\"gamma;\": \"γ\",\n\t\"Gcirc;\": \"Ĝ\",\n\t\"gcirc;\": \"ĝ\",\n\t\"gescc;\": \"⪩\",\n\t\"gimel;\": \"ℷ\",\n\t\"gneqq;\": \"≩\",\n\t\"gnsim;\": \"⋧\",\n\t\"grave;\": \"`\",\n\t\"gsime;\": \"⪎\",\n\t\"gsiml;\": \"⪐\",\n\t\"gtcir;\": \"⩺\",\n\t\"gtdot;\": \"⋗\",\n\t\"Hacek;\": \"ˇ\",\n\t\"harrw;\": \"↭\",\n\t\"Hcirc;\": \"Ĥ\",\n\t\"hcirc;\": \"ĥ\",\n\t\"hoarr;\": \"⇿\",\n\tIacute: \"Í\",\n\tiacute: \"í\",\n\t\"Icirc;\": \"Î\",\n\t\"icirc;\": \"î\",\n\t\"iexcl;\": \"¡\",\n\tIgrave: \"Ì\",\n\tigrave: \"ì\",\n\t\"iiint;\": \"∭\",\n\t\"iiota;\": \"℩\",\n\t\"IJlig;\": \"Ĳ\",\n\t\"ijlig;\": \"ĳ\",\n\t\"Imacr;\": \"Ī\",\n\t\"imacr;\": \"ī\",\n\t\"image;\": \"ℑ\",\n\t\"imath;\": \"ı\",\n\t\"imped;\": \"Ƶ\",\n\t\"infin;\": \"∞\",\n\t\"Iogon;\": \"Į\",\n\t\"iogon;\": \"į\",\n\t\"iprod;\": \"⨼\",\n\tiquest: \"¿\",\n\t\"isinE;\": \"⋹\",\n\t\"isins;\": \"⋴\",\n\t\"isinv;\": \"∈\",\n\t\"Iukcy;\": \"І\",\n\t\"iukcy;\": \"і\",\n\t\"Jcirc;\": \"Ĵ\",\n\t\"jcirc;\": \"ĵ\",\n\t\"jmath;\": \"ȷ\",\n\t\"Jukcy;\": \"Є\",\n\t\"jukcy;\": \"є\",\n\t\"Kappa;\": \"Κ\",\n\t\"kappa;\": \"κ\",\n\t\"lAarr;\": \"⇚\",\n\t\"langd;\": \"⦑\",\n\t\"laquo;\": \"«\",\n\t\"larrb;\": \"⇤\",\n\t\"lates;\": \"⪭︀\",\n\t\"lBarr;\": \"⤎\",\n\t\"lbarr;\": \"⤌\",\n\t\"lbbrk;\": \"❲\",\n\t\"lbrke;\": \"⦋\",\n\t\"lceil;\": \"⌈\",\n\t\"ldquo;\": \"“\",\n\t\"lescc;\": \"⪨\",\n\t\"lhard;\": \"↽\",\n\t\"lharu;\": \"↼\",\n\t\"lhblk;\": \"▄\",\n\t\"llarr;\": \"⇇\",\n\t\"lltri;\": \"◺\",\n\t\"lneqq;\": \"≨\",\n\t\"lnsim;\": \"⋦\",\n\t\"loang;\": \"⟬\",\n\t\"loarr;\": \"⇽\",\n\t\"lobrk;\": \"⟦\",\n\t\"lopar;\": \"⦅\",\n\t\"lrarr;\": \"⇆\",\n\t\"lrhar;\": \"⇋\",\n\t\"lrtri;\": \"⊿\",\n\t\"lsime;\": \"⪍\",\n\t\"lsimg;\": \"⪏\",\n\t\"lsquo;\": \"‘\",\n\t\"ltcir;\": \"⩹\",\n\t\"ltdot;\": \"⋖\",\n\t\"ltrie;\": \"⊴\",\n\t\"ltrif;\": \"◂\",\n\t\"mdash;\": \"—\",\n\t\"mDDot;\": \"∺\",\n\t\"micro;\": \"µ\",\n\tmiddot: \"·\",\n\t\"minus;\": \"−\",\n\t\"mumap;\": \"⊸\",\n\t\"nabla;\": \"∇\",\n\t\"napid;\": \"≋̸\",\n\t\"napos;\": \"ŉ\",\n\t\"natur;\": \"♮\",\n\t\"nbump;\": \"≎̸\",\n\t\"ncong;\": \"≇\",\n\t\"ndash;\": \"–\",\n\t\"neArr;\": \"⇗\",\n\t\"nearr;\": \"↗\",\n\t\"nedot;\": \"≐̸\",\n\t\"nesim;\": \"≂̸\",\n\t\"ngeqq;\": \"≧̸\",\n\t\"ngsim;\": \"≵\",\n\t\"nhArr;\": \"⇎\",\n\t\"nharr;\": \"↮\",\n\t\"nhpar;\": \"⫲\",\n\t\"nlArr;\": \"⇍\",\n\t\"nlarr;\": \"↚\",\n\t\"nleqq;\": \"≦̸\",\n\t\"nless;\": \"≮\",\n\t\"nlsim;\": \"≴\",\n\t\"nltri;\": \"⋪\",\n\t\"notin;\": \"∉\",\n\t\"notni;\": \"∌\",\n\t\"npart;\": \"∂̸\",\n\t\"nprec;\": \"⊀\",\n\t\"nrArr;\": \"⇏\",\n\t\"nrarr;\": \"↛\",\n\t\"nrtri;\": \"⋫\",\n\t\"nsime;\": \"≄\",\n\t\"nsmid;\": \"∤\",\n\t\"nspar;\": \"∦\",\n\t\"nsubE;\": \"⫅̸\",\n\t\"nsube;\": \"⊈\",\n\t\"nsucc;\": \"⊁\",\n\t\"nsupE;\": \"⫆̸\",\n\t\"nsupe;\": \"⊉\",\n\tNtilde: \"Ñ\",\n\tntilde: \"ñ\",\n\t\"numsp;\": \" \",\n\t\"nvsim;\": \"∼⃒\",\n\t\"nwArr;\": \"⇖\",\n\t\"nwarr;\": \"↖\",\n\tOacute: \"Ó\",\n\toacute: \"ó\",\n\t\"Ocirc;\": \"Ô\",\n\t\"ocirc;\": \"ô\",\n\t\"odash;\": \"⊝\",\n\t\"OElig;\": \"Œ\",\n\t\"oelig;\": \"œ\",\n\t\"ofcir;\": \"⦿\",\n\tOgrave: \"Ò\",\n\tograve: \"ò\",\n\t\"ohbar;\": \"⦵\",\n\t\"olarr;\": \"↺\",\n\t\"olcir;\": \"⦾\",\n\t\"oline;\": \"‾\",\n\t\"Omacr;\": \"Ō\",\n\t\"omacr;\": \"ō\",\n\t\"Omega;\": \"Ω\",\n\t\"omega;\": \"ω\",\n\t\"operp;\": \"⦹\",\n\t\"oplus;\": \"⊕\",\n\t\"orarr;\": \"↻\",\n\t\"order;\": \"ℴ\",\n\tOslash: \"Ø\",\n\toslash: \"ø\",\n\tOtilde: \"Õ\",\n\totilde: \"õ\",\n\t\"ovbar;\": \"⌽\",\n\t\"parsl;\": \"⫽\",\n\t\"phone;\": \"☎\",\n\t\"plusb;\": \"⊞\",\n\t\"pluse;\": \"⩲\",\n\tplusmn: \"±\",\n\t\"pound;\": \"£\",\n\t\"prcue;\": \"≼\",\n\t\"Prime;\": \"″\",\n\t\"prime;\": \"′\",\n\t\"prnap;\": \"⪹\",\n\t\"prsim;\": \"≾\",\n\t\"quest;\": \"?\",\n\t\"rAarr;\": \"⇛\",\n\t\"radic;\": \"√\",\n\t\"rangd;\": \"⦒\",\n\t\"range;\": \"⦥\",\n\t\"raquo;\": \"»\",\n\t\"rarrb;\": \"⇥\",\n\t\"rarrc;\": \"⤳\",\n\t\"rarrw;\": \"↝\",\n\t\"ratio;\": \"∶\",\n\t\"RBarr;\": \"⤐\",\n\t\"rBarr;\": \"⤏\",\n\t\"rbarr;\": \"⤍\",\n\t\"rbbrk;\": \"❳\",\n\t\"rbrke;\": \"⦌\",\n\t\"rceil;\": \"⌉\",\n\t\"rdquo;\": \"”\",\n\t\"reals;\": \"ℝ\",\n\t\"rhard;\": \"⇁\",\n\t\"rharu;\": \"⇀\",\n\t\"rlarr;\": \"⇄\",\n\t\"rlhar;\": \"⇌\",\n\t\"rnmid;\": \"⫮\",\n\t\"roang;\": \"⟭\",\n\t\"roarr;\": \"⇾\",\n\t\"robrk;\": \"⟧\",\n\t\"ropar;\": \"⦆\",\n\t\"rrarr;\": \"⇉\",\n\t\"rsquo;\": \"’\",\n\t\"rtrie;\": \"⊵\",\n\t\"rtrif;\": \"▸\",\n\t\"sbquo;\": \"‚\",\n\t\"sccue;\": \"≽\",\n\t\"Scirc;\": \"Ŝ\",\n\t\"scirc;\": \"ŝ\",\n\t\"scnap;\": \"⪺\",\n\t\"scsim;\": \"≿\",\n\t\"sdotb;\": \"⊡\",\n\t\"sdote;\": \"⩦\",\n\t\"seArr;\": \"⇘\",\n\t\"searr;\": \"↘\",\n\t\"setmn;\": \"∖\",\n\t\"sharp;\": \"♯\",\n\t\"Sigma;\": \"Σ\",\n\t\"sigma;\": \"σ\",\n\t\"simeq;\": \"≃\",\n\t\"simgE;\": \"⪠\",\n\t\"simlE;\": \"⪟\",\n\t\"simne;\": \"≆\",\n\t\"slarr;\": \"←\",\n\t\"smile;\": \"⌣\",\n\t\"smtes;\": \"⪬︀\",\n\t\"sqcap;\": \"⊓\",\n\t\"sqcup;\": \"⊔\",\n\t\"sqsub;\": \"⊏\",\n\t\"sqsup;\": \"⊐\",\n\t\"srarr;\": \"→\",\n\t\"starf;\": \"★\",\n\t\"strns;\": \"¯\",\n\t\"subnE;\": \"⫋\",\n\t\"subne;\": \"⊊\",\n\t\"supnE;\": \"⫌\",\n\t\"supne;\": \"⊋\",\n\t\"swArr;\": \"⇙\",\n\t\"swarr;\": \"↙\",\n\t\"szlig;\": \"ß\",\n\t\"Theta;\": \"Θ\",\n\t\"theta;\": \"θ\",\n\t\"thkap;\": \"≈\",\n\t\"THORN;\": \"Þ\",\n\t\"thorn;\": \"þ\",\n\t\"Tilde;\": \"∼\",\n\t\"tilde;\": \"˜\",\n\t\"times;\": \"×\",\n\t\"TRADE;\": \"™\",\n\t\"trade;\": \"™\",\n\t\"trisb;\": \"⧍\",\n\t\"TSHcy;\": \"Ћ\",\n\t\"tshcy;\": \"ћ\",\n\t\"twixt;\": \"≬\",\n\tUacute: \"Ú\",\n\tuacute: \"ú\",\n\t\"Ubrcy;\": \"Ў\",\n\t\"ubrcy;\": \"ў\",\n\t\"Ucirc;\": \"Û\",\n\t\"ucirc;\": \"û\",\n\t\"udarr;\": \"⇅\",\n\t\"udhar;\": \"⥮\",\n\tUgrave: \"Ù\",\n\tugrave: \"ù\",\n\t\"uharl;\": \"↿\",\n\t\"uharr;\": \"↾\",\n\t\"uhblk;\": \"▀\",\n\t\"ultri;\": \"◸\",\n\t\"Umacr;\": \"Ū\",\n\t\"umacr;\": \"ū\",\n\t\"Union;\": \"⋃\",\n\t\"Uogon;\": \"Ų\",\n\t\"uogon;\": \"ų\",\n\t\"uplus;\": \"⊎\",\n\t\"upsih;\": \"ϒ\",\n\t\"UpTee;\": \"⊥\",\n\t\"Uring;\": \"Ů\",\n\t\"uring;\": \"ů\",\n\t\"urtri;\": \"◹\",\n\t\"utdot;\": \"⋰\",\n\t\"utrif;\": \"▴\",\n\t\"uuarr;\": \"⇈\",\n\t\"varpi;\": \"ϖ\",\n\t\"vBarv;\": \"⫩\",\n\t\"VDash;\": \"⊫\",\n\t\"Vdash;\": \"⊩\",\n\t\"vDash;\": \"⊨\",\n\t\"vdash;\": \"⊢\",\n\t\"veeeq;\": \"≚\",\n\t\"vltri;\": \"⊲\",\n\t\"vnsub;\": \"⊂⃒\",\n\t\"vnsup;\": \"⊃⃒\",\n\t\"vprop;\": \"∝\",\n\t\"vrtri;\": \"⊳\",\n\t\"Wcirc;\": \"Ŵ\",\n\t\"wcirc;\": \"ŵ\",\n\t\"Wedge;\": \"⋀\",\n\t\"wedge;\": \"∧\",\n\t\"xcirc;\": \"◯\",\n\t\"xdtri;\": \"▽\",\n\t\"xhArr;\": \"⟺\",\n\t\"xharr;\": \"⟷\",\n\t\"xlArr;\": \"⟸\",\n\t\"xlarr;\": \"⟵\",\n\t\"xodot;\": \"⨀\",\n\t\"xrArr;\": \"⟹\",\n\t\"xrarr;\": \"⟶\",\n\t\"xutri;\": \"△\",\n\tYacute: \"Ý\",\n\tyacute: \"ý\",\n\t\"Ycirc;\": \"Ŷ\",\n\t\"ycirc;\": \"ŷ\",\n\t\"Aacute;\": \"Á\",\n\t\"aacute;\": \"á\",\n\t\"Abreve;\": \"Ă\",\n\t\"abreve;\": \"ă\",\n\t\"Agrave;\": \"À\",\n\t\"agrave;\": \"à\",\n\t\"andand;\": \"⩕\",\n\t\"angmsd;\": \"∡\",\n\t\"angsph;\": \"∢\",\n\t\"apacir;\": \"⩯\",\n\t\"approx;\": \"≈\",\n\t\"Assign;\": \"≔\",\n\t\"Atilde;\": \"Ã\",\n\t\"atilde;\": \"ã\",\n\t\"barvee;\": \"⊽\",\n\t\"Barwed;\": \"⌆\",\n\t\"barwed;\": \"⌅\",\n\t\"becaus;\": \"∵\",\n\t\"bernou;\": \"ℬ\",\n\t\"bigcap;\": \"⋂\",\n\t\"bigcup;\": \"⋃\",\n\t\"bigvee;\": \"⋁\",\n\t\"bkarow;\": \"⤍\",\n\t\"bottom;\": \"⊥\",\n\t\"bowtie;\": \"⋈\",\n\t\"boxbox;\": \"⧉\",\n\t\"bprime;\": \"‵\",\n\t\"brvbar;\": \"¦\",\n\t\"bullet;\": \"•\",\n\t\"Bumpeq;\": \"≎\",\n\t\"bumpeq;\": \"≏\",\n\t\"Cacute;\": \"Ć\",\n\t\"cacute;\": \"ć\",\n\t\"capand;\": \"⩄\",\n\t\"capcap;\": \"⩋\",\n\t\"capcup;\": \"⩇\",\n\t\"capdot;\": \"⩀\",\n\t\"Ccaron;\": \"Č\",\n\t\"ccaron;\": \"č\",\n\t\"Ccedil;\": \"Ç\",\n\t\"ccedil;\": \"ç\",\n\t\"circeq;\": \"≗\",\n\t\"cirmid;\": \"⫯\",\n\t\"Colone;\": \"⩴\",\n\t\"colone;\": \"≔\",\n\t\"commat;\": \"@\",\n\t\"compfn;\": \"∘\",\n\t\"Conint;\": \"∯\",\n\t\"conint;\": \"∮\",\n\t\"coprod;\": \"∐\",\n\t\"copysr;\": \"℗\",\n\t\"cularr;\": \"↶\",\n\t\"CupCap;\": \"≍\",\n\t\"cupcap;\": \"⩆\",\n\t\"cupcup;\": \"⩊\",\n\t\"cupdot;\": \"⊍\",\n\t\"curarr;\": \"↷\",\n\t\"curren;\": \"¤\",\n\t\"cylcty;\": \"⌭\",\n\t\"Dagger;\": \"‡\",\n\t\"dagger;\": \"†\",\n\t\"daleth;\": \"ℸ\",\n\t\"Dcaron;\": \"Ď\",\n\t\"dcaron;\": \"ď\",\n\t\"dfisht;\": \"⥿\",\n\t\"divide;\": \"÷\",\n\t\"divonx;\": \"⋇\",\n\t\"dlcorn;\": \"⌞\",\n\t\"dlcrop;\": \"⌍\",\n\t\"dollar;\": \"$\",\n\t\"DotDot;\": \"⃜\",\n\t\"drcorn;\": \"⌟\",\n\t\"drcrop;\": \"⌌\",\n\t\"Dstrok;\": \"Đ\",\n\t\"dstrok;\": \"đ\",\n\t\"Eacute;\": \"É\",\n\t\"eacute;\": \"é\",\n\t\"easter;\": \"⩮\",\n\t\"Ecaron;\": \"Ě\",\n\t\"ecaron;\": \"ě\",\n\t\"ecolon;\": \"≕\",\n\t\"Egrave;\": \"È\",\n\t\"egrave;\": \"è\",\n\t\"egsdot;\": \"⪘\",\n\t\"elsdot;\": \"⪗\",\n\t\"emptyv;\": \"∅\",\n\t\"emsp13;\": \" \",\n\t\"emsp14;\": \" \",\n\t\"eparsl;\": \"⧣\",\n\t\"eqcirc;\": \"≖\",\n\t\"equals;\": \"=\",\n\t\"equest;\": \"≟\",\n\t\"Exists;\": \"∃\",\n\t\"female;\": \"♀\",\n\t\"ffilig;\": \"ﬃ\",\n\t\"ffllig;\": \"ﬄ\",\n\t\"ForAll;\": \"∀\",\n\t\"forall;\": \"∀\",\n\t\"frac12;\": \"½\",\n\t\"frac13;\": \"⅓\",\n\t\"frac14;\": \"¼\",\n\t\"frac15;\": \"⅕\",\n\t\"frac16;\": \"⅙\",\n\t\"frac18;\": \"⅛\",\n\t\"frac23;\": \"⅔\",\n\t\"frac25;\": \"⅖\",\n\t\"frac34;\": \"¾\",\n\t\"frac35;\": \"⅗\",\n\t\"frac38;\": \"⅜\",\n\t\"frac45;\": \"⅘\",\n\t\"frac56;\": \"⅚\",\n\t\"frac58;\": \"⅝\",\n\t\"frac78;\": \"⅞\",\n\t\"gacute;\": \"ǵ\",\n\t\"Gammad;\": \"Ϝ\",\n\t\"gammad;\": \"ϝ\",\n\t\"Gbreve;\": \"Ğ\",\n\t\"gbreve;\": \"ğ\",\n\t\"Gcedil;\": \"Ģ\",\n\t\"gesdot;\": \"⪀\",\n\t\"gesles;\": \"⪔\",\n\t\"gtlPar;\": \"⦕\",\n\t\"gtrarr;\": \"⥸\",\n\t\"gtrdot;\": \"⋗\",\n\t\"gtrsim;\": \"≳\",\n\t\"hairsp;\": \" \",\n\t\"hamilt;\": \"ℋ\",\n\t\"HARDcy;\": \"Ъ\",\n\t\"hardcy;\": \"ъ\",\n\t\"hearts;\": \"♥\",\n\t\"hellip;\": \"…\",\n\t\"hercon;\": \"⊹\",\n\t\"homtht;\": \"∻\",\n\t\"horbar;\": \"―\",\n\t\"hslash;\": \"ℏ\",\n\t\"Hstrok;\": \"Ħ\",\n\t\"hstrok;\": \"ħ\",\n\t\"hybull;\": \"⁃\",\n\t\"hyphen;\": \"‐\",\n\t\"Iacute;\": \"Í\",\n\t\"iacute;\": \"í\",\n\t\"Igrave;\": \"Ì\",\n\t\"igrave;\": \"ì\",\n\t\"iiiint;\": \"⨌\",\n\t\"iinfin;\": \"⧜\",\n\t\"incare;\": \"℅\",\n\t\"inodot;\": \"ı\",\n\t\"intcal;\": \"⊺\",\n\t\"iquest;\": \"¿\",\n\t\"isinsv;\": \"⋳\",\n\t\"Itilde;\": \"Ĩ\",\n\t\"itilde;\": \"ĩ\",\n\t\"Jsercy;\": \"Ј\",\n\t\"jsercy;\": \"ј\",\n\t\"kappav;\": \"ϰ\",\n\t\"Kcedil;\": \"Ķ\",\n\t\"kcedil;\": \"ķ\",\n\t\"kgreen;\": \"ĸ\",\n\t\"Lacute;\": \"Ĺ\",\n\t\"lacute;\": \"ĺ\",\n\t\"lagran;\": \"ℒ\",\n\t\"Lambda;\": \"Λ\",\n\t\"lambda;\": \"λ\",\n\t\"langle;\": \"⟨\",\n\t\"larrfs;\": \"⤝\",\n\t\"larrhk;\": \"↩\",\n\t\"larrlp;\": \"↫\",\n\t\"larrpl;\": \"⤹\",\n\t\"larrtl;\": \"↢\",\n\t\"lAtail;\": \"⤛\",\n\t\"latail;\": \"⤙\",\n\t\"lbrace;\": \"{\",\n\t\"lbrack;\": \"[\",\n\t\"Lcaron;\": \"Ľ\",\n\t\"lcaron;\": \"ľ\",\n\t\"Lcedil;\": \"Ļ\",\n\t\"lcedil;\": \"ļ\",\n\t\"ldquor;\": \"„\",\n\t\"lesdot;\": \"⩿\",\n\t\"lesges;\": \"⪓\",\n\t\"lfisht;\": \"⥼\",\n\t\"lfloor;\": \"⌊\",\n\t\"lharul;\": \"⥪\",\n\t\"llhard;\": \"⥫\",\n\t\"Lmidot;\": \"Ŀ\",\n\t\"lmidot;\": \"ŀ\",\n\t\"lmoust;\": \"⎰\",\n\t\"loplus;\": \"⨭\",\n\t\"lowast;\": \"∗\",\n\t\"lowbar;\": \"_\",\n\t\"lparlt;\": \"⦓\",\n\t\"lrhard;\": \"⥭\",\n\t\"lsaquo;\": \"‹\",\n\t\"lsquor;\": \"‚\",\n\t\"Lstrok;\": \"Ł\",\n\t\"lstrok;\": \"ł\",\n\t\"lthree;\": \"⋋\",\n\t\"ltimes;\": \"⋉\",\n\t\"ltlarr;\": \"⥶\",\n\t\"ltrPar;\": \"⦖\",\n\t\"mapsto;\": \"↦\",\n\t\"marker;\": \"▮\",\n\t\"mcomma;\": \"⨩\",\n\t\"midast;\": \"*\",\n\t\"midcir;\": \"⫰\",\n\t\"middot;\": \"·\",\n\t\"minusb;\": \"⊟\",\n\t\"minusd;\": \"∸\",\n\t\"mnplus;\": \"∓\",\n\t\"models;\": \"⊧\",\n\t\"mstpos;\": \"∾\",\n\t\"Nacute;\": \"Ń\",\n\t\"nacute;\": \"ń\",\n\t\"nbumpe;\": \"≏̸\",\n\t\"Ncaron;\": \"Ň\",\n\t\"ncaron;\": \"ň\",\n\t\"Ncedil;\": \"Ņ\",\n\t\"ncedil;\": \"ņ\",\n\t\"nearhk;\": \"⤤\",\n\t\"nequiv;\": \"≢\",\n\t\"nesear;\": \"⤨\",\n\t\"nexist;\": \"∄\",\n\t\"nltrie;\": \"⋬\",\n\t\"notinE;\": \"⋹̸\",\n\t\"nparsl;\": \"⫽⃥\",\n\t\"nprcue;\": \"⋠\",\n\t\"nrarrc;\": \"⤳̸\",\n\t\"nrarrw;\": \"↝̸\",\n\t\"nrtrie;\": \"⋭\",\n\t\"nsccue;\": \"⋡\",\n\t\"nsimeq;\": \"≄\",\n\t\"Ntilde;\": \"Ñ\",\n\t\"ntilde;\": \"ñ\",\n\t\"numero;\": \"№\",\n\t\"nVDash;\": \"⊯\",\n\t\"nVdash;\": \"⊮\",\n\t\"nvDash;\": \"⊭\",\n\t\"nvdash;\": \"⊬\",\n\t\"nvHarr;\": \"⤄\",\n\t\"nvlArr;\": \"⤂\",\n\t\"nvrArr;\": \"⤃\",\n\t\"nwarhk;\": \"⤣\",\n\t\"nwnear;\": \"⤧\",\n\t\"Oacute;\": \"Ó\",\n\t\"oacute;\": \"ó\",\n\t\"Odblac;\": \"Ő\",\n\t\"odblac;\": \"ő\",\n\t\"odsold;\": \"⦼\",\n\t\"Ograve;\": \"Ò\",\n\t\"ograve;\": \"ò\",\n\t\"ominus;\": \"⊖\",\n\t\"origof;\": \"⊶\",\n\t\"Oslash;\": \"Ø\",\n\t\"oslash;\": \"ø\",\n\t\"Otilde;\": \"Õ\",\n\t\"otilde;\": \"õ\",\n\t\"Otimes;\": \"⨷\",\n\t\"otimes;\": \"⊗\",\n\t\"parsim;\": \"⫳\",\n\t\"percnt;\": \"%\",\n\t\"period;\": \".\",\n\t\"permil;\": \"‰\",\n\t\"phmmat;\": \"ℳ\",\n\t\"planck;\": \"ℏ\",\n\t\"plankv;\": \"ℏ\",\n\t\"plusdo;\": \"∔\",\n\t\"plusdu;\": \"⨥\",\n\t\"plusmn;\": \"±\",\n\t\"preceq;\": \"⪯\",\n\t\"primes;\": \"ℙ\",\n\t\"prnsim;\": \"⋨\",\n\t\"propto;\": \"∝\",\n\t\"prurel;\": \"⊰\",\n\t\"puncsp;\": \" \",\n\t\"qprime;\": \"⁗\",\n\t\"Racute;\": \"Ŕ\",\n\t\"racute;\": \"ŕ\",\n\t\"rangle;\": \"⟩\",\n\t\"rarrap;\": \"⥵\",\n\t\"rarrfs;\": \"⤞\",\n\t\"rarrhk;\": \"↪\",\n\t\"rarrlp;\": \"↬\",\n\t\"rarrpl;\": \"⥅\",\n\t\"Rarrtl;\": \"⤖\",\n\t\"rarrtl;\": \"↣\",\n\t\"rAtail;\": \"⤜\",\n\t\"ratail;\": \"⤚\",\n\t\"rbrace;\": \"}\",\n\t\"rbrack;\": \"]\",\n\t\"Rcaron;\": \"Ř\",\n\t\"rcaron;\": \"ř\",\n\t\"Rcedil;\": \"Ŗ\",\n\t\"rcedil;\": \"ŗ\",\n\t\"rdquor;\": \"”\",\n\t\"rfisht;\": \"⥽\",\n\t\"rfloor;\": \"⌋\",\n\t\"rharul;\": \"⥬\",\n\t\"rmoust;\": \"⎱\",\n\t\"roplus;\": \"⨮\",\n\t\"rpargt;\": \"⦔\",\n\t\"rsaquo;\": \"›\",\n\t\"rsquor;\": \"’\",\n\t\"rthree;\": \"⋌\",\n\t\"rtimes;\": \"⋊\",\n\t\"Sacute;\": \"Ś\",\n\t\"sacute;\": \"ś\",\n\t\"Scaron;\": \"Š\",\n\t\"scaron;\": \"š\",\n\t\"Scedil;\": \"Ş\",\n\t\"scedil;\": \"ş\",\n\t\"scnsim;\": \"⋩\",\n\t\"searhk;\": \"⤥\",\n\t\"seswar;\": \"⤩\",\n\t\"sfrown;\": \"⌢\",\n\t\"SHCHcy;\": \"Щ\",\n\t\"shchcy;\": \"щ\",\n\t\"sigmaf;\": \"ς\",\n\t\"sigmav;\": \"ς\",\n\t\"simdot;\": \"⩪\",\n\t\"smashp;\": \"⨳\",\n\t\"SOFTcy;\": \"Ь\",\n\t\"softcy;\": \"ь\",\n\t\"solbar;\": \"⌿\",\n\t\"spades;\": \"♠\",\n\t\"sqcaps;\": \"⊓︀\",\n\t\"sqcups;\": \"⊔︀\",\n\t\"sqsube;\": \"⊑\",\n\t\"sqsupe;\": \"⊒\",\n\t\"Square;\": \"□\",\n\t\"square;\": \"□\",\n\t\"squarf;\": \"▪\",\n\t\"ssetmn;\": \"∖\",\n\t\"ssmile;\": \"⌣\",\n\t\"sstarf;\": \"⋆\",\n\t\"subdot;\": \"⪽\",\n\t\"Subset;\": \"⋐\",\n\t\"subset;\": \"⊂\",\n\t\"subsim;\": \"⫇\",\n\t\"subsub;\": \"⫕\",\n\t\"subsup;\": \"⫓\",\n\t\"succeq;\": \"⪰\",\n\t\"supdot;\": \"⪾\",\n\t\"Supset;\": \"⋑\",\n\t\"supset;\": \"⊃\",\n\t\"supsim;\": \"⫈\",\n\t\"supsub;\": \"⫔\",\n\t\"supsup;\": \"⫖\",\n\t\"swarhk;\": \"⤦\",\n\t\"swnwar;\": \"⤪\",\n\t\"target;\": \"⌖\",\n\t\"Tcaron;\": \"Ť\",\n\t\"tcaron;\": \"ť\",\n\t\"Tcedil;\": \"Ţ\",\n\t\"tcedil;\": \"ţ\",\n\t\"telrec;\": \"⌕\",\n\t\"there4;\": \"∴\",\n\t\"thetav;\": \"ϑ\",\n\t\"thinsp;\": \" \",\n\t\"thksim;\": \"∼\",\n\t\"timesb;\": \"⊠\",\n\t\"timesd;\": \"⨰\",\n\t\"topbot;\": \"⌶\",\n\t\"topcir;\": \"⫱\",\n\t\"tprime;\": \"‴\",\n\t\"tridot;\": \"◬\",\n\t\"Tstrok;\": \"Ŧ\",\n\t\"tstrok;\": \"ŧ\",\n\t\"Uacute;\": \"Ú\",\n\t\"uacute;\": \"ú\",\n\t\"Ubreve;\": \"Ŭ\",\n\t\"ubreve;\": \"ŭ\",\n\t\"Udblac;\": \"Ű\",\n\t\"udblac;\": \"ű\",\n\t\"ufisht;\": \"⥾\",\n\t\"Ugrave;\": \"Ù\",\n\t\"ugrave;\": \"ù\",\n\t\"ulcorn;\": \"⌜\",\n\t\"ulcrop;\": \"⌏\",\n\t\"urcorn;\": \"⌝\",\n\t\"urcrop;\": \"⌎\",\n\t\"Utilde;\": \"Ũ\",\n\t\"utilde;\": \"ũ\",\n\t\"vangrt;\": \"⦜\",\n\t\"varphi;\": \"ϕ\",\n\t\"varrho;\": \"ϱ\",\n\t\"Vdashl;\": \"⫦\",\n\t\"veebar;\": \"⊻\",\n\t\"vellip;\": \"⋮\",\n\t\"Verbar;\": \"‖\",\n\t\"verbar;\": \"|\",\n\t\"vsubnE;\": \"⫋︀\",\n\t\"vsubne;\": \"⊊︀\",\n\t\"vsupnE;\": \"⫌︀\",\n\t\"vsupne;\": \"⊋︀\",\n\t\"Vvdash;\": \"⊪\",\n\t\"wedbar;\": \"⩟\",\n\t\"wedgeq;\": \"≙\",\n\t\"weierp;\": \"℘\",\n\t\"wreath;\": \"≀\",\n\t\"xoplus;\": \"⨁\",\n\t\"xotime;\": \"⨂\",\n\t\"xsqcup;\": \"⨆\",\n\t\"xuplus;\": \"⨄\",\n\t\"xwedge;\": \"⋀\",\n\t\"Yacute;\": \"Ý\",\n\t\"yacute;\": \"ý\",\n\t\"Zacute;\": \"Ź\",\n\t\"zacute;\": \"ź\",\n\t\"Zcaron;\": \"Ž\",\n\t\"zcaron;\": \"ž\",\n\t\"zeetrf;\": \"ℨ\",\n\t\"alefsym;\": \"ℵ\",\n\t\"angrtvb;\": \"⊾\",\n\t\"angzarr;\": \"⍼\",\n\t\"asympeq;\": \"≍\",\n\t\"backsim;\": \"∽\",\n\t\"Because;\": \"∵\",\n\t\"because;\": \"∵\",\n\t\"bemptyv;\": \"⦰\",\n\t\"between;\": \"≬\",\n\t\"bigcirc;\": \"◯\",\n\t\"bigodot;\": \"⨀\",\n\t\"bigstar;\": \"★\",\n\t\"bnequiv;\": \"≡⃥\",\n\t\"boxplus;\": \"⊞\",\n\t\"Cayleys;\": \"ℭ\",\n\t\"Cconint;\": \"∰\",\n\t\"ccupssm;\": \"⩐\",\n\t\"Cedilla;\": \"¸\",\n\t\"cemptyv;\": \"⦲\",\n\t\"cirscir;\": \"⧂\",\n\t\"coloneq;\": \"≔\",\n\t\"congdot;\": \"⩭\",\n\t\"cudarrl;\": \"⤸\",\n\t\"cudarrr;\": \"⤵\",\n\t\"cularrp;\": \"⤽\",\n\t\"curarrm;\": \"⤼\",\n\t\"dbkarow;\": \"⤏\",\n\t\"ddagger;\": \"‡\",\n\t\"ddotseq;\": \"⩷\",\n\t\"demptyv;\": \"⦱\",\n\t\"Diamond;\": \"⋄\",\n\t\"diamond;\": \"⋄\",\n\t\"digamma;\": \"ϝ\",\n\t\"dotplus;\": \"∔\",\n\t\"DownTee;\": \"⊤\",\n\t\"dwangle;\": \"⦦\",\n\t\"Element;\": \"∈\",\n\t\"Epsilon;\": \"Ε\",\n\t\"epsilon;\": \"ε\",\n\t\"eqcolon;\": \"≕\",\n\t\"equivDD;\": \"⩸\",\n\t\"gesdoto;\": \"⪂\",\n\t\"gtquest;\": \"⩼\",\n\t\"gtrless;\": \"≷\",\n\t\"harrcir;\": \"⥈\",\n\t\"Implies;\": \"⇒\",\n\t\"intprod;\": \"⨼\",\n\t\"isindot;\": \"⋵\",\n\t\"larrbfs;\": \"⤟\",\n\t\"larrsim;\": \"⥳\",\n\t\"lbrksld;\": \"⦏\",\n\t\"lbrkslu;\": \"⦍\",\n\t\"ldrdhar;\": \"⥧\",\n\t\"LeftTee;\": \"⊣\",\n\t\"lesdoto;\": \"⪁\",\n\t\"lessdot;\": \"⋖\",\n\t\"lessgtr;\": \"≶\",\n\t\"lesssim;\": \"≲\",\n\t\"lotimes;\": \"⨴\",\n\t\"lozenge;\": \"◊\",\n\t\"ltquest;\": \"⩻\",\n\t\"luruhar;\": \"⥦\",\n\t\"maltese;\": \"✠\",\n\t\"minusdu;\": \"⨪\",\n\t\"napprox;\": \"≉\",\n\t\"natural;\": \"♮\",\n\t\"nearrow;\": \"↗\",\n\t\"NewLine;\": \"\\n\",\n\t\"nexists;\": \"∄\",\n\t\"NoBreak;\": \"⁠\",\n\t\"notinva;\": \"∉\",\n\t\"notinvb;\": \"⋷\",\n\t\"notinvc;\": \"⋶\",\n\t\"NotLess;\": \"≮\",\n\t\"notniva;\": \"∌\",\n\t\"notnivb;\": \"⋾\",\n\t\"notnivc;\": \"⋽\",\n\t\"npolint;\": \"⨔\",\n\t\"npreceq;\": \"⪯̸\",\n\t\"nsqsube;\": \"⋢\",\n\t\"nsqsupe;\": \"⋣\",\n\t\"nsubset;\": \"⊂⃒\",\n\t\"nsucceq;\": \"⪰̸\",\n\t\"nsupset;\": \"⊃⃒\",\n\t\"nvinfin;\": \"⧞\",\n\t\"nvltrie;\": \"⊴⃒\",\n\t\"nvrtrie;\": \"⊵⃒\",\n\t\"nwarrow;\": \"↖\",\n\t\"olcross;\": \"⦻\",\n\t\"Omicron;\": \"Ο\",\n\t\"omicron;\": \"ο\",\n\t\"orderof;\": \"ℴ\",\n\t\"orslope;\": \"⩗\",\n\t\"OverBar;\": \"‾\",\n\t\"pertenk;\": \"‱\",\n\t\"planckh;\": \"ℎ\",\n\t\"pluscir;\": \"⨢\",\n\t\"plussim;\": \"⨦\",\n\t\"plustwo;\": \"⨧\",\n\t\"precsim;\": \"≾\",\n\t\"Product;\": \"∏\",\n\t\"quatint;\": \"⨖\",\n\t\"questeq;\": \"≟\",\n\t\"rarrbfs;\": \"⤠\",\n\t\"rarrsim;\": \"⥴\",\n\t\"rbrksld;\": \"⦎\",\n\t\"rbrkslu;\": \"⦐\",\n\t\"rdldhar;\": \"⥩\",\n\t\"realine;\": \"ℛ\",\n\t\"rotimes;\": \"⨵\",\n\t\"ruluhar;\": \"⥨\",\n\t\"searrow;\": \"↘\",\n\t\"simplus;\": \"⨤\",\n\t\"simrarr;\": \"⥲\",\n\t\"subedot;\": \"⫃\",\n\t\"submult;\": \"⫁\",\n\t\"subplus;\": \"⪿\",\n\t\"subrarr;\": \"⥹\",\n\t\"succsim;\": \"≿\",\n\t\"supdsub;\": \"⫘\",\n\t\"supedot;\": \"⫄\",\n\t\"suphsol;\": \"⟉\",\n\t\"suphsub;\": \"⫗\",\n\t\"suplarr;\": \"⥻\",\n\t\"supmult;\": \"⫂\",\n\t\"supplus;\": \"⫀\",\n\t\"swarrow;\": \"↙\",\n\t\"topfork;\": \"⫚\",\n\t\"triplus;\": \"⨹\",\n\t\"tritime;\": \"⨻\",\n\t\"UpArrow;\": \"↑\",\n\t\"Uparrow;\": \"⇑\",\n\t\"uparrow;\": \"↑\",\n\t\"Upsilon;\": \"Υ\",\n\t\"upsilon;\": \"υ\",\n\t\"uwangle;\": \"⦧\",\n\t\"vzigzag;\": \"⦚\",\n\t\"zigrarr;\": \"⇝\",\n\t\"andslope;\": \"⩘\",\n\t\"angmsdaa;\": \"⦨\",\n\t\"angmsdab;\": \"⦩\",\n\t\"angmsdac;\": \"⦪\",\n\t\"angmsdad;\": \"⦫\",\n\t\"angmsdae;\": \"⦬\",\n\t\"angmsdaf;\": \"⦭\",\n\t\"angmsdag;\": \"⦮\",\n\t\"angmsdah;\": \"⦯\",\n\t\"angrtvbd;\": \"⦝\",\n\t\"approxeq;\": \"≊\",\n\t\"awconint;\": \"∳\",\n\t\"backcong;\": \"≌\",\n\t\"barwedge;\": \"⌅\",\n\t\"bbrktbrk;\": \"⎶\",\n\t\"bigoplus;\": \"⨁\",\n\t\"bigsqcup;\": \"⨆\",\n\t\"biguplus;\": \"⨄\",\n\t\"bigwedge;\": \"⋀\",\n\t\"boxminus;\": \"⊟\",\n\t\"boxtimes;\": \"⊠\",\n\t\"bsolhsub;\": \"⟈\",\n\t\"capbrcup;\": \"⩉\",\n\t\"circledR;\": \"®\",\n\t\"circledS;\": \"Ⓢ\",\n\t\"cirfnint;\": \"⨐\",\n\t\"clubsuit;\": \"♣\",\n\t\"cupbrcap;\": \"⩈\",\n\t\"curlyvee;\": \"⋎\",\n\t\"cwconint;\": \"∲\",\n\t\"DDotrahd;\": \"⤑\",\n\t\"doteqdot;\": \"≑\",\n\t\"DotEqual;\": \"≐\",\n\t\"dotminus;\": \"∸\",\n\t\"drbkarow;\": \"⤐\",\n\t\"dzigrarr;\": \"⟿\",\n\t\"elinters;\": \"⏧\",\n\t\"emptyset;\": \"∅\",\n\t\"eqvparsl;\": \"⧥\",\n\t\"fpartint;\": \"⨍\",\n\t\"geqslant;\": \"⩾\",\n\t\"gesdotol;\": \"⪄\",\n\t\"gnapprox;\": \"⪊\",\n\t\"hksearow;\": \"⤥\",\n\t\"hkswarow;\": \"⤦\",\n\t\"imagline;\": \"ℐ\",\n\t\"imagpart;\": \"ℑ\",\n\t\"infintie;\": \"⧝\",\n\t\"integers;\": \"ℤ\",\n\t\"Integral;\": \"∫\",\n\t\"intercal;\": \"⊺\",\n\t\"intlarhk;\": \"⨗\",\n\t\"laemptyv;\": \"⦴\",\n\t\"ldrushar;\": \"⥋\",\n\t\"leqslant;\": \"⩽\",\n\t\"lesdotor;\": \"⪃\",\n\t\"LessLess;\": \"⪡\",\n\t\"llcorner;\": \"⌞\",\n\t\"lnapprox;\": \"⪉\",\n\t\"lrcorner;\": \"⌟\",\n\t\"lurdshar;\": \"⥊\",\n\t\"mapstoup;\": \"↥\",\n\t\"multimap;\": \"⊸\",\n\t\"naturals;\": \"ℕ\",\n\t\"ncongdot;\": \"⩭̸\",\n\t\"NotEqual;\": \"≠\",\n\t\"notindot;\": \"⋵̸\",\n\t\"NotTilde;\": \"≁\",\n\t\"otimesas;\": \"⨶\",\n\t\"parallel;\": \"∥\",\n\t\"PartialD;\": \"∂\",\n\t\"plusacir;\": \"⨣\",\n\t\"pointint;\": \"⨕\",\n\t\"Precedes;\": \"≺\",\n\t\"precneqq;\": \"⪵\",\n\t\"precnsim;\": \"⋨\",\n\t\"profalar;\": \"⌮\",\n\t\"profline;\": \"⌒\",\n\t\"profsurf;\": \"⌓\",\n\t\"raemptyv;\": \"⦳\",\n\t\"realpart;\": \"ℜ\",\n\t\"RightTee;\": \"⊢\",\n\t\"rppolint;\": \"⨒\",\n\t\"rtriltri;\": \"⧎\",\n\t\"scpolint;\": \"⨓\",\n\t\"setminus;\": \"∖\",\n\t\"shortmid;\": \"∣\",\n\t\"smeparsl;\": \"⧤\",\n\t\"sqsubset;\": \"⊏\",\n\t\"sqsupset;\": \"⊐\",\n\t\"subseteq;\": \"⊆\",\n\t\"Succeeds;\": \"≻\",\n\t\"succneqq;\": \"⪶\",\n\t\"succnsim;\": \"⋩\",\n\t\"SuchThat;\": \"∋\",\n\t\"Superset;\": \"⊃\",\n\t\"supseteq;\": \"⊇\",\n\t\"thetasym;\": \"ϑ\",\n\t\"thicksim;\": \"∼\",\n\t\"timesbar;\": \"⨱\",\n\t\"triangle;\": \"▵\",\n\t\"triminus;\": \"⨺\",\n\t\"trpezium;\": \"⏢\",\n\t\"Uarrocir;\": \"⥉\",\n\t\"ulcorner;\": \"⌜\",\n\t\"UnderBar;\": \"_\",\n\t\"urcorner;\": \"⌝\",\n\t\"varkappa;\": \"ϰ\",\n\t\"varsigma;\": \"ς\",\n\t\"vartheta;\": \"ϑ\",\n\t\"backprime;\": \"‵\",\n\t\"backsimeq;\": \"⋍\",\n\t\"Backslash;\": \"∖\",\n\t\"bigotimes;\": \"⨂\",\n\t\"CenterDot;\": \"·\",\n\t\"centerdot;\": \"·\",\n\t\"checkmark;\": \"✓\",\n\t\"CircleDot;\": \"⊙\",\n\t\"complexes;\": \"ℂ\",\n\t\"Congruent;\": \"≡\",\n\t\"Coproduct;\": \"∐\",\n\t\"dotsquare;\": \"⊡\",\n\t\"DoubleDot;\": \"¨\",\n\t\"DownArrow;\": \"↓\",\n\t\"Downarrow;\": \"⇓\",\n\t\"downarrow;\": \"↓\",\n\t\"DownBreve;\": \"̑\",\n\t\"gtrapprox;\": \"⪆\",\n\t\"gtreqless;\": \"⋛\",\n\t\"gvertneqq;\": \"≩︀\",\n\t\"heartsuit;\": \"♥\",\n\t\"HumpEqual;\": \"≏\",\n\t\"LeftArrow;\": \"←\",\n\t\"Leftarrow;\": \"⇐\",\n\t\"leftarrow;\": \"←\",\n\t\"LeftFloor;\": \"⌊\",\n\t\"lesseqgtr;\": \"⋚\",\n\t\"LessTilde;\": \"≲\",\n\t\"lvertneqq;\": \"≨︀\",\n\t\"Mellintrf;\": \"ℳ\",\n\t\"MinusPlus;\": \"∓\",\n\t\"ngeqslant;\": \"⩾̸\",\n\t\"nleqslant;\": \"⩽̸\",\n\t\"NotCupCap;\": \"≭\",\n\t\"NotExists;\": \"∄\",\n\t\"NotSubset;\": \"⊂⃒\",\n\t\"nparallel;\": \"∦\",\n\t\"nshortmid;\": \"∤\",\n\t\"nsubseteq;\": \"⊈\",\n\t\"nsupseteq;\": \"⊉\",\n\t\"OverBrace;\": \"⏞\",\n\t\"pitchfork;\": \"⋔\",\n\t\"PlusMinus;\": \"±\",\n\t\"rationals;\": \"ℚ\",\n\t\"spadesuit;\": \"♠\",\n\t\"subseteqq;\": \"⫅\",\n\t\"subsetneq;\": \"⊊\",\n\t\"supseteqq;\": \"⫆\",\n\t\"supsetneq;\": \"⊋\",\n\t\"Therefore;\": \"∴\",\n\t\"therefore;\": \"∴\",\n\t\"ThinSpace;\": \" \",\n\t\"triangleq;\": \"≜\",\n\t\"TripleDot;\": \"⃛\",\n\t\"UnionPlus;\": \"⊎\",\n\t\"varpropto;\": \"∝\",\n\t\"Bernoullis;\": \"ℬ\",\n\t\"circledast;\": \"⊛\",\n\t\"CirclePlus;\": \"⊕\",\n\t\"complement;\": \"∁\",\n\t\"curlywedge;\": \"⋏\",\n\t\"eqslantgtr;\": \"⪖\",\n\t\"EqualTilde;\": \"≂\",\n\t\"Fouriertrf;\": \"ℱ\",\n\t\"gtreqqless;\": \"⪌\",\n\t\"ImaginaryI;\": \"ⅈ\",\n\t\"Laplacetrf;\": \"ℒ\",\n\t\"LeftVector;\": \"↼\",\n\t\"lessapprox;\": \"⪅\",\n\t\"lesseqqgtr;\": \"⪋\",\n\t\"Lleftarrow;\": \"⇚\",\n\t\"lmoustache;\": \"⎰\",\n\t\"longmapsto;\": \"⟼\",\n\t\"mapstodown;\": \"↧\",\n\t\"mapstoleft;\": \"↤\",\n\t\"nLeftarrow;\": \"⇍\",\n\t\"nleftarrow;\": \"↚\",\n\t\"NotElement;\": \"∉\",\n\t\"NotGreater;\": \"≯\",\n\t\"nsubseteqq;\": \"⫅̸\",\n\t\"nsupseteqq;\": \"⫆̸\",\n\t\"precapprox;\": \"⪷\",\n\t\"Proportion;\": \"∷\",\n\t\"RightArrow;\": \"→\",\n\t\"Rightarrow;\": \"⇒\",\n\t\"rightarrow;\": \"→\",\n\t\"RightFloor;\": \"⌋\",\n\t\"rmoustache;\": \"⎱\",\n\t\"sqsubseteq;\": \"⊑\",\n\t\"sqsupseteq;\": \"⊒\",\n\t\"subsetneqq;\": \"⫋\",\n\t\"succapprox;\": \"⪸\",\n\t\"supsetneqq;\": \"⫌\",\n\t\"ThickSpace;\": \"  \",\n\t\"TildeEqual;\": \"≃\",\n\t\"TildeTilde;\": \"≈\",\n\t\"UnderBrace;\": \"⏟\",\n\t\"UpArrowBar;\": \"⤒\",\n\t\"UpTeeArrow;\": \"↥\",\n\t\"upuparrows;\": \"⇈\",\n\t\"varepsilon;\": \"ϵ\",\n\t\"varnothing;\": \"∅\",\n\t\"backepsilon;\": \"϶\",\n\t\"blacksquare;\": \"▪\",\n\t\"circledcirc;\": \"⊚\",\n\t\"circleddash;\": \"⊝\",\n\t\"CircleMinus;\": \"⊖\",\n\t\"CircleTimes;\": \"⊗\",\n\t\"curlyeqprec;\": \"⋞\",\n\t\"curlyeqsucc;\": \"⋟\",\n\t\"diamondsuit;\": \"♦\",\n\t\"eqslantless;\": \"⪕\",\n\t\"Equilibrium;\": \"⇌\",\n\t\"expectation;\": \"ℰ\",\n\t\"GreaterLess;\": \"≷\",\n\t\"LeftCeiling;\": \"⌈\",\n\t\"LessGreater;\": \"≶\",\n\t\"MediumSpace;\": \" \",\n\t\"NotLessLess;\": \"≪̸\",\n\t\"NotPrecedes;\": \"⊀\",\n\t\"NotSucceeds;\": \"⊁\",\n\t\"NotSuperset;\": \"⊃⃒\",\n\t\"nRightarrow;\": \"⇏\",\n\t\"nrightarrow;\": \"↛\",\n\t\"OverBracket;\": \"⎴\",\n\t\"preccurlyeq;\": \"≼\",\n\t\"precnapprox;\": \"⪹\",\n\t\"quaternions;\": \"ℍ\",\n\t\"RightVector;\": \"⇀\",\n\t\"Rrightarrow;\": \"⇛\",\n\t\"RuleDelayed;\": \"⧴\",\n\t\"SmallCircle;\": \"∘\",\n\t\"SquareUnion;\": \"⊔\",\n\t\"straightphi;\": \"ϕ\",\n\t\"SubsetEqual;\": \"⊆\",\n\t\"succcurlyeq;\": \"≽\",\n\t\"succnapprox;\": \"⪺\",\n\t\"thickapprox;\": \"≈\",\n\t\"UpDownArrow;\": \"↕\",\n\t\"Updownarrow;\": \"⇕\",\n\t\"updownarrow;\": \"↕\",\n\t\"VerticalBar;\": \"∣\",\n\t\"blacklozenge;\": \"⧫\",\n\t\"DownArrowBar;\": \"⤓\",\n\t\"DownTeeArrow;\": \"↧\",\n\t\"ExponentialE;\": \"ⅇ\",\n\t\"exponentiale;\": \"ⅇ\",\n\t\"GreaterEqual;\": \"≥\",\n\t\"GreaterTilde;\": \"≳\",\n\t\"HilbertSpace;\": \"ℋ\",\n\t\"HumpDownHump;\": \"≎\",\n\t\"Intersection;\": \"⋂\",\n\t\"LeftArrowBar;\": \"⇤\",\n\t\"LeftTeeArrow;\": \"↤\",\n\t\"LeftTriangle;\": \"⊲\",\n\t\"LeftUpVector;\": \"↿\",\n\t\"NotCongruent;\": \"≢\",\n\t\"NotHumpEqual;\": \"≏̸\",\n\t\"NotLessEqual;\": \"≰\",\n\t\"NotLessTilde;\": \"≴\",\n\t\"Proportional;\": \"∝\",\n\t\"RightCeiling;\": \"⌉\",\n\t\"risingdotseq;\": \"≓\",\n\t\"RoundImplies;\": \"⥰\",\n\t\"ShortUpArrow;\": \"↑\",\n\t\"SquareSubset;\": \"⊏\",\n\t\"triangledown;\": \"▿\",\n\t\"triangleleft;\": \"◃\",\n\t\"UnderBracket;\": \"⎵\",\n\t\"varsubsetneq;\": \"⊊︀\",\n\t\"varsupsetneq;\": \"⊋︀\",\n\t\"VerticalLine;\": \"|\",\n\t\"ApplyFunction;\": \"⁡\",\n\t\"bigtriangleup;\": \"△\",\n\t\"blacktriangle;\": \"▴\",\n\t\"DifferentialD;\": \"ⅆ\",\n\t\"divideontimes;\": \"⋇\",\n\t\"DoubleLeftTee;\": \"⫤\",\n\t\"DoubleUpArrow;\": \"⇑\",\n\t\"fallingdotseq;\": \"≒\",\n\t\"hookleftarrow;\": \"↩\",\n\t\"leftarrowtail;\": \"↢\",\n\t\"leftharpoonup;\": \"↼\",\n\t\"LeftTeeVector;\": \"⥚\",\n\t\"LeftVectorBar;\": \"⥒\",\n\t\"LessFullEqual;\": \"≦\",\n\t\"LongLeftArrow;\": \"⟵\",\n\t\"Longleftarrow;\": \"⟸\",\n\t\"longleftarrow;\": \"⟵\",\n\t\"looparrowleft;\": \"↫\",\n\t\"measuredangle;\": \"∡\",\n\t\"NotEqualTilde;\": \"≂̸\",\n\t\"NotTildeEqual;\": \"≄\",\n\t\"NotTildeTilde;\": \"≉\",\n\t\"ntriangleleft;\": \"⋪\",\n\t\"Poincareplane;\": \"ℌ\",\n\t\"PrecedesEqual;\": \"⪯\",\n\t\"PrecedesTilde;\": \"≾\",\n\t\"RightArrowBar;\": \"⇥\",\n\t\"RightTeeArrow;\": \"↦\",\n\t\"RightTriangle;\": \"⊳\",\n\t\"RightUpVector;\": \"↾\",\n\t\"shortparallel;\": \"∥\",\n\t\"smallsetminus;\": \"∖\",\n\t\"SucceedsEqual;\": \"⪰\",\n\t\"SucceedsTilde;\": \"≿\",\n\t\"SupersetEqual;\": \"⊇\",\n\t\"triangleright;\": \"▹\",\n\t\"UpEquilibrium;\": \"⥮\",\n\t\"upharpoonleft;\": \"↿\",\n\t\"varsubsetneqq;\": \"⫋︀\",\n\t\"varsupsetneqq;\": \"⫌︀\",\n\t\"VerticalTilde;\": \"≀\",\n\t\"VeryThinSpace;\": \" \",\n\t\"curvearrowleft;\": \"↶\",\n\t\"DiacriticalDot;\": \"˙\",\n\t\"doublebarwedge;\": \"⌆\",\n\t\"DoubleRightTee;\": \"⊨\",\n\t\"downdownarrows;\": \"⇊\",\n\t\"DownLeftVector;\": \"↽\",\n\t\"GreaterGreater;\": \"⪢\",\n\t\"hookrightarrow;\": \"↪\",\n\t\"HorizontalLine;\": \"─\",\n\t\"InvisibleComma;\": \"⁣\",\n\t\"InvisibleTimes;\": \"⁢\",\n\t\"LeftDownVector;\": \"⇃\",\n\t\"leftleftarrows;\": \"⇇\",\n\t\"LeftRightArrow;\": \"↔\",\n\t\"Leftrightarrow;\": \"⇔\",\n\t\"leftrightarrow;\": \"↔\",\n\t\"leftthreetimes;\": \"⋋\",\n\t\"LessSlantEqual;\": \"⩽\",\n\t\"LongRightArrow;\": \"⟶\",\n\t\"Longrightarrow;\": \"⟹\",\n\t\"longrightarrow;\": \"⟶\",\n\t\"looparrowright;\": \"↬\",\n\t\"LowerLeftArrow;\": \"↙\",\n\t\"NestedLessLess;\": \"≪\",\n\t\"NotGreaterLess;\": \"≹\",\n\t\"NotLessGreater;\": \"≸\",\n\t\"NotSubsetEqual;\": \"⊈\",\n\t\"NotVerticalBar;\": \"∤\",\n\t\"nshortparallel;\": \"∦\",\n\t\"ntriangleright;\": \"⋫\",\n\t\"OpenCurlyQuote;\": \"‘\",\n\t\"ReverseElement;\": \"∋\",\n\t\"rightarrowtail;\": \"↣\",\n\t\"rightharpoonup;\": \"⇀\",\n\t\"RightTeeVector;\": \"⥛\",\n\t\"RightVectorBar;\": \"⥓\",\n\t\"ShortDownArrow;\": \"↓\",\n\t\"ShortLeftArrow;\": \"←\",\n\t\"SquareSuperset;\": \"⊐\",\n\t\"TildeFullEqual;\": \"≅\",\n\t\"trianglelefteq;\": \"⊴\",\n\t\"upharpoonright;\": \"↾\",\n\t\"UpperLeftArrow;\": \"↖\",\n\t\"ZeroWidthSpace;\": \"​\",\n\t\"bigtriangledown;\": \"▽\",\n\t\"circlearrowleft;\": \"↺\",\n\t\"CloseCurlyQuote;\": \"’\",\n\t\"ContourIntegral;\": \"∮\",\n\t\"curvearrowright;\": \"↷\",\n\t\"DoubleDownArrow;\": \"⇓\",\n\t\"DoubleLeftArrow;\": \"⇐\",\n\t\"downharpoonleft;\": \"⇃\",\n\t\"DownRightVector;\": \"⇁\",\n\t\"leftharpoondown;\": \"↽\",\n\t\"leftrightarrows;\": \"⇆\",\n\t\"LeftRightVector;\": \"⥎\",\n\t\"LeftTriangleBar;\": \"⧏\",\n\t\"LeftUpTeeVector;\": \"⥠\",\n\t\"LeftUpVectorBar;\": \"⥘\",\n\t\"LowerRightArrow;\": \"↘\",\n\t\"nLeftrightarrow;\": \"⇎\",\n\t\"nleftrightarrow;\": \"↮\",\n\t\"NotGreaterEqual;\": \"≱\",\n\t\"NotGreaterTilde;\": \"≵\",\n\t\"NotHumpDownHump;\": \"≎̸\",\n\t\"NotLeftTriangle;\": \"⋪\",\n\t\"NotSquareSubset;\": \"⊏̸\",\n\t\"ntrianglelefteq;\": \"⋬\",\n\t\"OverParenthesis;\": \"⏜\",\n\t\"RightDownVector;\": \"⇂\",\n\t\"rightleftarrows;\": \"⇄\",\n\t\"rightsquigarrow;\": \"↝\",\n\t\"rightthreetimes;\": \"⋌\",\n\t\"ShortRightArrow;\": \"→\",\n\t\"straightepsilon;\": \"ϵ\",\n\t\"trianglerighteq;\": \"⊵\",\n\t\"UpperRightArrow;\": \"↗\",\n\t\"vartriangleleft;\": \"⊲\",\n\t\"circlearrowright;\": \"↻\",\n\t\"DiacriticalAcute;\": \"´\",\n\t\"DiacriticalGrave;\": \"`\",\n\t\"DiacriticalTilde;\": \"˜\",\n\t\"DoubleRightArrow;\": \"⇒\",\n\t\"DownArrowUpArrow;\": \"⇵\",\n\t\"downharpoonright;\": \"⇂\",\n\t\"EmptySmallSquare;\": \"◻\",\n\t\"GreaterEqualLess;\": \"⋛\",\n\t\"GreaterFullEqual;\": \"≧\",\n\t\"LeftAngleBracket;\": \"⟨\",\n\t\"LeftUpDownVector;\": \"⥑\",\n\t\"LessEqualGreater;\": \"⋚\",\n\t\"NonBreakingSpace;\": \" \",\n\t\"NotPrecedesEqual;\": \"⪯̸\",\n\t\"NotRightTriangle;\": \"⋫\",\n\t\"NotSucceedsEqual;\": \"⪰̸\",\n\t\"NotSucceedsTilde;\": \"≿̸\",\n\t\"NotSupersetEqual;\": \"⊉\",\n\t\"ntrianglerighteq;\": \"⋭\",\n\t\"rightharpoondown;\": \"⇁\",\n\t\"rightrightarrows;\": \"⇉\",\n\t\"RightTriangleBar;\": \"⧐\",\n\t\"RightUpTeeVector;\": \"⥜\",\n\t\"RightUpVectorBar;\": \"⥔\",\n\t\"twoheadleftarrow;\": \"↞\",\n\t\"UnderParenthesis;\": \"⏝\",\n\t\"UpArrowDownArrow;\": \"⇅\",\n\t\"vartriangleright;\": \"⊳\",\n\t\"blacktriangledown;\": \"▾\",\n\t\"blacktriangleleft;\": \"◂\",\n\t\"DoubleUpDownArrow;\": \"⇕\",\n\t\"DoubleVerticalBar;\": \"∥\",\n\t\"DownLeftTeeVector;\": \"⥞\",\n\t\"DownLeftVectorBar;\": \"⥖\",\n\t\"FilledSmallSquare;\": \"◼\",\n\t\"GreaterSlantEqual;\": \"⩾\",\n\t\"LeftDoubleBracket;\": \"⟦\",\n\t\"LeftDownTeeVector;\": \"⥡\",\n\t\"LeftDownVectorBar;\": \"⥙\",\n\t\"leftrightharpoons;\": \"⇋\",\n\t\"LeftTriangleEqual;\": \"⊴\",\n\t\"NegativeThinSpace;\": \"​\",\n\t\"NotGreaterGreater;\": \"≫̸\",\n\t\"NotLessSlantEqual;\": \"⩽̸\",\n\t\"NotNestedLessLess;\": \"⪡̸\",\n\t\"NotReverseElement;\": \"∌\",\n\t\"NotSquareSuperset;\": \"⊐̸\",\n\t\"NotTildeFullEqual;\": \"≇\",\n\t\"RightAngleBracket;\": \"⟩\",\n\t\"rightleftharpoons;\": \"⇌\",\n\t\"RightUpDownVector;\": \"⥏\",\n\t\"SquareSubsetEqual;\": \"⊑\",\n\t\"twoheadrightarrow;\": \"↠\",\n\t\"VerticalSeparator;\": \"❘\",\n\t\"blacktriangleright;\": \"▸\",\n\t\"DownRightTeeVector;\": \"⥟\",\n\t\"DownRightVectorBar;\": \"⥗\",\n\t\"LongLeftRightArrow;\": \"⟷\",\n\t\"Longleftrightarrow;\": \"⟺\",\n\t\"longleftrightarrow;\": \"⟷\",\n\t\"NegativeThickSpace;\": \"​\",\n\t\"NotLeftTriangleBar;\": \"⧏̸\",\n\t\"PrecedesSlantEqual;\": \"≼\",\n\t\"ReverseEquilibrium;\": \"⇋\",\n\t\"RightDoubleBracket;\": \"⟧\",\n\t\"RightDownTeeVector;\": \"⥝\",\n\t\"RightDownVectorBar;\": \"⥕\",\n\t\"RightTriangleEqual;\": \"⊵\",\n\t\"SquareIntersection;\": \"⊓\",\n\t\"SucceedsSlantEqual;\": \"≽\",\n\t\"DoubleLongLeftArrow;\": \"⟸\",\n\t\"DownLeftRightVector;\": \"⥐\",\n\t\"LeftArrowRightArrow;\": \"⇆\",\n\t\"leftrightsquigarrow;\": \"↭\",\n\t\"NegativeMediumSpace;\": \"​\",\n\t\"NotGreaterFullEqual;\": \"≧̸\",\n\t\"NotRightTriangleBar;\": \"⧐̸\",\n\t\"RightArrowLeftArrow;\": \"⇄\",\n\t\"SquareSupersetEqual;\": \"⊒\",\n\t\"CapitalDifferentialD;\": \"ⅅ\",\n\t\"DoubleLeftRightArrow;\": \"⇔\",\n\t\"DoubleLongRightArrow;\": \"⟹\",\n\t\"EmptyVerySmallSquare;\": \"▫\",\n\t\"NestedGreaterGreater;\": \"≫\",\n\t\"NotDoubleVerticalBar;\": \"∦\",\n\t\"NotGreaterSlantEqual;\": \"⩾̸\",\n\t\"NotLeftTriangleEqual;\": \"⋬\",\n\t\"NotSquareSubsetEqual;\": \"⋢\",\n\t\"OpenCurlyDoubleQuote;\": \"“\",\n\t\"ReverseUpEquilibrium;\": \"⥯\",\n\t\"CloseCurlyDoubleQuote;\": \"”\",\n\t\"DoubleContourIntegral;\": \"∯\",\n\t\"FilledVerySmallSquare;\": \"▪\",\n\t\"NegativeVeryThinSpace;\": \"​\",\n\t\"NotPrecedesSlantEqual;\": \"⋠\",\n\t\"NotRightTriangleEqual;\": \"⋭\",\n\t\"NotSucceedsSlantEqual;\": \"⋡\",\n\t\"DiacriticalDoubleAcute;\": \"˝\",\n\t\"NotSquareSupersetEqual;\": \"⋣\",\n\t\"NotNestedGreaterGreater;\": \"⪢̸\",\n\t\"ClockwiseContourIntegral;\": \"∲\",\n\t\"DoubleLongLeftRightArrow;\": \"⟺\",\n\t\"CounterClockwiseContourIntegral;\": \"∳\"\n};\n\n// lazy compute this to make this file tree-shakable for browser\r\nlet maxCRNameLength;\r\nconst decodeHtml = (rawText, asAttr) => {\r\n    let offset = 0;\r\n    const end = rawText.length;\r\n    let decodedText = '';\r\n    function advance(length) {\r\n        offset += length;\r\n        rawText = rawText.slice(length);\r\n    }\r\n    while (offset < end) {\r\n        const head = /&(?:#x?)?/i.exec(rawText);\r\n        if (!head || offset + head.index >= end) {\r\n            const remaining = end - offset;\r\n            decodedText += rawText.slice(0, remaining);\r\n            advance(remaining);\r\n            break;\r\n        }\r\n        // Advance to the \"&\".\r\n        decodedText += rawText.slice(0, head.index);\r\n        advance(head.index);\r\n        if (head[0] === '&') {\r\n            // Named character reference.\r\n            let name = '';\r\n            let value = undefined;\r\n            if (/[0-9a-z]/i.test(rawText[1])) {\r\n                if (!maxCRNameLength) {\r\n                    maxCRNameLength = Object.keys(namedCharacterReferences).reduce((max, name) => Math.max(max, name.length), 0);\r\n                }\r\n                for (let length = maxCRNameLength; !value && length > 0; --length) {\r\n                    name = rawText.slice(1, 1 + length);\r\n                    value = namedCharacterReferences[name];\r\n                }\r\n                if (value) {\r\n                    const semi = name.endsWith(';');\r\n                    if (asAttr &&\r\n                        !semi &&\r\n                        /[=a-z0-9]/i.test(rawText[name.length + 1] || '')) {\r\n                        decodedText += '&' + name;\r\n                        advance(1 + name.length);\r\n                    }\r\n                    else {\r\n                        decodedText += value;\r\n                        advance(1 + name.length);\r\n                    }\r\n                }\r\n                else {\r\n                    decodedText += '&' + name;\r\n                    advance(1 + name.length);\r\n                }\r\n            }\r\n            else {\r\n                decodedText += '&';\r\n                advance(1);\r\n            }\r\n        }\r\n        else {\r\n            // Numeric character reference.\r\n            const hex = head[0] === '&#x';\r\n            const pattern = hex ? /^&#x([0-9a-f]+);?/i : /^&#([0-9]+);?/;\r\n            const body = pattern.exec(rawText);\r\n            if (!body) {\r\n                decodedText += head[0];\r\n                advance(head[0].length);\r\n            }\r\n            else {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\r\n                let cp = Number.parseInt(body[1], hex ? 16 : 10);\r\n                if (cp === 0) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if (cp > 0x10ffff) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if (cp >= 0xd800 && cp <= 0xdfff) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if ((cp >= 0xfdd0 && cp <= 0xfdef) || (cp & 0xfffe) === 0xfffe) ;\r\n                else if ((cp >= 0x01 && cp <= 0x08) ||\r\n                    cp === 0x0b ||\r\n                    (cp >= 0x0d && cp <= 0x1f) ||\r\n                    (cp >= 0x7f && cp <= 0x9f)) {\r\n                    cp = CCR_REPLACEMENTS[cp] || cp;\r\n                }\r\n                decodedText += String.fromCodePoint(cp);\r\n                advance(body[0].length);\r\n            }\r\n        }\r\n    }\r\n    return decodedText;\r\n};\r\n// https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\r\nconst CCR_REPLACEMENTS = {\r\n    0x80: 0x20ac,\r\n    0x82: 0x201a,\r\n    0x83: 0x0192,\r\n    0x84: 0x201e,\r\n    0x85: 0x2026,\r\n    0x86: 0x2020,\r\n    0x87: 0x2021,\r\n    0x88: 0x02c6,\r\n    0x89: 0x2030,\r\n    0x8a: 0x0160,\r\n    0x8b: 0x2039,\r\n    0x8c: 0x0152,\r\n    0x8e: 0x017d,\r\n    0x91: 0x2018,\r\n    0x92: 0x2019,\r\n    0x93: 0x201c,\r\n    0x94: 0x201d,\r\n    0x95: 0x2022,\r\n    0x96: 0x2013,\r\n    0x97: 0x2014,\r\n    0x98: 0x02dc,\r\n    0x99: 0x2122,\r\n    0x9a: 0x0161,\r\n    0x9b: 0x203a,\r\n    0x9c: 0x0153,\r\n    0x9e: 0x017e,\r\n    0x9f: 0x0178\r\n};\n\nconst isRawTextContainer = /*#__PURE__*/ shared.makeMap('style,iframe,script,noscript', true);\r\nconst parserOptions = {\r\n    isVoidTag: shared.isVoidTag,\r\n    isNativeTag: tag => shared.isHTMLTag(tag) || shared.isSVGTag(tag),\r\n    isPreTag: tag => tag === 'pre',\r\n    decodeEntities: decodeHtml,\r\n    isBuiltInComponent: (tag) => {\r\n        if (compilerCore.isBuiltInType(tag, `Transition`)) {\r\n            return TRANSITION;\r\n        }\r\n        else if (compilerCore.isBuiltInType(tag, `TransitionGroup`)) {\r\n            return TRANSITION_GROUP;\r\n        }\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n    getNamespace(tag, parent) {\r\n        let ns = parent ? parent.ns : 0 /* HTML */;\r\n        if (parent && ns === 2 /* MATH_ML */) {\r\n            if (parent.tag === 'annotation-xml') {\r\n                if (tag === 'svg') {\r\n                    return 1 /* SVG */;\r\n                }\r\n                if (parent.props.some(a => a.type === 6 /* ATTRIBUTE */ &&\r\n                    a.name === 'encoding' &&\r\n                    a.value != null &&\r\n                    (a.value.content === 'text/html' ||\r\n                        a.value.content === 'application/xhtml+xml'))) {\r\n                    ns = 0 /* HTML */;\r\n                }\r\n            }\r\n            else if (/^m(?:[ions]|text)$/.test(parent.tag) &&\r\n                tag !== 'mglyph' &&\r\n                tag !== 'malignmark') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        else if (parent && ns === 1 /* SVG */) {\r\n            if (parent.tag === 'foreignObject' ||\r\n                parent.tag === 'desc' ||\r\n                parent.tag === 'title') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'svg') {\r\n                return 1 /* SVG */;\r\n            }\r\n            if (tag === 'math') {\r\n                return 2 /* MATH_ML */;\r\n            }\r\n        }\r\n        return ns;\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n    getTextMode({ tag, ns }) {\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'textarea' || tag === 'title') {\r\n                return 1 /* RCDATA */;\r\n            }\r\n            if (isRawTextContainer(tag)) {\r\n                return 2 /* RAWTEXT */;\r\n            }\r\n        }\r\n        return 0 /* DATA */;\r\n    }\r\n};\n\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nconst transformStyle = node => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        node.props.forEach((p, i) => {\r\n            if (p.type === 6 /* ATTRIBUTE */ && p.name === 'style' && p.value) {\r\n                // replace p with an expression node\r\n                node.props[i] = {\r\n                    type: 7 /* DIRECTIVE */,\r\n                    name: `bind`,\r\n                    arg: compilerCore.createSimpleExpression(`style`, true, p.loc),\r\n                    exp: parseInlineCSS(p.value.content, p.loc),\r\n                    modifiers: [],\r\n                    loc: p.loc\r\n                };\r\n            }\r\n        });\r\n    }\r\n};\r\nconst parseInlineCSS = (cssText, loc) => {\r\n    const normalized = shared.parseStringStyle(cssText);\r\n    return compilerCore.createSimpleExpression(JSON.stringify(normalized), false, loc, 3 /* CAN_STRINGIFY */);\r\n};\n\nfunction createDOMCompilerError(code, loc) {\r\n    return compilerCore.createCompilerError(code, loc, DOMErrorMessages );\r\n}\r\nconst DOMErrorMessages = {\r\n    [50 /* X_V_HTML_NO_EXPRESSION */]: `v-html is missing expression.`,\r\n    [51 /* X_V_HTML_WITH_CHILDREN */]: `v-html will override element children.`,\r\n    [52 /* X_V_TEXT_NO_EXPRESSION */]: `v-text is missing expression.`,\r\n    [53 /* X_V_TEXT_WITH_CHILDREN */]: `v-text will override element children.`,\r\n    [54 /* X_V_MODEL_ON_INVALID_ELEMENT */]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\r\n    [55 /* X_V_MODEL_ARG_ON_ELEMENT */]: `v-model argument is not supported on plain elements.`,\r\n    [56 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\r\n    [57 /* X_V_MODEL_UNNECESSARY_VALUE */]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\r\n    [58 /* X_V_SHOW_NO_EXPRESSION */]: `v-show is missing expression.`,\r\n    [59 /* X_TRANSITION_INVALID_CHILDREN */]: `<Transition> expects exactly one child element or component.`,\r\n    [60 /* X_IGNORED_SIDE_EFFECT_TAG */]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\r\n};\n\nconst transformVHtml = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(50 /* X_V_HTML_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(51 /* X_V_HTML_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            compilerCore.createObjectProperty(compilerCore.createSimpleExpression(`innerHTML`, true, loc), exp || compilerCore.createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformVText = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(52 /* X_V_TEXT_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(53 /* X_V_TEXT_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            compilerCore.createObjectProperty(compilerCore.createSimpleExpression(`textContent`, true), exp\r\n                ? compilerCore.createCallExpression(context.helperString(compilerCore.TO_DISPLAY_STRING), [exp], loc)\r\n                : compilerCore.createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const baseResult = compilerCore.transformModel(dir, node, context);\r\n    // base transform has errors OR component v-model (only need props)\r\n    if (!baseResult.props.length || node.tagType === 1 /* COMPONENT */) {\r\n        return baseResult;\r\n    }\r\n    if (dir.arg) {\r\n        context.onError(createDOMCompilerError(55 /* X_V_MODEL_ARG_ON_ELEMENT */, dir.arg.loc));\r\n    }\r\n    function checkDuplicatedValue() {\r\n        const value = compilerCore.findProp(node, 'value');\r\n        if (value) {\r\n            context.onError(createDOMCompilerError(57 /* X_V_MODEL_UNNECESSARY_VALUE */, value.loc));\r\n        }\r\n    }\r\n    const { tag } = node;\r\n    const isCustomElement = context.isCustomElement(tag);\r\n    if (tag === 'input' ||\r\n        tag === 'textarea' ||\r\n        tag === 'select' ||\r\n        isCustomElement) {\r\n        let directiveToUse = V_MODEL_TEXT;\r\n        let isInvalidType = false;\r\n        if (tag === 'input' || isCustomElement) {\r\n            const type = compilerCore.findProp(node, `type`);\r\n            if (type) {\r\n                if (type.type === 7 /* DIRECTIVE */) {\r\n                    // :type=\"foo\"\r\n                    directiveToUse = V_MODEL_DYNAMIC;\r\n                }\r\n                else if (type.value) {\r\n                    switch (type.value.content) {\r\n                        case 'radio':\r\n                            directiveToUse = V_MODEL_RADIO;\r\n                            break;\r\n                        case 'checkbox':\r\n                            directiveToUse = V_MODEL_CHECKBOX;\r\n                            break;\r\n                        case 'file':\r\n                            isInvalidType = true;\r\n                            context.onError(createDOMCompilerError(56 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */, dir.loc));\r\n                            break;\r\n                        default:\r\n                            // text type\r\n                            checkDuplicatedValue();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else if (compilerCore.hasDynamicKeyVBind(node)) {\r\n                // element has bindings with dynamic keys, which can possibly contain\r\n                // \"type\".\r\n                directiveToUse = V_MODEL_DYNAMIC;\r\n            }\r\n            else {\r\n                // text type\r\n                checkDuplicatedValue();\r\n            }\r\n        }\r\n        else if (tag === 'select') {\r\n            directiveToUse = V_MODEL_SELECT;\r\n        }\r\n        else {\r\n            // textarea\r\n            checkDuplicatedValue();\r\n        }\r\n        // inject runtime directive\r\n        // by returning the helper symbol via needRuntime\r\n        // the import will replaced a resolveDirective call.\r\n        if (!isInvalidType) {\r\n            baseResult.needRuntime = context.helper(directiveToUse);\r\n        }\r\n    }\r\n    else {\r\n        context.onError(createDOMCompilerError(54 /* X_V_MODEL_ON_INVALID_ELEMENT */, dir.loc));\r\n    }\r\n    // native vmodel doesn't need the `modelValue` props since they are also\r\n    // passed to the runtime as `binding.value`. removing it reduces code size.\r\n    baseResult.props = baseResult.props.filter(p => !(p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n        p.key.content === 'modelValue'));\r\n    return baseResult;\r\n};\n\nconst isEventOptionModifier = /*#__PURE__*/ shared.makeMap(`passive,once,capture`);\r\nconst isNonKeyModifier = /*#__PURE__*/ shared.makeMap(\r\n// event propagation management\r\n`stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`);\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ shared.makeMap('left,right');\r\nconst isKeyboardEvent = /*#__PURE__*/ shared.makeMap(`onkeyup,onkeydown,onkeypress`, true);\r\nconst resolveModifiers = (key, modifiers, context, loc) => {\r\n    const keyModifiers = [];\r\n    const nonKeyModifiers = [];\r\n    const eventOptionModifiers = [];\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n        const modifier = modifiers[i];\r\n        if (modifier === 'native' &&\r\n            compilerCore.checkCompatEnabled(\"COMPILER_V_ON_NATIVE\" /* COMPILER_V_ON_NATIVE */, context, loc)) {\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else if (isEventOptionModifier(modifier)) {\r\n            // eventOptionModifiers: modifiers for addEventListener() options,\r\n            // e.g. .passive & .capture\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else {\r\n            // runtimeModifiers: modifiers that needs runtime guards\r\n            if (maybeKeyModifier(modifier)) {\r\n                if (compilerCore.isStaticExp(key)) {\r\n                    if (isKeyboardEvent(key.content)) {\r\n                        keyModifiers.push(modifier);\r\n                    }\r\n                    else {\r\n                        nonKeyModifiers.push(modifier);\r\n                    }\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n            }\r\n            else {\r\n                if (isNonKeyModifier(modifier)) {\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        keyModifiers,\r\n        nonKeyModifiers,\r\n        eventOptionModifiers\r\n    };\r\n};\r\nconst transformClick = (key, event) => {\r\n    const isStaticClick = compilerCore.isStaticExp(key) && key.content.toLowerCase() === 'onclick';\r\n    return isStaticClick\r\n        ? compilerCore.createSimpleExpression(event, true)\r\n        : key.type !== 4 /* SIMPLE_EXPRESSION */\r\n            ? compilerCore.createCompoundExpression([\r\n                `(`,\r\n                key,\r\n                `) === \"onClick\" ? \"${event}\" : (`,\r\n                key,\r\n                `)`\r\n            ])\r\n            : key;\r\n};\r\nconst transformOn = (dir, node, context) => {\r\n    return compilerCore.transformOn(dir, node, context, baseResult => {\r\n        const { modifiers } = dir;\r\n        if (!modifiers.length)\r\n            return baseResult;\r\n        let { key, value: handlerExp } = baseResult.props[0];\r\n        const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);\r\n        // normalize click.right and click.middle since they don't actually fire\r\n        if (nonKeyModifiers.includes('right')) {\r\n            key = transformClick(key, `onContextmenu`);\r\n        }\r\n        if (nonKeyModifiers.includes('middle')) {\r\n            key = transformClick(key, `onMouseup`);\r\n        }\r\n        if (nonKeyModifiers.length) {\r\n            handlerExp = compilerCore.createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n                handlerExp,\r\n                JSON.stringify(nonKeyModifiers)\r\n            ]);\r\n        }\r\n        if (keyModifiers.length &&\r\n            // if event name is dynamic, always wrap with keys guard\r\n            (!compilerCore.isStaticExp(key) || isKeyboardEvent(key.content))) {\r\n            handlerExp = compilerCore.createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n                handlerExp,\r\n                JSON.stringify(keyModifiers)\r\n            ]);\r\n        }\r\n        if (eventOptionModifiers.length) {\r\n            const modifierPostfix = eventOptionModifiers.map(shared.capitalize).join('');\r\n            key = compilerCore.isStaticExp(key)\r\n                ? compilerCore.createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n                : compilerCore.createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\r\n        }\r\n        return {\r\n            props: [compilerCore.createObjectProperty(key, handlerExp)]\r\n        };\r\n    });\r\n};\n\nconst transformShow = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(58 /* X_V_SHOW_NO_EXPRESSION */, loc));\r\n    }\r\n    return {\r\n        props: [],\r\n        needRuntime: context.helper(V_SHOW)\r\n    };\r\n};\n\nconst warnTransitionChildren = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 1 /* COMPONENT */) {\r\n        const component = context.isBuiltInComponent(node.tag);\r\n        if (component === TRANSITION) {\r\n            return () => {\r\n                if (node.children.length && hasMultipleChildren(node)) {\r\n                    context.onError(createDOMCompilerError(59 /* X_TRANSITION_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nfunction hasMultipleChildren(node) {\r\n    // #1352 filter out potential comment nodes.\r\n    const children = (node.children = node.children.filter(c => c.type !== 3 /* COMMENT */ &&\r\n        !(c.type === 2 /* TEXT */ && !c.content.trim())));\r\n    const child = children[0];\r\n    return (children.length !== 1 ||\r\n        child.type === 11 /* FOR */ ||\r\n        (child.type === 9 /* IF */ && child.branches.some(hasMultipleChildren)));\r\n}\n\n/**\r\n * This module is Node-only.\r\n */\r\n/**\r\n * Regex for replacing placeholders for embedded constant variables\r\n * (e.g. import URL string constants generated by compiler-sfc)\r\n */\r\nconst expReplaceRE = /__VUE_EXP_START__(.*?)__VUE_EXP_END__/g;\r\n/**\r\n * Turn eligible hoisted static trees into stringified static nodes, e.g.\r\n *\r\n * ```js\r\n * const _hoisted_1 = createStaticVNode(`<div class=\"foo\">bar</div>`)\r\n * ```\r\n *\r\n * A single static vnode can contain stringified content for **multiple**\r\n * consecutive nodes (element and plain text), called a \"chunk\".\r\n * `@vue/runtime-dom` will create the content via innerHTML in a hidden\r\n * container element and insert all the nodes in place. The call must also\r\n * provide the number of nodes contained in the chunk so that during hydration\r\n * we can know how many nodes the static vnode should adopt.\r\n *\r\n * The optimization scans a children list that contains hoisted nodes, and\r\n * tries to find the largest chunk of consecutive hoisted nodes before running\r\n * into a non-hoisted node or the end of the list. A chunk is then converted\r\n * into a single static vnode and replaces the hoisted expression of the first\r\n * node in the chunk. Other nodes in the chunk are considered \"merged\" and\r\n * therefore removed from both the hoist list and the children array.\r\n *\r\n * This optimization is only performed in Node.js.\r\n */\r\nconst stringifyStatic = (children, context, parent) => {\r\n    // bail stringification for slot content\r\n    if (context.scopes.vSlot > 0) {\r\n        return;\r\n    }\r\n    let nc = 0; // current node count\r\n    let ec = 0; // current element with binding count\r\n    const currentChunk = [];\r\n    const stringifyCurrentChunk = (currentIndex) => {\r\n        if (nc >= 20 /* NODE_COUNT */ ||\r\n            ec >= 5 /* ELEMENT_WITH_BINDING_COUNT */) {\r\n            // combine all currently eligible nodes into a single static vnode call\r\n            const staticCall = compilerCore.createCallExpression(context.helper(compilerCore.CREATE_STATIC), [\r\n                JSON.stringify(currentChunk.map(node => stringifyNode(node, context)).join('')).replace(expReplaceRE, `\" + $1 + \"`),\r\n                // the 2nd argument indicates the number of DOM nodes this static vnode\r\n                // will insert / hydrate\r\n                String(currentChunk.length)\r\n            ]);\r\n            // replace the first node's hoisted expression with the static vnode call\r\n            replaceHoist(currentChunk[0], staticCall, context);\r\n            if (currentChunk.length > 1) {\r\n                for (let i = 1; i < currentChunk.length; i++) {\r\n                    // for the merged nodes, set their hoisted expression to null\r\n                    replaceHoist(currentChunk[i], null, context);\r\n                }\r\n                // also remove merged nodes from children\r\n                const deleteCount = currentChunk.length - 1;\r\n                children.splice(currentIndex - currentChunk.length + 1, deleteCount);\r\n                return deleteCount;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    let i = 0;\r\n    for (; i < children.length; i++) {\r\n        const child = children[i];\r\n        const hoisted = getHoistedNode(child);\r\n        if (hoisted) {\r\n            // presence of hoisted means child must be a stringifiable node\r\n            const node = child;\r\n            const result = analyzeNode(node);\r\n            if (result) {\r\n                // node is stringifiable, record state\r\n                nc += result[0];\r\n                ec += result[1];\r\n                currentChunk.push(node);\r\n                continue;\r\n            }\r\n        }\r\n        // we only reach here if we ran into a node that is not stringifiable\r\n        // check if currently analyzed nodes meet criteria for stringification.\r\n        // adjust iteration index\r\n        i -= stringifyCurrentChunk(i);\r\n        // reset state\r\n        nc = 0;\r\n        ec = 0;\r\n        currentChunk.length = 0;\r\n    }\r\n    // in case the last node was also stringifiable\r\n    stringifyCurrentChunk(i);\r\n};\r\nconst getHoistedNode = (node) => ((node.type === 1 /* ELEMENT */ && node.tagType === 0 /* ELEMENT */) ||\r\n    node.type == 12 /* TEXT_CALL */) &&\r\n    node.codegenNode &&\r\n    node.codegenNode.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n    node.codegenNode.hoisted;\r\nconst dataAriaRE = /^(data|aria)-/;\r\nconst isStringifiableAttr = (name, ns) => {\r\n    return ((ns === 0 /* HTML */\r\n        ? shared.isKnownHtmlAttr(name)\r\n        : ns === 1 /* SVG */\r\n            ? shared.isKnownSvgAttr(name)\r\n            : false) || dataAriaRE.test(name));\r\n};\r\nconst replaceHoist = (node, replacement, context) => {\r\n    const hoistToReplace = node.codegenNode.hoisted;\r\n    context.hoists[context.hoists.indexOf(hoistToReplace)] = replacement;\r\n};\r\nconst isNonStringifiable = /*#__PURE__*/ shared.makeMap(`caption,thead,tr,th,tbody,td,tfoot,colgroup,col`);\r\n/**\r\n * for a hoisted node, analyze it and return:\r\n * - false: bailed (contains non-stringifiable props or runtime constant)\r\n * - [nc, ec] where\r\n *   - nc is the number of nodes inside\r\n *   - ec is the number of element with bindings inside\r\n */\r\nfunction analyzeNode(node) {\r\n    if (node.type === 1 /* ELEMENT */ && isNonStringifiable(node.tag)) {\r\n        return false;\r\n    }\r\n    if (node.type === 12 /* TEXT_CALL */) {\r\n        return [1, 0];\r\n    }\r\n    let nc = 1; // node count\r\n    let ec = node.props.length > 0 ? 1 : 0; // element w/ binding count\r\n    let bailed = false;\r\n    const bail = () => {\r\n        bailed = true;\r\n        return false;\r\n    };\r\n    // TODO: check for cases where using innerHTML will result in different\r\n    // output compared to imperative node insertions.\r\n    // probably only need to check for most common case\r\n    // i.e. non-phrasing-content tags inside `<p>`\r\n    function walk(node) {\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i];\r\n            // bail on non-attr bindings\r\n            if (p.type === 6 /* ATTRIBUTE */ &&\r\n                !isStringifiableAttr(p.name, node.ns)) {\r\n                return bail();\r\n            }\r\n            if (p.type === 7 /* DIRECTIVE */ && p.name === 'bind') {\r\n                // bail on non-attr bindings\r\n                if (p.arg &&\r\n                    (p.arg.type === 8 /* COMPOUND_EXPRESSION */ ||\r\n                        (p.arg.isStatic && !isStringifiableAttr(p.arg.content, node.ns)))) {\r\n                    return bail();\r\n                }\r\n                if (p.exp &&\r\n                    (p.exp.type === 8 /* COMPOUND_EXPRESSION */ ||\r\n                        p.exp.constType < 3 /* CAN_STRINGIFY */)) {\r\n                    return bail();\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            nc++;\r\n            const child = node.children[i];\r\n            if (child.type === 1 /* ELEMENT */) {\r\n                if (child.props.length > 0) {\r\n                    ec++;\r\n                }\r\n                walk(child);\r\n                if (bailed) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    return walk(node) ? [nc, ec] : false;\r\n}\r\nfunction stringifyNode(node, context) {\r\n    if (shared.isString(node)) {\r\n        return node;\r\n    }\r\n    if (shared.isSymbol(node)) {\r\n        return ``;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            return stringifyElement(node, context);\r\n        case 2 /* TEXT */:\r\n            return shared.escapeHtml(node.content);\r\n        case 3 /* COMMENT */:\r\n            return `<!--${shared.escapeHtml(node.content)}-->`;\r\n        case 5 /* INTERPOLATION */:\r\n            return shared.escapeHtml(shared.toDisplayString(evaluateConstant(node.content)));\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return shared.escapeHtml(evaluateConstant(node));\r\n        case 12 /* TEXT_CALL */:\r\n            return stringifyNode(node.content, context);\r\n        default:\r\n            // static trees will not contain if/for nodes\r\n            return '';\r\n    }\r\n}\r\nfunction stringifyElement(node, context) {\r\n    let res = `<${node.tag}`;\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            res += ` ${p.name}`;\r\n            if (p.value) {\r\n                res += `=\"${shared.escapeHtml(p.value.content)}\"`;\r\n            }\r\n        }\r\n        else if (p.type === 7 /* DIRECTIVE */ && p.name === 'bind') {\r\n            const exp = p.exp;\r\n            if (exp.content[0] === '_') {\r\n                // internally generated string constant references\r\n                // e.g. imported URL strings via compiler-sfc transformAssetUrl plugin\r\n                res += ` ${p.arg.content}=\"__VUE_EXP_START__${exp.content}__VUE_EXP_END__\"`;\r\n                continue;\r\n            }\r\n            // constant v-bind, e.g. :foo=\"1\"\r\n            let evaluated = evaluateConstant(exp);\r\n            if (evaluated != null) {\r\n                const arg = p.arg && p.arg.content;\r\n                if (arg === 'class') {\r\n                    evaluated = shared.normalizeClass(evaluated);\r\n                }\r\n                else if (arg === 'style') {\r\n                    evaluated = shared.stringifyStyle(shared.normalizeStyle(evaluated));\r\n                }\r\n                res += ` ${p.arg.content}=\"${shared.escapeHtml(evaluated)}\"`;\r\n            }\r\n        }\r\n    }\r\n    if (context.scopeId) {\r\n        res += ` ${context.scopeId}`;\r\n    }\r\n    res += `>`;\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        res += stringifyNode(node.children[i], context);\r\n    }\r\n    if (!shared.isVoidTag(node.tag)) {\r\n        res += `</${node.tag}>`;\r\n    }\r\n    return res;\r\n}\r\n// __UNSAFE__\r\n// Reason: eval.\r\n// It's technically safe to eval because only constant expressions are possible\r\n// here, e.g. `{{ 1 }}` or `{{ 'foo' }}`\r\n// in addition, constant exps bail on presence of parens so you can't even\r\n// run JSFuck in here. But we mark it unsafe for security review purposes.\r\n// (see compiler-core/src/transformExpressions)\r\nfunction evaluateConstant(exp) {\r\n    if (exp.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        return new Function(`return ${exp.content}`)();\r\n    }\r\n    else {\r\n        // compound\r\n        let res = ``;\r\n        exp.children.forEach(c => {\r\n            if (shared.isString(c) || shared.isSymbol(c)) {\r\n                return;\r\n            }\r\n            if (c.type === 2 /* TEXT */) {\r\n                res += c.content;\r\n            }\r\n            else if (c.type === 5 /* INTERPOLATION */) {\r\n                res += shared.toDisplayString(evaluateConstant(c.content));\r\n            }\r\n            else {\r\n                res += evaluateConstant(c);\r\n            }\r\n        });\r\n        return res;\r\n    }\r\n}\n\nconst ignoreSideEffectTags = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 0 /* ELEMENT */ &&\r\n        (node.tag === 'script' || node.tag === 'style')) {\r\n        context.onError(createDOMCompilerError(60 /* X_IGNORED_SIDE_EFFECT_TAG */, node.loc));\r\n        context.removeNode();\r\n    }\r\n};\n\nconst DOMNodeTransforms = [\r\n    transformStyle,\r\n    ...([warnTransitionChildren] )\r\n];\r\nconst DOMDirectiveTransforms = {\r\n    cloak: compilerCore.noopDirectiveTransform,\r\n    html: transformVHtml,\r\n    text: transformVText,\r\n    model: transformModel,\r\n    on: transformOn,\r\n    show: transformShow\r\n};\r\nfunction compile(template, options = {}) {\r\n    return compilerCore.baseCompile(template, shared.extend({}, parserOptions, options, {\r\n        nodeTransforms: [\r\n            // ignore <script> and <tag>\r\n            // this is not put inside DOMNodeTransforms because that list is used\r\n            // by compiler-ssr to generate vnode fallback branches\r\n            ignoreSideEffectTags,\r\n            ...DOMNodeTransforms,\r\n            ...(options.nodeTransforms || [])\r\n        ],\r\n        directiveTransforms: shared.extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),\r\n        transformHoist: stringifyStatic\r\n    }));\r\n}\r\nfunction parse(template, options = {}) {\r\n    return compilerCore.baseParse(template, shared.extend({}, parserOptions, options));\r\n}\n\nObject.keys(compilerCore).forEach(function (k) {\n  if (k !== 'default') exports[k] = compilerCore[k];\n});\nexports.DOMDirectiveTransforms = DOMDirectiveTransforms;\nexports.DOMNodeTransforms = DOMNodeTransforms;\nexports.TRANSITION = TRANSITION;\nexports.TRANSITION_GROUP = TRANSITION_GROUP;\nexports.V_MODEL_CHECKBOX = V_MODEL_CHECKBOX;\nexports.V_MODEL_DYNAMIC = V_MODEL_DYNAMIC;\nexports.V_MODEL_RADIO = V_MODEL_RADIO;\nexports.V_MODEL_SELECT = V_MODEL_SELECT;\nexports.V_MODEL_TEXT = V_MODEL_TEXT;\nexports.V_ON_WITH_KEYS = V_ON_WITH_KEYS;\nexports.V_ON_WITH_MODIFIERS = V_ON_WITH_MODIFIERS;\nexports.V_SHOW = V_SHOW;\nexports.compile = compile;\nexports.createDOMCompilerError = createDOMCompilerError;\nexports.parse = parse;\nexports.parserOptions = parserOptions;\nexports.transformStyle = transformStyle;\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    // Split the content into individual lines but capture the newline sequence\r\n    // that separated each line. This is important because the actual sequence is\r\n    // needed to properly take into account the full line length for offset\r\n    // comparison\r\n    let lines = source.split(/(\\r?\\n)/);\r\n    // Separate the lines and newline sequences into separate arrays for easier referencing\r\n    const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\r\n    lines = lines.filter((_, idx) => idx % 2 === 0);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count +=\r\n            lines[i].length +\r\n                ((newlineSequences[i] && newlineSequences[i].length) || 0);\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                const newLineSeqLength = (newlineSequences[j] && newlineSequences[j].length) || 0;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - (lineLength + newLineSeqLength));\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + newLineSeqLength;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\n/**\r\n * Boolean attributes should be included if the value is truthy or ''.\r\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\r\n */\r\nfunction includeBooleanAttr(value) {\r\n    return !!value || value === '';\r\n}\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownHtmlAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nconst isKnownSvgAttr = /*#__PURE__*/ makeMap(`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = isString(item)\r\n                ? parseStringStyle(item)\r\n                : normalizeStyle(item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isString(value)) {\r\n        return value;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles || isString(styles)) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\r\nfunction normalizeProps(props) {\r\n    if (!props)\r\n        return null;\r\n    let { class: klass, style } = props;\r\n    if (klass && !isString(klass)) {\r\n        props.class = normalizeClass(klass);\r\n    }\r\n    if (style) {\r\n        props.style = normalizeStyle(style);\r\n    }\r\n    return props;\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\r\n */\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\r\n */\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\r\n */\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.slice(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return isString(val)\r\n        ? val\r\n        : val == null\r\n            ? ''\r\n            : isArray(val) ||\r\n                (isObject(val) &&\r\n                    (val.toString === objectToString || !isFunction(val.toString)))\r\n                ? JSON.stringify(val, replacer, 2)\r\n                : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    // can't use isRef here since @vue/shared has no deps\r\n    if (val && val.__v_isRef) {\r\n        return replacer(_key, val.value);\r\n    }\r\n    else if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,ref_for,ref_key,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => str ? `on${capitalize(str)}` : ``);\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, includeBooleanAttr, invokeArrayFns, isArray, isBooleanAttr, isBuiltInDirective, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownHtmlAttr, isKnownSvgAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeProps, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n"],"names":["defaultOnError","error","defaultOnWarn","msg","createCompilerError","code","loc","messages","additionalMessage","SyntaxError","String","FRAGMENT","Symbol","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_ELEMENT_BLOCK","CREATE_VNODE","CREATE_ELEMENT_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","RESOLVE_FILTER","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","NORMALIZE_CLASS","NORMALIZE_STYLE","NORMALIZE_PROPS","GUARD_REACTIVE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_CTX","UNREF","IS_REF","WITH_MEMO","IS_MEMO_SAME","helperNameMap","registerRuntimeHelpers","helpers","Object","getOwnPropertySymbols","forEach","s","locStub","source","start","line","column","offset","end","createRoot","children","type","components","directives","hoists","imports","cached","temps","codegenNode","undefined","createVNodeCall","context","tag","props","patchFlag","dynamicProps","isBlock","disableTracking","isComponent","helper","getVNodeBlockHelper","inSSR","getVNodeHelper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","key","value","isString","createSimpleExpression","content","isStatic","constType","createInterpolation","createCompoundExpression","createCallExpression","callee","args","arguments","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","test","consequent","alternate","createCacheExpression","index","isVNode","createBlockStatement","body","createTemplateLiteral","createIfStatement","createAssignmentExpression","left","right","createSequenceExpression","expressions","createReturnStatement","isStaticExp","p","isBuiltInType","expected","hyphenate","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","name","validFirstIdentCharRE","validIdentCharRE","whitespaceRE","isMemberExpressionBrowser","path","trim","replace","state","stateStack","currentOpenBracketCount","currentOpenParensCount","currentStringType","i","length","char","charAt","push","pop","isMemberExpressionNode","NOOP","isMemberExpression","getInnerRange","newLoc","slice","advancePositionWithClone","pos","numberOfCharacters","advancePositionWithMutation","extend","linesCount","lastNewLinePos","charCodeAt","assert","condition","Error","findDir","node","allowEmpty","exp","findProp","dynamicOnly","isStaticArgOf","arg","hasDynamicKeyVBind","some","isText","isVSlot","isTemplateNode","tagType","isSlotOutlet","ssr","propsHelperSet","Set","getUnnormalizedProps","callPath","has","concat","injectProp","prop","propsWithInjection","parentCall","ret","first","unshift","alreadyExists","propKeyName","toValidAssetId","searchValue","replaceValue","toString","hasScopeRef","ids","keys","c","branches","b","isObject","getMemoedVNodeCall","makeBlock","removeHelper","deprecationData","message","link","getCompatValue","config","options","compatConfig","isCompatEnabled","mode","checkCompatEnabled","warnDeprecation","err","onWarn","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","delimiters","getNamespace","getTextMode","isVoidTag","NO","isPreTag","isCustomElement","decodeEntities","rawText","_","p1","onError","comments","baseParse","rawOptions","originalSource","inPre","inVPre","createParserContext","getCursor","parseChildren","getSelection","ancestors","parent","last","ns","nodes","isEnd","startsWith","parseInterpolation","emitError","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseElement","isSpecialTemplateDirective","parseText","isArray","pushNode","removedWhitespace","shouldCondense","whitespace","prev","next","filter","Boolean","match","exec","prevIndex","nestedIndex","indexOf","contentStart","closeIndex","wasInPre","wasInVPre","element","isPreBoundary","isVPreBoundary","isSelfClosing","inlineTemplateProp","find","startsWithEndTagOpen","toLowerCase","makeMap","advanceSpaces","cursor","currentSource","parseAttributes","isBuiltInComponent","isNativeTag","attributeNames","attr","parseAttribute","nameSet","add","pattern","m","quote","isQuoted","endIndex","parseTextData","unexpectedChars","parseAttributeValue","isPropShorthand","dirName","startOffset","lastIndexOf","getNewPosition","endsWith","valueLoc","modifiers","split","includes","splice","open","close","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endTokens","xs","searchString","hoistStatic","root","walk","isSingleElementRoot","child","doNotHoistNode","originalCount","hoistedCount","constantType","getConstantType","hoist","flag","getPatchFlag","getGeneratedPropsConstantType","getNodeProps","scopes","vSlot","transformHoist","constantCache","get","set","returnType","generatedPropsType","childType","expType","isSymbol","allowHoistedHelperSet","getConstantTypeOfHelperCall","keyType","valueType","parseInt","createTransformContext","filename","prefixIdentifiers","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","scopeId","slotted","ssrCssVars","bindingMetadata","EMPTY_OBJ","inline","isTS","nameMatch","selfName","capitalize","camelize","Map","identifiers","create","vFor","vPre","vOnce","currentNode","childIndex","inVOnce","count","currentCount","delete","helperString","replaceNode","removeNode","list","removalIndex","onNodeRemoved","addIdentifiers","removeIdentifiers","identifier","hoisted","cache","filters","transform","traverseNode","PatchFlagNames","createRootCodegen","exitFns","onExit","nodeRemoved","traverseChildren","createStructuralDirectiveTransform","fn","matches","n","PURE_ANNOTATION","generate","ast","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","ssrRuntimeModuleName","indentLevel","pure","map","indent","deindent","withoutNewLine","repeat","createCodegenContext","onContextCreated","hasHelpers","useWithBlock","VueBinding","aliasHelper","join","genNode","genHoists","genFunctionPreamble","genAssets","preamble","toJSON","assets","resolver","id","maybeSelfReference","JSON","stringify","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genComment","genNullableArgs","genVNodeCall","genCallExpression","genExpressionAsPropertyKey","genObjectExpression","genArrayExpression","isNonScopedSlot","genFunctionExpression","needNewline","needsParens","isNested","genConditionalExpression","genCacheExpression","walkIdentifiers","onIdentifier","includeAll","parentStack","knownIds","isReferencedIdentifier","isInDestructureAssignment","walkFunctionParams","onIdent","extractIdentifiers","walkBlockDeclarations","block","stmt","declare","decl","declarations","param","object","argument","isFunctionType","isStaticProperty","computed","isStaticPropertyKey","RegExp","transformExpression","processExpression","dir","asParams","asRawStatements","localVars","transformIf","processIf","ifNode","branch","isRoot","siblings","sibling","createCodegenNodeForBranch","parentCondition","getParentCondition","processCodegen","createIfBranch","userKey","keyIndex","createChildrenCodegenNode","keyProperty","firstChild","vnodeCall","transformFor","processFor","forNode","renderExp","isTemplate","memo","keyProp","keyExp","isStableFragment","fragmentFlag","childBlock","needFragmentWrapper","slotOutlet","loop","createForLoopParams","parseResult","parseForExpression","valueAlias","keyAlias","objectIndexAlias","forAliasRE","forIteratorRE","stripParensRE","input","inMatch","LHS","RHS","result","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","range","memoArgs","createParamsList","defaultFallback","trackSlotScopes","trackVForSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","dynamicSlots","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","j","conditional","buildDefaultSlotProperty","isNonWhitespaceContent","slotFlag","hasForwardedSlots","slots","directiveImportMap","WeakMap","transformElement","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","vnodeTag","resolveComponentType","shouldUseBlock","propsBuildResult","buildProps","buildDirectiveArgs","hasDynamicTextChild","propsNamesString","l","stringifyDynamicPropNames","isExplicitDynamic","isComponentTag","isProp","isDir","builtIn","elementLoc","mergeArgs","runtimeDirectives","hasChildren","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","analyzePatchFlag","isEventHandler","isOn","isReservedProp","isVBind","isVOn","dedupeProperties","directiveTransform","needRuntime","isBuiltInDirective","propsExpression","classKeyIndex","styleKeyIndex","hasDynamicKey","isHandlerKey","classProp","styleProp","knownProps","deduped","existing","mergeAsArray","incoming","dirArgs","runtime","trueExpression","modifier","camelizeRE","str","toUpperCase","cacheStringFunction","transformSlotOutlet","processSlotOutlet","slotArgs","expectedLen","nonNameProps","fnExpRE","transformOn","augmentor","eventName","rawName","toHandlerKey","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","_node","injectPrefix","prefix","transformText","currentContainer","hasText","callArgs","seen","WeakSet","transformOnce","cur","transformModel","createTransformProps","rawExp","expString","propName","assignmentExp","modifiersKey","validDivisionCharRE","transformFilter","rewriteFilter","parseFilter","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","pushFilter","wrapFilter","seen$1","transformMemo","getBaseTransformPreset","on","bind","model","baseCompile","template","isModuleMode","noopDirectiveTransform","defineProperty","exports","compilerCore","shared","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","V_SHOW","TRANSITION","TRANSITION_GROUP","namedCharacterReferences","GT","LT","AMP","deg","ETH","eth","not","REG","reg","shy","uml","yen","Auml","auml","cent","COPY","copy","Euml","euml","Iuml","iuml","macr","nbsp","ordf","ordm","Ouml","ouml","para","QUOT","sect","sup1","sup2","sup3","Uuml","uuml","yuml","Acirc","acirc","acute","AElig","aelig","Aring","aring","cedil","Ecirc","ecirc","Icirc","icirc","iexcl","laquo","micro","Ocirc","ocirc","pound","raquo","szlig","THORN","thorn","times","Ucirc","ucirc","Aacute","aacute","Agrave","agrave","Atilde","atilde","brvbar","Ccedil","ccedil","curren","divide","Eacute","eacute","Egrave","egrave","frac12","frac14","frac34","Iacute","iacute","Igrave","igrave","iquest","middot","Ntilde","ntilde","Oacute","oacute","Ograve","ograve","Oslash","oslash","Otilde","otilde","plusmn","Uacute","uacute","Ugrave","ugrave","Yacute","yacute","maxCRNameLength","CCR_REPLACEMENTS","isRawTextContainer","parserOptions","isHTMLTag","isSVGTag","asAttr","decodedText","advance","head","remaining","reduce","max","Math","semi","hex","cp","Number","fromCodePoint","a","transformStyle","parseInlineCSS","cssText","normalized","parseStringStyle","createDOMCompilerError","DOMErrorMessages","isEventOptionModifier","isNonKeyModifier","maybeKeyModifier","isKeyboardEvent","transformClick","event","hasMultipleChildren","expReplaceRE","stringifyStatic","nc","ec","currentChunk","stringifyCurrentChunk","currentIndex","staticCall","stringifyNode","replaceHoist","deleteCount","getHoistedNode","analyzeNode","dataAriaRE","isStringifiableAttr","isKnownHtmlAttr","isKnownSvgAttr","replacement","hoistToReplace","isNonStringifiable","bailed","bail","res","escapeHtml","evaluated","evaluateConstant","normalizeClass","stringifyStyle","normalizeStyle","stringifyElement","toDisplayString","Function","ignoreSideEffectTags","DOMNodeTransforms","DOMDirectiveTransforms","cloak","html","text","baseResult","checkDuplicatedValue","directiveToUse","isInvalidType","handlerExp","keyModifiers","nonKeyModifiers","eventOptionModifiers","resolveModifiers","modifierPostfix","show","k","compile","parse","expectsLowerCase","val","slotFlagsText","isGloballyWhitelisted","generateCodeFrame","lines","newlineSequences","idx","lineLength","newLineSeqLength","pad","min","specialBooleanAttrs","isSpecialBooleanAttr","isBooleanAttr","includeBooleanAttr","unsafeAttrCharRE","attrValidationCache","isSSRSafeAttrName","hasOwnProperty","isUnsafe","console","propsToAttrMap","acceptCharset","className","htmlFor","httpEquiv","isNoUnitNumericStyleProp","item","listDelimiterRE","propertyDelimiterRE","tmp","styles","normalizedKey","normalizeProps","class","klass","style","escapeRE","string","escaped","lastIndex","commentStripRE","escapeHtmlComment","src","looseEqual","aValidType","isDate","bValidType","getTime","equal","looseCompareArrays","aHasKey","bHasKey","looseIndexOf","arr","findIndex","objectToString","isFunction","replacer","_key","__v_isRef","isMap","size","entries","isSet","values","isPlainObject","EMPTY_ARR","onRE","isModelListener","assign","remove","el","prototype","hasOwn","call","Array","toTypeString","Date","isPromise","then","catch","toRawType","isIntegerKey","hyphenateRE","hasChanged","oldValue","is","invokeArrayFns","fns","def","obj","configurable","enumerable","toNumber","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","self","window","global"],"sourceRoot":""}